{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///xtag.min.js","webpack:///webpack/bootstrap 4080550084571666500a?9193","webpack:///./xtag.js","webpack:///./context.js?64c3","webpack:///./polyfills/CustomEventCommon.js?a297","webpack:///./polyfills/performance.js","webpack:///./polyfills/matches.js","webpack:///./polyfills/CustomEvent.js","webpack:///./polyfills/DOMAttrModified.js","webpack:///../~/dom-token-list-polyfill/src/token-list.js","webpack:///../~/webcomponents.js/src/WeakMap/WeakMap.js","webpack:///../~/webcomponents.js/src/MutationObserver/MutationObserver.js","webpack:///../~/webcomponents.js/src/CustomElements/base.js","webpack:///../~/webcomponents.js/src/CustomElements/traverse.js","webpack:///../~/webcomponents.js/src/CustomElements/observe.js","webpack:///../~/webcomponents.js/src/CustomElements/upgrade.js","webpack:///../~/webcomponents.js/src/CustomElements/register.js","webpack:///../~/webcomponents.js/src/CustomElements/boot.js","webpack:///../~/webcomponents.js/src/HTMLImports/base.js","webpack:///../~/webcomponents.js/src/HTMLImports/module.js","webpack:///../~/webcomponents.js/src/HTMLImports/path.js","webpack:///../~/webcomponents.js/src/HTMLImports/xhr.js","webpack:///../~/webcomponents.js/src/HTMLImports/Loader.js","webpack:///../~/webcomponents.js/src/HTMLImports/Observer.js","webpack:///../~/webcomponents.js/src/HTMLImports/parser.js","webpack:///../~/webcomponents.js/src/HTMLImports/importer.js","webpack:///../~/webcomponents.js/src/HTMLImports/dynamic.js","webpack:///../~/webcomponents.js/src/HTMLImports/boot.js","webpack:///../~/handjs/hand.base.js","webpack:///../~/x-tag/src/core.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p",0,"_interopRequireDefault","obj","__esModule","default","_context","_context2","_core","_core2","Platform",116,"Object","defineProperty","value","eval",125,"issetCustomEvent","Boolean","document","createEvent","e","CustomEventCommon","eventName","params","bubbles","cancelable","evt","initCustomEvent","detail","initEvent","prototype","Event",141,"performance","now","nowOffset","timing","navigationStart","navigationStar","Date",142,"indexOf","Array","proto","Element","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","selector","parentNode","ownerDocument","querySelectorAll",143,"_CustomEventCommon","_CustomEventCommon2","CustomEvent",144,"attrModifiedWorks","listener","htmlElement","documentElement","addEventListener","setAttribute","removeEventListener","removeAttribute","__setAttribute","attrName","newVal","prevVal","getAttribute","initMutationEvent","ADDITION","MODIFICATION","dispatchEvent","__removeAttribute","REMOVAL",145,"DOMTokenList","el","_element","className","_classCache","i","classes","replace","split","length","push","setToClassName","join","defineElementGetter","prop","getter","get","__defineGetter__","window","slice","splice","add","token","contains","item","index","remove","toString","toggle",146,"WeakMap","counter","name","Math","random","set","key","entry","writable","undefined","delete","has",147,"global","scheduleCallback","observer","scheduledObservers","isScheduled","setImmediate","dispatchCallbacks","wrapIfNeeded","node","ShadowDOMPolyfill","observers","sort","o1","o2","uid_","anyNonEmpty","forEach","queue","takeRecords","removeTransientObserversFor","callback_","nodes_","registrations","registrationsTable","registration","removeTransientObservers","forEachAncestorAndObserverEnqueueRecord","target","callback","j","options","subtree","record","enqueue","JsMutationObserver","records_","uidCounter","MutationRecord","type","addedNodes","removedNodes","previousSibling","nextSibling","attributeName","attributeNamespace","oldValue","copyMutationRecord","original","getRecord","currentRecord","getRecordWithOldValue","recordWithOldValue","clearRecords","recordRepresentsCurrentMutation","selectRecord","lastRecord","newRecord","Registration","transientObservedNodes","test","navigator","userAgent","setTimeout","setImmediateQueue","sentinel","String","data","func","postMessage","observe","childList","attributes","characterData","attributeOldValue","attributeFilter","characterDataOldValue","SyntaxError","removeListeners","addListeners","disconnect","copyOfRecords","records","recordToReplaceLast","addListeners_","removeListeners_","addTransientObserver","handleEvent","stopImmediatePropagation","namespace","relatedNode","namespaceURI","attrChange","MutationEvent","prevValue","changedNode","MutationObserver","_isPolyfilled","self",148,"CustomElements","flags","scope","addModule","initializeModules","hasNative","registerElement","isIE","useNative","register","HTMLImports",149,"forSubtree","cb","findAllElements","forRoots","find","firstElementChild","firstChild","nodeType","Node","ELEMENT_NODE","nextElementSibling","shadowRoot","olderShadowRoot","forDocumentTree","doc","_forDocumentTree","processingDocuments","wrap","n","imports","IMPORT_LINK_TYPE","l",150,"addedNode","isAttached","added","addedSubtree","upgrade","attached","deferMutation","fn","pendingMutations","isPendingMutations","takeMutations","$p","element","hasThrottledAttached","_attached","__upgraded__","__attached","attachedCallback","detachedNode","detached","_detached","detachedCallback","inDocument","DOCUMENT_FRAGMENT_NODE","host","watchShadow","__watched","dom","console","log","localName","handler","mutations","mx","d","u","URL","_URL","shift","pop","group","groupEnd","__observer","inRoot","bind","upgradeDocument","isMainDocument","upgradeDocumentTree","hasPolyfillMutations","originalCreateShadowRoot","createShadowRoot","upgradeSubtree","upgradeAll",151,"HTMLTemplateElement","decorate","is","definition","getRegisteredDefinition","tag","upgradeWithDefinition","implementPrototype","created","__proto__","customMixin","inTarget","inSrc","inNative","used","HTMLElement","k","keys","getOwnPropertyNames","getOwnPropertyDescriptor","getPrototypeOf","createdCallback",152,"Error","isReservedTag","create","__name","toLowerCase","lifecycle","ancestry","resolveTagName","resolvePrototypeChain","overrideAttributeApi","registerDefinition","ctor","generateConstructor","constructor","ready","_polyfilled","changeAttribute","operation","apply","arguments","newValue","attributeChangedCallback","reservedTagList","extnds","extendee","concat","a","baseTag","nativePrototype","inst","createElement","ancestor","foundPrototype","warn","instantiate","domCreateElement","registry","createElementNS","typeExtension","HTML_NAMESPACE","domCreateElementNS","wrapDomMethodToForceUpgrade","methodName","orig","isInstance","base",153,"bootstrap","requestAnimationFrame","f","readyTime","elapsed","nop","unwrap","unwrapIfNeeded","__importsParsingHook","elt","readyState","eager","attachEvent","loadEvent",154,"whenReady","rootDocument","whenDocumentReady","watchImportsLoad","isDocumentReady","requiredReadyState","checkReady","READY_EVENT","markTargetLoaded","event","__loaded","checkDone","parsedCount","importCount","allImports","loadedImports","newImports","errorImports","loadedImport","errorLoadingImport","imp","isImportLoaded","link","__importParsed","handleImports","nodes","isImport","handleImport","rel","hasShadowDOMPolyfill","currentScriptDescriptor","script","currentScript","scripts","configurable","mxns","head","getTime",155,156,"CSS_URL_REGEXP","CSS_IMPORT_REGEXP","path","resolveUrlsInStyle","style","linkUrl","resolver","textContent","resolveUrlsInCssText","cssText","urlObj","r","replaceUrls","text","regexp","pre","url","post","urlPath","href",157,"xhr","async","ok","request","status","load","next","nextContext","XMLHttpRequest","debug","bust","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","error","message","response","responseText","send","loadDocument","responseType",158,"Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","addNodes","require","addNode","src","__nodeUrl","dedupe","fetch","tail","match","pieces","header","body","atob","decodeURIComponent","receive","receiveXhr","err","resource",159,"Observer","addCallback","mo","children",160,"nodeIsImport","generateScriptDataUrl","scriptContent","generateScriptContent","encodeURIComponent","generateSourceMapHint","owner","__importedScripts","moniker","baseURI","num","cloneStyle","clone","IMPORT_SELECTOR","importParser","documentSelectors","importsSelectors","map","dynamicElements","parseNext","nextToParse","parse","isParsed","markParsing","parseDynamic","quiet","parsingElement","markParsingComplete","markDynamicParsingComplete","__importElement","parseImport","__doc","__resource","__error","__pending","parseLink","linkElt","parseGeneric","parseStyle","__appliedElement","trackElement","addElementToDocument","rootImportForElement","__importLink","port","insertBefore","done","fakeLoad","sheet","csr","cssRules","len","CSSRule","IMPORT_RULE","styleSheet","parseScript","scriptElt","removeChild","_mayParse","nextToParseInDoc","nextToParseDynamic","parseSelectorsForNode","hasResource","needsDynamicParsing","parser",161,"isImportLink","isLinkRel","hasBaseURIAccessor","makeDocument","implementation","createHTMLDocument","meta","appendChild","innerHTML","importer","documents","documentPreloadSelectors","importsPreloadSelectors","loadNode","importLoader","loadSubtree","parent","marshalNodes","loadSelectorsForNode","bootDocument","loadedAll","baseURIDescriptor","querySelector",162,"dynamic","parsed","loading","shouldLoadNode","shouldParseNode",163,164,"setTouchTimer","touching","clearTimeout","touchTimer","getFirstCommonNode","x","y","dispatchPointerEnter","currentTarget","relatedTarget","generateProxy","commonParent","nodelist","checkEventRegistration","dispatchPointerLeave","applySimpleEventTunnels","nameGenerator","eventGenerator","findEventRegisteredNode","foundNode","targetNode","PointerEvent","searchElement","t","Number","Infinity","floor","abs","max","method","thisArg","Function","TypeError","trim","supportedEventsNames","upperCaseEventsNames","POINTER_TYPE_TOUCH","POINTER_TYPE_PEN","POINTER_TYPE_MOUSE","previousTargets","checkPreventDefault","handjs_forcePreventDefault","generateTouchClonedEvent","sourceEvent","newName","canBubble","evObj","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","createEventObject","offsetX","offsetY","offsetLeft","offsetTop","layerX","layerY","isPrimary","pressure","which","rotation","hwTimestamp","tiltX","tiltY","height","width","preventDefault","stopPropagation","current","pointerId","pointerType","srcElement","fireEvent","getMouseEquivalentEventName","generateMouseProxy","generateTouchEventProxy","touchPoint","eventObject","touchPointId","identifier","__handjsGlobalRegisteredEvents","generateTouchEventProxyIfRegistered","getPrefixEventName","prefix","upperCaseIndex","newEventName","registerOrUnregisterEvent","enable","__handjsRegisteredEvents","setTouchAware","MSPointerEvent","targetEvent","interceptAddEventListener","customAddEventListener","capture","interceptRemoveEventListener","customRemoveEventListener","detachEvent","isCocoonJS","HTMLBodyElement","HTMLDivElement","HTMLImageElement","HTMLUListElement","HTMLAnchorElement","HTMLLIElement","HTMLTableElement","HTMLSpanElement","HTMLCanvasElement","SVGElement","ontouchstart","changedTouches","newTarget","elementFromPoint","pointerEnabled","msPointerEnabled","maxTouchPoints","msMaxTouchPoints",165,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","typeOf","typeString","typeCache","typeRegexp","toArray","unsliceable","query","str","parsePseudo","mergeOne","source","xtag","merge","mergeMixin","mixin","z","__mixin__","applyPseudos","pseudos","addMixin","uniqueMixinCount","resolveMixins","mixins","output","unshift","applyMixins","delegateAction","pseudo","tagName","matchSelector","touchFilter","writeProperty","desc","enumerable","inheritEvent","skipProps","baseEvent","modAttr","attr","attrProto","syncAttr","property","attachProperties","accessor","old","hasAttribute","validate","setter","parseAccessor","accessors","attribute","regexCamelToDash","parseMultiline","unwrapComment","exec","customEvent","win","hasShadow","container","noop","trueop","regexReplaceCommas","regexPseudoParens","regexPseudoCapture","regexDigits","keypseudo","action","keyCode","styles","getComputedStyle","OLink","lowercase","css","js","toUpperCase","object","array","null","number","boolean","string","function","tags","defaultOptions","events","methods","__xtag__","_name","basePrototype","compiled","parseEvent","shadow","nodeName","createFragment","content","finalized","cloneNode","outerHTML","addEvents","hasAttr","hasDefault","def","onAdd","xtagComponentReady","inserted","removed","__parentNode__","args","attributeChanged","elementProto","reg","captureEvents","focus","blur","scroll","DOMMouseScroll","customEvents","animationstart","attach","animationend","transitionend","move","enter","leave","scrollwheel","condition","delta","wheelDelta","round","tap","custom","startX","startY","tapstart","tapend","tapmove","moveListener","addEvent","removeEvent","taphold","pointers","duration","onCompiled","returns","keypass","keyfail","delegate","preventable","defaultPrevented","v","uid","skipTransition","transitionProperty","skipFrame","requestFrame","raf","cancelFrame","cancel","cancelAnimationFrame","html","hasClass","klass","addClass","list","removeClass","filter","toggleClass","queryChildren","result","template","importNode","manipulate","returned","valueFlag","solo","onRemove","removePseudos","stack","_attach","_pseudos","chain","__stack__","cancelBubble","removeEvents"],"mappings":"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","file":"xtag.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xtag\"] = factory();\n\telse\n\t\troot[\"xtag\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xtag\"] = factory();\n\telse\n\t\troot[\"xtag\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\t__webpack_require__(141);\n\t\n\t__webpack_require__(142);\n\t\n\t__webpack_require__(143);\n\t\n\t__webpack_require__(144);\n\t\n\t__webpack_require__(145);\n\t\n\t__webpack_require__(146);\n\t\n\t__webpack_require__(147);\n\t\n\t__webpack_require__(148);\n\t\n\t__webpack_require__(149);\n\t\n\t__webpack_require__(150);\n\t\n\t__webpack_require__(151);\n\t\n\t__webpack_require__(152);\n\t\n\t__webpack_require__(153);\n\t\n\t__webpack_require__(154);\n\t\n\t__webpack_require__(155);\n\t\n\t__webpack_require__(156);\n\t\n\t__webpack_require__(157);\n\t\n\t__webpack_require__(158);\n\t\n\t__webpack_require__(159);\n\t\n\t__webpack_require__(160);\n\t\n\t__webpack_require__(161);\n\t\n\t__webpack_require__(162);\n\t\n\t__webpack_require__(163);\n\t\n\t__webpack_require__(164);\n\t\n\tvar _core = __webpack_require__(165);\n\t\n\tvar _core2 = _interopRequireDefault(_core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_context2.default.Platform = {};\n\t\n\t/* eslint no-unused-vars:0 */\n\tvar logFlags = {\n\t    // dom: true\n\t    // data: true\n\t};\n\t\n\tmodule.exports = _core2.default;\n\n/***/ },\n\n/***/ 116:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function () {\n\t    /* eslint no-eval: 0 */\n\t    return this || (1, eval)('this');\n\t}();\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar issetCustomEvent = false;\n\t\n\ttry {\n\t    issetCustomEvent = Boolean(_context2.default.document.createEvent('CustomEvent'));\n\t} catch (e) {\n\t    // do nothing\n\t}\n\t\n\tvar CustomEventCommon = function () {\n\t    if (issetCustomEvent) {\n\t        return function (eventName, params) {\n\t            params = params || {};\n\t\n\t            var bubbles = Boolean(params.bubbles);\n\t            var cancelable = Boolean(params.cancelable);\n\t            var evt = _context2.default.document.createEvent('CustomEvent');\n\t\n\t            evt.initCustomEvent(eventName, bubbles, cancelable, params.detail);\n\t\n\t            return evt;\n\t        };\n\t    }\n\t\n\t    return function (eventName, params) {\n\t        params = params || {};\n\t\n\t        var bubbles = Boolean(params.bubbles);\n\t        var cancelable = Boolean(params.cancelable);\n\t        var evt = _context2.default.document.createEvent('Event');\n\t\n\t        evt.initEvent(eventName, bubbles, cancelable);\n\t        evt.detail = params.detail;\n\t\n\t        return evt;\n\t    };\n\t}();\n\t\n\tCustomEventCommon.prototype = _context2.default.Event.prototype;\n\t\n\texports.default = CustomEventCommon;\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (typeof _context2.default.performance === 'undefined') {\n\t    _context2.default.performance = {};\n\t}\n\t\n\t/**\n\t * Method Performance.now() returns timestamp DOMHighResTimeStamp,\n\t * measured in milliseconds, accurate to one thousandth of a millisecond.\n\t * @returns {number}\n\t */\n\t_context2.default.performance.now = _context2.default.performance.now || function () {\n\t    var nowOffset = void 0;\n\t\n\t    if (_context2.default.performance.timing && _context2.default.performance.timing.navigationStart) {\n\t        nowOffset = _context2.default.performance.timing.navigationStar;\n\t    } else {\n\t        nowOffset = Date.now();\n\t    }\n\t\n\t    return function () {\n\t        return Date.now() - nowOffset;\n\t    };\n\t}();\n\n/***/ },\n\n/***/ 142:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar indexOf = Array.prototype.indexOf;\n\tvar proto = _context2.default.Element.prototype;\n\t\n\tproto.matches = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || function (selector) {\n\t    return indexOf.call((this.parentNode || this.ownerDocument).querySelectorAll(selector), this) !== -1;\n\t};\n\t\n\texports.default = proto.matches;\n\n/***/ },\n\n/***/ 143:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\tvar _CustomEventCommon = __webpack_require__(125);\n\t\n\tvar _CustomEventCommon2 = _interopRequireDefault(_CustomEventCommon);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * strange commit, checks CustomEvent only in IE\n\t * https://github.com/webcomponents/webcomponentsjs/commit/8d6a38aa6e3d03ff54a41db9e9725401bbc1446c\n\t */\n\t\n\tif (typeof _context2.default.CustomEvent !== 'function') {\n\t  _context2.default.CustomEvent = _CustomEventCommon2.default;\n\t}\n\n/***/ },\n\n/***/ 144:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _context = __webpack_require__(116);\n\t\n\tvar _context2 = _interopRequireDefault(_context);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar attrModifiedWorks = false; /**\n\t                                * @see http://engineering.silk.co/post/31921750832/mutation-events-what-happens\n\t                                */\n\t\n\tvar listener = function listener() {\n\t    attrModifiedWorks = true;\n\t};\n\t\n\tvar htmlElement = _context2.default.document.documentElement;\n\thtmlElement.addEventListener('DOMAttrModified', listener, false);\n\thtmlElement.setAttribute('___TEST___', true);\n\thtmlElement.removeEventListener('DOMAttrModified', listener, false);\n\thtmlElement.removeAttribute('___TEST___', true);\n\t\n\tif (!attrModifiedWorks) {\n\t    var proto = _context2.default.Element.prototype;\n\t\n\t    proto.__setAttribute = proto.setAttribute;\n\t\n\t    /**\n\t     * Set attribute.\n\t     * @param {string} attrName\n\t     * @param {string} newVal\n\t     */\n\t    proto.setAttribute = function (attrName, newVal) {\n\t        var prevVal = this.getAttribute(attrName);\n\t        this.__setAttribute(attrName, newVal);\n\t        newVal = this.getAttribute(attrName);\n\t        if (newVal !== prevVal) {\n\t            var evt = _context2.default.document.createEvent('MutationEvent');\n\t            evt.initMutationEvent('DOMAttrModified', true, false, this, prevVal || '', newVal || '', attrName, prevVal === null ? evt.ADDITION : evt.MODIFICATION);\n\t            this.dispatchEvent(evt);\n\t        }\n\t    };\n\t\n\t    proto.__removeAttribute = proto.removeAttribute;\n\t\n\t    /**\n\t     * Remote attribute.\n\t     * @param {string} attrName\n\t     */\n\t    proto.removeAttribute = function (attrName) {\n\t        var prevVal = this.getAttribute(attrName);\n\t        this.__removeAttribute(attrName);\n\t        var evt = _context2.default.document.createEvent('MutationEvent');\n\t        evt.initMutationEvent('DOMAttrModified', true, false, this, prevVal, '', attrName, evt.REMOVAL);\n\t        this.dispatchEvent(evt);\n\t    };\n\t}\n\n/***/ },\n\n/***/ 145:\n/***/ function(module, exports) {\n\n\t// DOMTokenList polyfill for IE9\n\t(function () {\n\t\n\tif (typeof window.Element === \"undefined\" || \"classList\" in document.documentElement) return;\n\t\n\tvar prototype = Array.prototype,\n\t    indexOf = prototype.indexOf,\n\t    slice = prototype.slice,\n\t    push = prototype.push,\n\t    splice = prototype.splice,\n\t    join = prototype.join;\n\t\n\tfunction DOMTokenList(el) {\n\t  this._element = el;\n\t  if (el.className != this._classCache) {\n\t    this._classCache = el.className;\n\t\n\t    if (!this._classCache) return;\n\t\n\t      // The className needs to be trimmed and split on whitespace\n\t      // to retrieve a list of classes.\n\t      var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n\t        i;\n\t    for (i = 0; i < classes.length; i++) {\n\t      push.call(this, classes[i]);\n\t    }\n\t  }\n\t};\n\t\n\tfunction setToClassName(el, classes) {\n\t  el.className = classes.join(' ');\n\t}\n\t\n\tDOMTokenList.prototype = {\n\t  add: function(token) {\n\t    if(this.contains(token)) return;\n\t    push.call(this, token);\n\t    setToClassName(this._element, slice.call(this, 0));\n\t  },\n\t  contains: function(token) {\n\t    return indexOf.call(this, token) !== -1;\n\t  },\n\t  item: function(index) {\n\t    return this[index] || null;\n\t  },\n\t  remove: function(token) {\n\t    var i = indexOf.call(this, token);\n\t     if (i === -1) {\n\t       return;\n\t     }\n\t    splice.call(this, i, 1);\n\t    setToClassName(this._element, slice.call(this, 0));\n\t  },\n\t  toString: function() {\n\t    return join.call(this, ' ');\n\t  },\n\t  toggle: function(token) {\n\t    if (indexOf.call(this, token) === -1) {\n\t      this.add(token);\n\t    } else {\n\t      this.remove(token);\n\t    }\n\t  }\n\t};\n\t\n\twindow.DOMTokenList = DOMTokenList;\n\t\n\tfunction defineElementGetter (obj, prop, getter) {\n\t  if (Object.defineProperty) {\n\t    Object.defineProperty(obj, prop,{\n\t      get : getter\n\t    })\n\t  } else {\n\t    obj.__defineGetter__(prop, getter);\n\t  }\n\t}\n\t\n\tdefineElementGetter(Element.prototype, 'classList', function () {\n\t  return new DOMTokenList(this);\n\t});\n\t\n\t})();\n\t\n\n\n/***/ },\n\n/***/ 146:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\tif (typeof WeakMap === 'undefined') {\n\t  (function() {\n\t    var defineProperty = Object.defineProperty;\n\t    var counter = Date.now() % 1e9;\n\t\n\t    var WeakMap = function() {\n\t      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\n\t    };\n\t\n\t    WeakMap.prototype = {\n\t      set: function(key, value) {\n\t        var entry = key[this.name];\n\t        if (entry && entry[0] === key)\n\t          entry[1] = value;\n\t        else\n\t          defineProperty(key, this.name, {value: [key, value], writable: true});\n\t        return this;\n\t      },\n\t      get: function(key) {\n\t        var entry;\n\t        return (entry = key[this.name]) && entry[0] === key ?\n\t            entry[1] : undefined;\n\t      },\n\t      delete: function(key) {\n\t        var entry = key[this.name];\n\t        if (!entry || entry[0] !== key) return false;\n\t        entry[0] = entry[1] = undefined;\n\t        return true;\n\t      },\n\t      has: function(key) {\n\t        var entry = key[this.name];\n\t        if (!entry) return false;\n\t        return entry[0] === key;\n\t      }\n\t    };\n\t\n\t    window.WeakMap = WeakMap;\n\t  })();\n\t}\n\n\n/***/ },\n\n/***/ 147:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t(function(global) {\n\t\n\t  // Don't allow this object to be redefined.\n\t  if (global.JsMutationObserver) {\n\t    return;\n\t  }\n\t\n\t  var registrationsTable = new WeakMap();\n\t\n\t  var setImmediate;\n\t\n\t  // As much as we would like to use the native implementation, IE\n\t  // (all versions) suffers a rather annoying bug where it will drop or defer\n\t  // callbacks when heavy DOM operations are being performed concurrently.\n\t  //\n\t  // For a thorough discussion on this, see:\n\t  // http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\n\t  if (/Trident|Edge/.test(navigator.userAgent)) {\n\t    // Sadly, this bug also affects postMessage and MessageQueues.\n\t    //\n\t    // We would like to use the onreadystatechange hack for IE <= 10, but it is\n\t    // dangerous in the polyfilled environment due to requiring that the\n\t    // observed script element be in the document.\n\t    setImmediate = setTimeout;\n\t\n\t  // If some other browser ever implements it, let's prefer their native\n\t  // implementation:\n\t  } else if (window.setImmediate) {\n\t    setImmediate = window.setImmediate;\n\t\n\t  // Otherwise, we fall back to postMessage as a means of emulating the next\n\t  // task semantics of setImmediate.\n\t  } else {\n\t    var setImmediateQueue = [];\n\t    var sentinel = String(Math.random());\n\t    window.addEventListener('message', function(e) {\n\t      if (e.data === sentinel) {\n\t        var queue = setImmediateQueue;\n\t        setImmediateQueue = [];\n\t        queue.forEach(function(func) {\n\t          func();\n\t        });\n\t      }\n\t    });\n\t    setImmediate = function(func) {\n\t      setImmediateQueue.push(func);\n\t      window.postMessage(sentinel, '*');\n\t    };\n\t  }\n\t\n\t  // This is used to ensure that we never schedule 2 callas to setImmediate\n\t  var isScheduled = false;\n\t\n\t  // Keep track of observers that needs to be notified next time.\n\t  var scheduledObservers = [];\n\t\n\t  /**\n\t   * Schedules |dispatchCallback| to be called in the future.\n\t   * @param {MutationObserver} observer\n\t   */\n\t  function scheduleCallback(observer) {\n\t    scheduledObservers.push(observer);\n\t    if (!isScheduled) {\n\t      isScheduled = true;\n\t      setImmediate(dispatchCallbacks);\n\t    }\n\t  }\n\t\n\t  function wrapIfNeeded(node) {\n\t    return window.ShadowDOMPolyfill &&\n\t        window.ShadowDOMPolyfill.wrapIfNeeded(node) ||\n\t        node;\n\t  }\n\t\n\t  function dispatchCallbacks() {\n\t    // http://dom.spec.whatwg.org/#mutation-observers\n\t\n\t    isScheduled = false; // Used to allow a new setImmediate call above.\n\t\n\t    var observers = scheduledObservers;\n\t    scheduledObservers = [];\n\t    // Sort observers based on their creation UID (incremental).\n\t    observers.sort(function(o1, o2) {\n\t      return o1.uid_ - o2.uid_;\n\t    });\n\t\n\t    var anyNonEmpty = false;\n\t    observers.forEach(function(observer) {\n\t\n\t      // 2.1, 2.2\n\t      var queue = observer.takeRecords();\n\t      // 2.3. Remove all transient registered observers whose observer is mo.\n\t      removeTransientObserversFor(observer);\n\t\n\t      // 2.4\n\t      if (queue.length) {\n\t        observer.callback_(queue, observer);\n\t        anyNonEmpty = true;\n\t      }\n\t    });\n\t\n\t    // 3.\n\t    if (anyNonEmpty)\n\t      dispatchCallbacks();\n\t  }\n\t\n\t  function removeTransientObserversFor(observer) {\n\t    observer.nodes_.forEach(function(node) {\n\t      var registrations = registrationsTable.get(node);\n\t      if (!registrations)\n\t        return;\n\t      registrations.forEach(function(registration) {\n\t        if (registration.observer === observer)\n\t          registration.removeTransientObservers();\n\t      });\n\t    });\n\t  }\n\t\n\t  /**\n\t   * This function is used for the \"For each registered observer observer (with\n\t   * observer's options as options) in target's list of registered observers,\n\t   * run these substeps:\" and the \"For each ancestor ancestor of target, and for\n\t   * each registered observer observer (with options options) in ancestor's list\n\t   * of registered observers, run these substeps:\" part of the algorithms. The\n\t   * |options.subtree| is checked to ensure that the callback is called\n\t   * correctly.\n\t   *\n\t   * @param {Node} target\n\t   * @param {function(MutationObserverInit):MutationRecord} callback\n\t   */\n\t  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n\t    for (var node = target; node; node = node.parentNode) {\n\t      var registrations = registrationsTable.get(node);\n\t\n\t      if (registrations) {\n\t        for (var j = 0; j < registrations.length; j++) {\n\t          var registration = registrations[j];\n\t          var options = registration.options;\n\t\n\t          // Only target ignores subtree.\n\t          if (node !== target && !options.subtree)\n\t            continue;\n\t\n\t          var record = callback(options);\n\t          if (record)\n\t            registration.enqueue(record);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  var uidCounter = 0;\n\t\n\t  /**\n\t   * The class that maps to the DOM MutationObserver interface.\n\t   * @param {Function} callback.\n\t   * @constructor\n\t   */\n\t  function JsMutationObserver(callback) {\n\t    this.callback_ = callback;\n\t    this.nodes_ = [];\n\t    this.records_ = [];\n\t    this.uid_ = ++uidCounter;\n\t  }\n\t\n\t  JsMutationObserver.prototype = {\n\t    observe: function(target, options) {\n\t      target = wrapIfNeeded(target);\n\t\n\t      // 1.1\n\t      if (!options.childList && !options.attributes && !options.characterData ||\n\t\n\t          // 1.2\n\t          options.attributeOldValue && !options.attributes ||\n\t\n\t          // 1.3\n\t          options.attributeFilter && options.attributeFilter.length &&\n\t              !options.attributes ||\n\t\n\t          // 1.4\n\t          options.characterDataOldValue && !options.characterData) {\n\t\n\t        throw new SyntaxError();\n\t      }\n\t\n\t      var registrations = registrationsTable.get(target);\n\t      if (!registrations)\n\t        registrationsTable.set(target, registrations = []);\n\t\n\t      // 2\n\t      // If target's list of registered observers already includes a registered\n\t      // observer associated with the context object, replace that registered\n\t      // observer's options with options.\n\t      var registration;\n\t      for (var i = 0; i < registrations.length; i++) {\n\t        if (registrations[i].observer === this) {\n\t          registration = registrations[i];\n\t          registration.removeListeners();\n\t          registration.options = options;\n\t          break;\n\t        }\n\t      }\n\t\n\t      // 3.\n\t      // Otherwise, add a new registered observer to target's list of registered\n\t      // observers with the context object as the observer and options as the\n\t      // options, and add target to context object's list of nodes on which it\n\t      // is registered.\n\t      if (!registration) {\n\t        registration = new Registration(this, target, options);\n\t        registrations.push(registration);\n\t        this.nodes_.push(target);\n\t      }\n\t\n\t      registration.addListeners();\n\t    },\n\t\n\t    disconnect: function() {\n\t      this.nodes_.forEach(function(node) {\n\t        var registrations = registrationsTable.get(node);\n\t        for (var i = 0; i < registrations.length; i++) {\n\t          var registration = registrations[i];\n\t          if (registration.observer === this) {\n\t            registration.removeListeners();\n\t            registrations.splice(i, 1);\n\t            // Each node can only have one registered observer associated with\n\t            // this observer.\n\t            break;\n\t          }\n\t        }\n\t      }, this);\n\t      this.records_ = [];\n\t    },\n\t\n\t    takeRecords: function() {\n\t      var copyOfRecords = this.records_;\n\t      this.records_ = [];\n\t      return copyOfRecords;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @param {string} type\n\t   * @param {Node} target\n\t   * @constructor\n\t   */\n\t  function MutationRecord(type, target) {\n\t    this.type = type;\n\t    this.target = target;\n\t    this.addedNodes = [];\n\t    this.removedNodes = [];\n\t    this.previousSibling = null;\n\t    this.nextSibling = null;\n\t    this.attributeName = null;\n\t    this.attributeNamespace = null;\n\t    this.oldValue = null;\n\t  }\n\t\n\t  function copyMutationRecord(original) {\n\t    var record = new MutationRecord(original.type, original.target);\n\t    record.addedNodes = original.addedNodes.slice();\n\t    record.removedNodes = original.removedNodes.slice();\n\t    record.previousSibling = original.previousSibling;\n\t    record.nextSibling = original.nextSibling;\n\t    record.attributeName = original.attributeName;\n\t    record.attributeNamespace = original.attributeNamespace;\n\t    record.oldValue = original.oldValue;\n\t    return record;\n\t  };\n\t\n\t  // We keep track of the two (possibly one) records used in a single mutation.\n\t  var currentRecord, recordWithOldValue;\n\t\n\t  /**\n\t   * Creates a record without |oldValue| and caches it as |currentRecord| for\n\t   * later use.\n\t   * @param {string} oldValue\n\t   * @return {MutationRecord}\n\t   */\n\t  function getRecord(type, target) {\n\t    return currentRecord = new MutationRecord(type, target);\n\t  }\n\t\n\t  /**\n\t   * Gets or creates a record with |oldValue| based in the |currentRecord|\n\t   * @param {string} oldValue\n\t   * @return {MutationRecord}\n\t   */\n\t  function getRecordWithOldValue(oldValue) {\n\t    if (recordWithOldValue)\n\t      return recordWithOldValue;\n\t    recordWithOldValue = copyMutationRecord(currentRecord);\n\t    recordWithOldValue.oldValue = oldValue;\n\t    return recordWithOldValue;\n\t  }\n\t\n\t  function clearRecords() {\n\t    currentRecord = recordWithOldValue = undefined;\n\t  }\n\t\n\t  /**\n\t   * @param {MutationRecord} record\n\t   * @return {boolean} Whether the record represents a record from the current\n\t   * mutation event.\n\t   */\n\t  function recordRepresentsCurrentMutation(record) {\n\t    return record === recordWithOldValue || record === currentRecord;\n\t  }\n\t\n\t  /**\n\t   * Selects which record, if any, to replace the last record in the queue.\n\t   * This returns |null| if no record should be replaced.\n\t   *\n\t   * @param {MutationRecord} lastRecord\n\t   * @param {MutationRecord} newRecord\n\t   * @param {MutationRecord}\n\t   */\n\t  function selectRecord(lastRecord, newRecord) {\n\t    if (lastRecord === newRecord)\n\t      return lastRecord;\n\t\n\t    // Check if the the record we are adding represents the same record. If\n\t    // so, we keep the one with the oldValue in it.\n\t    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord))\n\t      return recordWithOldValue;\n\t\n\t    return null;\n\t  }\n\t\n\t  /**\n\t   * Class used to represent a registered observer.\n\t   * @param {MutationObserver} observer\n\t   * @param {Node} target\n\t   * @param {MutationObserverInit} options\n\t   * @constructor\n\t   */\n\t  function Registration(observer, target, options) {\n\t    this.observer = observer;\n\t    this.target = target;\n\t    this.options = options;\n\t    this.transientObservedNodes = [];\n\t  }\n\t\n\t  Registration.prototype = {\n\t    enqueue: function(record) {\n\t      var records = this.observer.records_;\n\t      var length = records.length;\n\t\n\t      // There are cases where we replace the last record with the new record.\n\t      // For example if the record represents the same mutation we need to use\n\t      // the one with the oldValue. If we get same record (this can happen as we\n\t      // walk up the tree) we ignore the new record.\n\t      if (records.length > 0) {\n\t        var lastRecord = records[length - 1];\n\t        var recordToReplaceLast = selectRecord(lastRecord, record);\n\t        if (recordToReplaceLast) {\n\t          records[length - 1] = recordToReplaceLast;\n\t          return;\n\t        }\n\t      } else {\n\t        scheduleCallback(this.observer);\n\t      }\n\t\n\t      records[length] = record;\n\t    },\n\t\n\t    addListeners: function() {\n\t      this.addListeners_(this.target);\n\t    },\n\t\n\t    addListeners_: function(node) {\n\t      var options = this.options;\n\t      if (options.attributes)\n\t        node.addEventListener('DOMAttrModified', this, true);\n\t\n\t      if (options.characterData)\n\t        node.addEventListener('DOMCharacterDataModified', this, true);\n\t\n\t      if (options.childList)\n\t        node.addEventListener('DOMNodeInserted', this, true);\n\t\n\t      if (options.childList || options.subtree)\n\t        node.addEventListener('DOMNodeRemoved', this, true);\n\t    },\n\t\n\t    removeListeners: function() {\n\t      this.removeListeners_(this.target);\n\t    },\n\t\n\t    removeListeners_: function(node) {\n\t      var options = this.options;\n\t      if (options.attributes)\n\t        node.removeEventListener('DOMAttrModified', this, true);\n\t\n\t      if (options.characterData)\n\t        node.removeEventListener('DOMCharacterDataModified', this, true);\n\t\n\t      if (options.childList)\n\t        node.removeEventListener('DOMNodeInserted', this, true);\n\t\n\t      if (options.childList || options.subtree)\n\t        node.removeEventListener('DOMNodeRemoved', this, true);\n\t    },\n\t\n\t    /**\n\t     * Adds a transient observer on node. The transient observer gets removed\n\t     * next time we deliver the change records.\n\t     * @param {Node} node\n\t     */\n\t    addTransientObserver: function(node) {\n\t      // Don't add transient observers on the target itself. We already have all\n\t      // the required listeners set up on the target.\n\t      if (node === this.target)\n\t        return;\n\t\n\t      this.addListeners_(node);\n\t      this.transientObservedNodes.push(node);\n\t      var registrations = registrationsTable.get(node);\n\t      if (!registrations)\n\t        registrationsTable.set(node, registrations = []);\n\t\n\t      // We know that registrations does not contain this because we already\n\t      // checked if node === this.target.\n\t      registrations.push(this);\n\t    },\n\t\n\t    removeTransientObservers: function() {\n\t      var transientObservedNodes = this.transientObservedNodes;\n\t      this.transientObservedNodes = [];\n\t\n\t      transientObservedNodes.forEach(function(node) {\n\t        // Transient observers are never added to the target.\n\t        this.removeListeners_(node);\n\t\n\t        var registrations = registrationsTable.get(node);\n\t        for (var i = 0; i < registrations.length; i++) {\n\t          if (registrations[i] === this) {\n\t            registrations.splice(i, 1);\n\t            // Each node can only have one registered observer associated with\n\t            // this observer.\n\t            break;\n\t          }\n\t        }\n\t      }, this);\n\t    },\n\t\n\t    handleEvent: function(e) {\n\t      // Stop propagation since we are managing the propagation manually.\n\t      // This means that other mutation events on the page will not work\n\t      // correctly but that is by design.\n\t      e.stopImmediatePropagation();\n\t\n\t      switch (e.type) {\n\t        case 'DOMAttrModified':\n\t          // http://dom.spec.whatwg.org/#concept-mo-queue-attributes\n\t\n\t          var name = e.attrName;\n\t          var namespace = e.relatedNode.namespaceURI;\n\t          var target = e.target;\n\t\n\t          // 1.\n\t          var record = new getRecord('attributes', target);\n\t          record.attributeName = name;\n\t          record.attributeNamespace = namespace;\n\t\n\t          // 2.\n\t          var oldValue =\n\t              e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n\t\n\t          forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n\t            // 3.1, 4.2\n\t            if (!options.attributes)\n\t              return;\n\t\n\t            // 3.2, 4.3\n\t            if (options.attributeFilter && options.attributeFilter.length &&\n\t                options.attributeFilter.indexOf(name) === -1 &&\n\t                options.attributeFilter.indexOf(namespace) === -1) {\n\t              return;\n\t            }\n\t            // 3.3, 4.4\n\t            if (options.attributeOldValue)\n\t              return getRecordWithOldValue(oldValue);\n\t\n\t            // 3.4, 4.5\n\t            return record;\n\t          });\n\t\n\t          break;\n\t\n\t        case 'DOMCharacterDataModified':\n\t          // http://dom.spec.whatwg.org/#concept-mo-queue-characterdata\n\t          var target = e.target;\n\t\n\t          // 1.\n\t          var record = getRecord('characterData', target);\n\t\n\t          // 2.\n\t          var oldValue = e.prevValue;\n\t\n\t\n\t          forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n\t            // 3.1, 4.2\n\t            if (!options.characterData)\n\t              return;\n\t\n\t            // 3.2, 4.3\n\t            if (options.characterDataOldValue)\n\t              return getRecordWithOldValue(oldValue);\n\t\n\t            // 3.3, 4.4\n\t            return record;\n\t          });\n\t\n\t          break;\n\t\n\t        case 'DOMNodeRemoved':\n\t          this.addTransientObserver(e.target);\n\t          // Fall through.\n\t        case 'DOMNodeInserted':\n\t          // http://dom.spec.whatwg.org/#concept-mo-queue-childlist\n\t          var changedNode = e.target;\n\t          var addedNodes, removedNodes;\n\t          if (e.type === 'DOMNodeInserted') {\n\t            addedNodes = [changedNode];\n\t            removedNodes = [];\n\t          } else {\n\t\n\t            addedNodes = [];\n\t            removedNodes = [changedNode];\n\t          }\n\t          var previousSibling = changedNode.previousSibling;\n\t          var nextSibling = changedNode.nextSibling;\n\t\n\t          // 1.\n\t          var record = getRecord('childList', e.target.parentNode);\n\t          record.addedNodes = addedNodes;\n\t          record.removedNodes = removedNodes;\n\t          record.previousSibling = previousSibling;\n\t          record.nextSibling = nextSibling;\n\t\n\t          forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {\n\t            // 2.1, 3.2\n\t            if (!options.childList)\n\t              return;\n\t\n\t            // 2.2, 3.3\n\t            return record;\n\t          });\n\t\n\t      }\n\t\n\t      clearRecords();\n\t    }\n\t  };\n\t\n\t  global.JsMutationObserver = JsMutationObserver;\n\t\n\t  if (!global.MutationObserver) {\n\t    global.MutationObserver = JsMutationObserver;\n\t    // Explicltly mark MO as polyfilled for user reference.\n\t    JsMutationObserver._isPolyfilled = true;\n\t  }\n\t\n\t})(self);\n\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.CustomElements = window.CustomElements || {flags:{}};\n\t\n\t(function(scope) {\n\t\n\t// imports\n\tvar flags = scope.flags;\n\t\n\t// world's simplest module initializer\n\tvar modules = [];\n\tvar addModule = function(module) {\n\t\tmodules.push(module);\n\t};\n\t\n\tvar initializeModules = function() {\n\t\tmodules.forEach(function(module) {\n\t\t\tmodule(scope);\n\t\t});\n\t};\n\t\n\t// exports\n\tscope.addModule = addModule;\n\tscope.initializeModules = initializeModules;\n\tscope.hasNative = Boolean(document.registerElement);\n\tscope.isIE = /Trident/.test(navigator.userAgent);\n\t\n\t// NOTE: For consistent timing, use native custom elements only when not\n\t// polyfilling other key related web components features.\n\tscope.useNative = !flags.register && scope.hasNative &&\n\t\t\t!window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);\n\t\n\t})(window.CustomElements);\n\n\n/***/ },\n\n/***/ 149:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t// helper methods for traversing through element trees\n\twindow.CustomElements.addModule(function(scope){\n\t\n\t// imports\n\tvar IMPORT_LINK_TYPE = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : 'none';\n\t\n\t// walk the subtree rooted at node, including descent into shadow-roots,\n\t// applying 'cb' to each element\n\tfunction forSubtree(node, cb) {\n\t  //flags.dom && node.childNodes && node.childNodes.length && console.group('subTree: ', node);\n\t  findAllElements(node, function(e) {\n\t    if (cb(e)) {\n\t      return true;\n\t    }\n\t    forRoots(e, cb);\n\t  });\n\t  forRoots(node, cb);\n\t  //flags.dom && node.childNodes && node.childNodes.length && console.groupEnd();\n\t}\n\t\n\t\n\t// walk the subtree rooted at node, applying 'find(element, data)' function\n\t// to each element\n\t// if 'find' returns true for 'element', do not search element's subtree\n\tfunction findAllElements(node, find, data) {\n\t  var e = node.firstElementChild;\n\t  if (!e) {\n\t    e = node.firstChild;\n\t    while (e && e.nodeType !== Node.ELEMENT_NODE) {\n\t      e = e.nextSibling;\n\t    }\n\t  }\n\t  while (e) {\n\t    if (find(e, data) !== true) {\n\t      findAllElements(e, find, data);\n\t    }\n\t    e = e.nextElementSibling;\n\t  }\n\t  return null;\n\t}\n\t\n\t// walk all shadowRoots on a given node.\n\tfunction forRoots(node, cb) {\n\t  var root = node.shadowRoot;\n\t  while(root) {\n\t    forSubtree(root, cb);\n\t    root = root.olderShadowRoot;\n\t  }\n\t}\n\t\n\tfunction forDocumentTree(doc, cb) {\n\t  _forDocumentTree(doc, cb, []);\n\t}\n\t\n\t\n\tfunction _forDocumentTree(doc, cb, processingDocuments) {\n\t  doc = window.wrap(doc);\n\t  if (processingDocuments.indexOf(doc) >= 0) {\n\t    return;\n\t  }\n\t  processingDocuments.push(doc);\n\t  var imports = doc.querySelectorAll('link[rel=' + IMPORT_LINK_TYPE + ']');\n\t  for (var i=0, l=imports.length, n; (i<l) && (n=imports[i]); i++) {\n\t    if (n.import) {\n\t      _forDocumentTree(n.import, cb, processingDocuments);\n\t    }\n\t  }\n\t  cb(doc);\n\t}\n\t\n\t// exports\n\tscope.forDocumentTree = forDocumentTree;\n\tscope.forSubtree = forSubtree;\n\t\n\t\n\t});\n\n\n/***/ },\n\n/***/ 150:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t/**\n\t * Implements custom element observation and attached/detached callbacks\n\t * @module observe\n\t*/\n\t\n\twindow.CustomElements.addModule(function(scope){\n\t\n\t// imports\n\tvar flags = scope.flags;\n\tvar forSubtree = scope.forSubtree;\n\tvar forDocumentTree = scope.forDocumentTree;\n\t\n\t/*\n\t  Manage nodes attached to document trees\n\t*/\n\t\n\t// manage lifecycle on added node and it's subtree; upgrade the node and\n\t// entire subtree if necessary and process attached for the node and entire\n\t// subtree\n\tfunction addedNode(node, isAttached) {\n\t  return added(node, isAttached) || addedSubtree(node, isAttached);\n\t}\n\t\n\t// manage lifecycle on added node; upgrade if necessary and process attached\n\tfunction added(node, isAttached) {\n\t  if (scope.upgrade(node, isAttached)) {\n\t    // Return true to indicate\n\t    return true;\n\t  }\n\t  if (isAttached) {\n\t    attached(node);\n\t  }\n\t}\n\t\n\t// manage lifecycle on added node's subtree only; allows the entire subtree\n\t// to upgrade if necessary and process attached\n\tfunction addedSubtree(node, isAttached) {\n\t  forSubtree(node, function(e) {\n\t    if (added(e, isAttached)) {\n\t      return true;\n\t    }\n\t  });\n\t}\n\t\n\t// On platforms without MutationObserver, mutations may not be\n\t// reliable and therefore attached/detached are not reliable. We think this\n\t// occurs sometimes under heavy DOM operation load, but it is not easy to\n\t// reproduce.\n\t// To make these callbacks less likely to fail in this scenario,\n\t// we *optionally* defer all inserts and removes\n\t// to give a chance for elements to be attached into dom.\n\t// This helps ensure attachedCallback fires for elements that are created and\n\t// immediately added to dom.\n\t// This change can significantly alter the performance characteristics\n\t// of attaching elements and therefore we only enable it if the user has\n\t// explicitly provided the `throttle-attached` flag.\n\tvar hasThrottledAttached = (window.MutationObserver._isPolyfilled &&\n\t    flags['throttle-attached']);\n\t// bc\n\tscope.hasPolyfillMutations = hasThrottledAttached;\n\t// exposed for testing\n\tscope.hasThrottledAttached = hasThrottledAttached;\n\t\n\tvar isPendingMutations = false;\n\tvar pendingMutations = [];\n\tfunction deferMutation(fn) {\n\t  pendingMutations.push(fn);\n\t  if (!isPendingMutations) {\n\t    isPendingMutations = true;\n\t    setTimeout(takeMutations);\n\t  }\n\t}\n\t\n\tfunction takeMutations() {\n\t  isPendingMutations = false;\n\t  var $p = pendingMutations;\n\t  for (var i=0, l=$p.length, p; (i<l) && (p=$p[i]); i++) {\n\t    p();\n\t  }\n\t  pendingMutations = [];\n\t}\n\t\n\tfunction attached(element) {\n\t  if (hasThrottledAttached) {\n\t    deferMutation(function() {\n\t      _attached(element);\n\t    });\n\t  } else {\n\t    _attached(element);\n\t  }\n\t}\n\t\n\t// NOTE: due to how MO works (see comments below), an element may be attached\n\t// multiple times so we protect against extra processing here.\n\tfunction _attached(element) {\n\t  // track element for insertion if it's upgraded and cares about insertion\n\t  // bail if the element is already marked as attached\n\t  if (element.__upgraded__ && !element.__attached) {\n\t    element.__attached = true;\n\t    if (element.attachedCallback) {\n\t      element.attachedCallback();\n\t    }\n\t  }\n\t}\n\t\n\t/*\n\t  Manage nodes detached from document trees\n\t*/\n\t\n\t// manage lifecycle on detached node and it's subtree; process detached\n\t// for the node and entire subtree\n\tfunction detachedNode(node) {\n\t  detached(node);\n\t  forSubtree(node, function(e) {\n\t    detached(e);\n\t  });\n\t}\n\t\n\tfunction detached(element) {\n\t  if (hasThrottledAttached) {\n\t    deferMutation(function() {\n\t      _detached(element);\n\t    });\n\t  } else {\n\t    _detached(element);\n\t  }\n\t}\n\t\n\t// NOTE: due to how MO works (see comments below), an element may be detached\n\t// multiple times so we protect against extra processing here.\n\tfunction _detached(element) {\n\t  // track element for removal if it's upgraded and cares about removal\n\t  // bail if the element is already marked as not attached\n\t  if (element.__upgraded__ && element.__attached) {\n\t    element.__attached = false;\n\t    if (element.detachedCallback) {\n\t      element.detachedCallback();\n\t    }\n\t  }\n\t}\n\t\n\t// recurse up the tree to check if an element is actually in the main document.\n\tfunction inDocument(element) {\n\t  var p = element;\n\t  var doc = window.wrap(document);\n\t  while (p) {\n\t    if (p == doc) {\n\t      return true;\n\t    }\n\t    p = p.parentNode || ((p.nodeType === Node.DOCUMENT_FRAGMENT_NODE) && p.host);\n\t  }\n\t}\n\t\n\t//  Install an element observer on all shadowRoots owned by node.\n\tfunction watchShadow(node) {\n\t  if (node.shadowRoot && !node.shadowRoot.__watched) {\n\t    flags.dom && console.log('watching shadow-root for: ', node.localName);\n\t    // watch all unwatched roots...\n\t    var root = node.shadowRoot;\n\t    while (root) {\n\t      observe(root);\n\t      root = root.olderShadowRoot;\n\t    }\n\t  }\n\t}\n\t\n\t/*\n\t  NOTE: In order to process all mutations, it's necessary to recurse into\n\t  any added nodes. However, it's not possible to determine a priori if a node\n\t  will get its own mutation record. This means\n\t  *nodes can be seen multiple times*.\n\t\n\t  Here's an example:\n\t\n\t  (1) In this case, recursion is required to see `child`:\n\t\n\t      node.innerHTML = '<div><child></child></div>'\n\t\n\t  (2) In this case, child will get its own mutation record:\n\t\n\t      node.appendChild(div).appendChild(child);\n\t\n\t  We cannot know ahead of time if we need to walk into the node in (1) so we\n\t  do and see child; however, if it was added via case (2) then it will have its\n\t  own record and therefore be seen 2x.\n\t*/\n\tfunction handler(root, mutations) {\n\t  // for logging only\n\t  if (flags.dom) {\n\t    var mx = mutations[0];\n\t    if (mx && mx.type === 'childList' && mx.addedNodes) {\n\t        if (mx.addedNodes) {\n\t          var d = mx.addedNodes[0];\n\t          while (d && d !== document && !d.host) {\n\t            d = d.parentNode;\n\t          }\n\t          var u = d && (d.URL || d._URL || (d.host && d.host.localName)) || '';\n\t          u = u.split('/?').shift().split('/').pop();\n\t        }\n\t    }\n\t    console.group('mutations (%d) [%s]', mutations.length, u || '');\n\t  }\n\t  // handle mutations\n\t  // NOTE: do an `inDocument` check dynamically here. It's possible that `root`\n\t  // is a document in which case the answer here can never change; however\n\t  // `root` may be an element like a shadowRoot that can be added/removed\n\t  // from the main document.\n\t  var isAttached = inDocument(root);\n\t  mutations.forEach(function(mx) {\n\t    if (mx.type === 'childList') {\n\t      forEach(mx.addedNodes, function(n) {\n\t        if (!n.localName) {\n\t          return;\n\t        }\n\t        addedNode(n, isAttached);\n\t      });\n\t      forEach(mx.removedNodes, function(n) {\n\t        if (!n.localName) {\n\t          return;\n\t        }\n\t        detachedNode(n);\n\t      });\n\t    }\n\t  });\n\t  flags.dom && console.groupEnd();\n\t};\n\t\n\t\n\t/*\n\t  When elements are added to the dom, upgrade and attached/detached may be\n\t  asynchronous. `CustomElements.takeRecords` can be called to process any\n\t  pending upgrades and attached/detached callbacks synchronously.\n\t*/\n\tfunction takeRecords(node) {\n\t  node = window.wrap(node);\n\t  // If the optional node is not supplied, assume we mean the whole document.\n\t  if (!node) {\n\t    node = window.wrap(document);\n\t  }\n\t  // Find the root of the tree, which will be an Document or ShadowRoot.\n\t  while (node.parentNode) {\n\t    node = node.parentNode;\n\t  }\n\t  var observer = node.__observer;\n\t  if (observer) {\n\t    handler(node, observer.takeRecords());\n\t    takeMutations();\n\t  }\n\t}\n\t\n\tvar forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n\t\n\t\n\t// observe a node tree; bail if it's already being observed.\n\tfunction observe(inRoot) {\n\t  if (inRoot.__observer) {\n\t    return;\n\t  }\n\t  // For each ShadowRoot, we create a new MutationObserver, so the root can be\n\t  // garbage collected once all references to the `inRoot` node are gone.\n\t  // Give the handler access to the root so that an 'in document' check can\n\t  // be done.\n\t  var observer = new MutationObserver(handler.bind(this, inRoot));\n\t  observer.observe(inRoot, {childList: true, subtree: true});\n\t  inRoot.__observer = observer;\n\t}\n\t\n\t// upgrade an entire document and observe it for elements changes.\n\tfunction upgradeDocument(doc) {\n\t  doc = window.wrap(doc);\n\t  flags.dom && console.group('upgradeDocument: ', (doc.baseURI).split('/').pop());\n\t  var isMainDocument = (doc === window.wrap(document));\n\t  addedNode(doc, isMainDocument);\n\t  observe(doc);\n\t  flags.dom && console.groupEnd();\n\t}\n\t\n\t/*\n\tThis method is intended to be called when the document tree (including imports)\n\thas pending custom elements to upgrade. It can be called multiple times and\n\tshould do nothing if no elements are in need of upgrade.\n\t*/\n\tfunction upgradeDocumentTree(doc) {\n\t  forDocumentTree(doc, upgradeDocument);\n\t}\n\t\n\t\n\t// Patch `createShadowRoot()` if Shadow DOM is available, otherwise leave\n\t// undefined to aid feature detection of Shadow DOM.\n\tvar originalCreateShadowRoot = Element.prototype.createShadowRoot;\n\tif (originalCreateShadowRoot) {\n\t  Element.prototype.createShadowRoot = function() {\n\t    var root = originalCreateShadowRoot.call(this);\n\t    window.CustomElements.watchShadow(this);\n\t    return root;\n\t  };\n\t}\n\t\n\t// exports\n\tscope.watchShadow = watchShadow;\n\tscope.upgradeDocumentTree = upgradeDocumentTree;\n\tscope.upgradeDocument = upgradeDocument;\n\tscope.upgradeSubtree = addedSubtree;\n\tscope.upgradeAll = addedNode;\n\tscope.attached = attached;\n\tscope.takeRecords = takeRecords;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 151:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t/**\n\t * Implements custom element upgrading\n\t * @module upgrade\n\t*/\n\t\n\twindow.CustomElements.addModule(function(scope) {\n\t\n\t// imports\n\tvar flags = scope.flags;\n\t\n\t/**\n\t * Upgrade an element to a custom element. Upgrading an element\n\t * causes the custom prototype to be applied, an `is` attribute\n\t * to be attached (as needed), and invocation of the `readyCallback`.\n\t * If the element is in the main document, the `attachedkCallback` method\n\t * will be invoked.\n\t * `upgrade` does nothing if the element is already upgraded, or\n\t * if it matches no registered custom tag name.\n\t *\n\t * @method ugprade\n\t * @param {Element} element The element to upgrade.\n\t * @return {Element} The upgraded element.\n\t */\n\t// Upgrade a node if it can be upgraded and is not already.\n\tfunction upgrade(node, isAttached) {\n\t  // upgrade template elements before custom elements\n\t  if (node.localName === 'template') {\n\t    if (window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n\t      HTMLTemplateElement.decorate(node);\n\t    }\n\t  }\n\t  if (!node.__upgraded__ && (node.nodeType === Node.ELEMENT_NODE)) {\n\t    var is = node.getAttribute('is');\n\t    // find definition first by localName and secondarily by is attribute\n\t    var definition = scope.getRegisteredDefinition(node.localName) ||\n\t      scope.getRegisteredDefinition(is);\n\t    if (definition) {\n\t      // upgrade with is iff the definition tag matches the element tag\n\t      // and don't upgrade if there's an is and the definition does not extend\n\t      // a native element\n\t      if ((is && definition.tag == node.localName) ||\n\t        (!is && !definition.extends)) {\n\t        return upgradeWithDefinition(node, definition, isAttached);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction upgradeWithDefinition(element, definition, isAttached) {\n\t  flags.upgrade && console.group('upgrade:', element.localName);\n\t  // some definitions specify an 'is' attribute\n\t  if (definition.is) {\n\t    element.setAttribute('is', definition.is);\n\t  }\n\t  // make 'element' implement definition.prototype\n\t  implementPrototype(element, definition);\n\t  // flag as upgraded\n\t  element.__upgraded__ = true;\n\t  // lifecycle management\n\t  created(element);\n\t  // attachedCallback fires in tree order, call before recursing\n\t  if (isAttached) {\n\t    scope.attached(element);\n\t  }\n\t  // there should never be a shadow root on element at this point\n\t  scope.upgradeSubtree(element, isAttached);\n\t  flags.upgrade && console.groupEnd();\n\t  // OUTPUT\n\t  return element;\n\t}\n\t\n\t//  Set __proto__ on supported platforms and use a mixin strategy when\n\t//  this is not supported; e.g. on IE10.\n\tfunction implementPrototype(element, definition) {\n\t  // prototype swizzling is best\n\t  if (Object.__proto__) {\n\t    element.__proto__ = definition.prototype;\n\t  } else {\n\t    // where above we can re-acquire inPrototype via\n\t    // getPrototypeOf(Element), we cannot do so when\n\t    // we use mixin, so we install a magic reference\n\t    customMixin(element, definition.prototype, definition.native);\n\t    element.__proto__ = definition.prototype;\n\t  }\n\t}\n\t\n\tfunction customMixin(inTarget, inSrc, inNative) {\n\t  // TODO(sjmiles): 'used' allows us to only copy the 'youngest' version of\n\t  // any property. This set should be precalculated. We also need to\n\t  // consider this for supporting 'super'.\n\t  var used = {};\n\t  // start with inSrc\n\t  var p = inSrc;\n\t  // The default is HTMLElement.prototype, so we add a test to avoid mixing in\n\t  // native prototypes\n\t  while (p !== inNative && p !== HTMLElement.prototype) {\n\t    var keys = Object.getOwnPropertyNames(p);\n\t    for (var i=0, k; k=keys[i]; i++) {\n\t      if (!used[k]) {\n\t        Object.defineProperty(inTarget, k,\n\t            Object.getOwnPropertyDescriptor(p, k));\n\t        used[k] = 1;\n\t      }\n\t    }\n\t    p = Object.getPrototypeOf(p);\n\t  }\n\t}\n\t\n\tfunction created(element) {\n\t  // invoke createdCallback\n\t  if (element.createdCallback) {\n\t    element.createdCallback();\n\t  }\n\t}\n\t\n\tscope.upgrade = upgrade;\n\tscope.upgradeWithDefinition = upgradeWithDefinition;\n\tscope.implementPrototype = implementPrototype;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 152:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t/**\n\t * Implements `document.registerElement`\n\t * @module register\n\t*/\n\t\n\t/**\n\t * Polyfilled extensions to the `document` object.\n\t * @class Document\n\t*/\n\t\n\twindow.CustomElements.addModule(function(scope) {\n\t\n\t// imports\n\tvar isIE = scope.isIE;\n\tvar upgradeDocumentTree = scope.upgradeDocumentTree;\n\tvar upgradeAll = scope.upgradeAll;\n\tvar upgradeWithDefinition = scope.upgradeWithDefinition;\n\tvar implementPrototype = scope.implementPrototype;\n\tvar useNative = scope.useNative;\n\t\n\t/**\n\t * Registers a custom tag name with the document.\n\t *\n\t * When a registered element is created, a `readyCallback` method is called\n\t * in the scope of the element. The `readyCallback` method can be specified on\n\t * either `options.prototype` or `options.lifecycle` with the latter taking\n\t * precedence.\n\t *\n\t * @method register\n\t * @param {String} name The tag name to register. Must include a dash ('-'),\n\t *    for example 'x-component'.\n\t * @param {Object} options\n\t *    @param {String} [options.extends]\n\t *      (_off spec_) Tag name of an element to extend (or blank for a new\n\t *      element). This parameter is not part of the specification, but instead\n\t *      is a hint for the polyfill because the extendee is difficult to infer.\n\t *      Remember that the input prototype must chain to the extended element's\n\t *      prototype (or HTMLElement.prototype) regardless of the value of\n\t *      `extends`.\n\t *    @param {Object} options.prototype The prototype to use for the new\n\t *      element. The prototype must inherit from HTMLElement.\n\t *    @param {Object} [options.lifecycle]\n\t *      Callbacks that fire at important phases in the life of the custom\n\t *      element.\n\t *\n\t * @example\n\t *      FancyButton = document.registerElement(\"fancy-button\", {\n\t *        extends: 'button',\n\t *        prototype: Object.create(HTMLButtonElement.prototype, {\n\t *          readyCallback: {\n\t *            value: function() {\n\t *              console.log(\"a fancy-button was created\",\n\t *            }\n\t *          }\n\t *        })\n\t *      });\n\t * @return {Function} Constructor for the newly registered type.\n\t */\n\tfunction register(name, options) {\n\t  //console.warn('document.registerElement(\"' + name + '\", ', options, ')');\n\t  // construct a defintion out of options\n\t  // TODO(sjmiles): probably should clone options instead of mutating it\n\t  var definition = options || {};\n\t  if (!name) {\n\t    throw new Error('document.registerElement: first argument `name` must not be empty');\n\t  }\n\t  if (name.indexOf('-') < 0) {\n\t    throw new Error('document.registerElement: first argument (\\'name\\') must contain a dash (\\'-\\'). Argument provided was \\'' + String(name) + '\\'.');\n\t  }\n\t  // prevent registering reserved names\n\t  if (isReservedTag(name)) {\n\t    throw new Error('Failed to execute \\'registerElement\\' on \\'Document\\': Registration failed for type \\'' + String(name) + '\\'. The type name is invalid.');\n\t  }\n\t  // elements may only be registered once\n\t  if (getRegisteredDefinition(name)) {\n\t    throw new Error('DuplicateDefinitionError: a type with name \\'' + String(name) + '\\' is already registered');\n\t  }\n\t  // prototype is optional, default to an extension of HTMLElement\n\t  if (!definition.prototype) {\n\t    definition.prototype = Object.create(HTMLElement.prototype);\n\t  }\n\t  // record name\n\t  definition.__name = name.toLowerCase();\n\t  // ensure extended name is also treated case-insensitively\n\t  if (definition.extends) {\n\t    definition.extends = definition.extends.toLowerCase();\n\t  }\n\t  // ensure a lifecycle object so we don't have to null test it\n\t  definition.lifecycle = definition.lifecycle || {};\n\t  // build a list of ancestral custom elements (for native base detection)\n\t  // TODO(sjmiles): we used to need to store this, but current code only\n\t  // uses it in 'resolveTagName': it should probably be inlined\n\t  definition.ancestry = ancestry(definition.extends);\n\t  // extensions of native specializations of HTMLElement require localName\n\t  // to remain native, and use secondary 'is' specifier for extension type\n\t  resolveTagName(definition);\n\t  // some platforms require modifications to the user-supplied prototype\n\t  // chain\n\t  resolvePrototypeChain(definition);\n\t  // overrides to implement attributeChanged callback\n\t  overrideAttributeApi(definition.prototype);\n\t  // 7.1.5: Register the DEFINITION with DOCUMENT\n\t  registerDefinition(definition.__name, definition);\n\t  // 7.1.7. Run custom element constructor generation algorithm with PROTOTYPE\n\t  // 7.1.8. Return the output of the previous step.\n\t  definition.ctor = generateConstructor(definition);\n\t  definition.ctor.prototype = definition.prototype;\n\t  // force our .constructor to be our actual constructor\n\t  definition.prototype.constructor = definition.ctor;\n\t  // if initial parsing is complete\n\t  if (scope.ready) {\n\t    // upgrade any pre-existing nodes of this type\n\t    upgradeDocumentTree(document);\n\t  }\n\t  return definition.ctor;\n\t}\n\t\n\t// attribute watching\n\tfunction overrideAttributeApi(prototype) {\n\t  // overrides to implement callbacks\n\t  // TODO(sjmiles): should support access via .attributes NamedNodeMap\n\t  // TODO(sjmiles): preserves user defined overrides, if any\n\t  if (prototype.setAttribute._polyfilled) {\n\t    return;\n\t  }\n\t  var setAttribute = prototype.setAttribute;\n\t  prototype.setAttribute = function(name, value) {\n\t    changeAttribute.call(this, name, value, setAttribute);\n\t  };\n\t  var removeAttribute = prototype.removeAttribute;\n\t  prototype.removeAttribute = function(name) {\n\t    changeAttribute.call(this, name, null, removeAttribute);\n\t  };\n\t  prototype.setAttribute._polyfilled = true;\n\t}\n\t\n\t// https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/\n\t// index.html#dfn-attribute-changed-callback\n\tfunction changeAttribute(name, value, operation) {\n\t  name = name.toLowerCase();\n\t  var oldValue = this.getAttribute(name);\n\t  operation.apply(this, arguments);\n\t  var newValue = this.getAttribute(name);\n\t  if (this.attributeChangedCallback &&\n\t      (newValue !== oldValue)) {\n\t    this.attributeChangedCallback(name, oldValue, newValue);\n\t  }\n\t}\n\t\n\tfunction isReservedTag(name) {\n\t  for (var i = 0; i < reservedTagList.length; i++) {\n\t    if (name === reservedTagList[i]) {\n\t      return true;\n\t    }\n\t  }\n\t}\n\t\n\tvar reservedTagList = [\n\t  'annotation-xml', 'color-profile', 'font-face', 'font-face-src',\n\t  'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph'\n\t];\n\t\n\tfunction ancestry(extnds) {\n\t  var extendee = getRegisteredDefinition(extnds);\n\t  if (extendee) {\n\t    return ancestry(extendee.extends).concat([extendee]);\n\t  }\n\t  return [];\n\t}\n\t\n\tfunction resolveTagName(definition) {\n\t  // if we are explicitly extending something, that thing is our\n\t  // baseTag, unless it represents a custom component\n\t  var baseTag = definition.extends;\n\t  // if our ancestry includes custom components, we only have a\n\t  // baseTag if one of them does\n\t  for (var i=0, a; (a=definition.ancestry[i]); i++) {\n\t    baseTag = a.is && a.tag;\n\t  }\n\t  // our tag is our baseTag, if it exists, and otherwise just our name\n\t  definition.tag = baseTag || definition.__name;\n\t  if (baseTag) {\n\t    // if there is a base tag, use secondary 'is' specifier\n\t    definition.is = definition.__name;\n\t  }\n\t}\n\t\n\tfunction resolvePrototypeChain(definition) {\n\t  // if we don't support __proto__ we need to locate the native level\n\t  // prototype for precise mixing in\n\t  if (!Object.__proto__) {\n\t    // default prototype\n\t    var nativePrototype = HTMLElement.prototype;\n\t    // work out prototype when using type-extension\n\t    if (definition.is) {\n\t      var inst = document.createElement(definition.tag);\n\t      nativePrototype = Object.getPrototypeOf(inst);\n\t    }\n\t    // ensure __proto__ reference is installed at each point on the prototype\n\t    // chain.\n\t    // NOTE: On platforms without __proto__, a mixin strategy is used instead\n\t    // of prototype swizzling. In this case, this generated __proto__ provides\n\t    // limited support for prototype traversal.\n\t    var proto = definition.prototype, ancestor;\n\t    var foundPrototype = false;\n\t    while (proto) {\n\t      if (proto == nativePrototype) {\n\t        foundPrototype = true;\n\t      }\n\t      ancestor = Object.getPrototypeOf(proto);\n\t      if (ancestor) {\n\t        proto.__proto__ = ancestor;\n\t      }\n\t      proto = ancestor;\n\t    }\n\t    if (!foundPrototype) {\n\t      // Note the spec actually allows this, but it results in broken elements\n\t      // and is difficult to polyfill correctly, so we throw\n\t      console.warn(definition.tag + ' prototype not found in prototype chain for ' +\n\t        definition.is);\n\t    }\n\t    // cache this in case of mixin\n\t    definition.native = nativePrototype;\n\t  }\n\t}\n\t\n\t// SECTION 4\n\t\n\tfunction instantiate(definition) {\n\t  // 4.a.1. Create a new object that implements PROTOTYPE\n\t  // 4.a.2. Let ELEMENT by this new object\n\t  //\n\t  // the custom element instantiation algorithm must also ensure that the\n\t  // output is a valid DOM element with the proper wrapper in place.\n\t  //\n\t  return upgradeWithDefinition(domCreateElement(definition.tag), definition);\n\t}\n\t\n\t// element registry (maps tag names to definitions)\n\t\n\tvar registry = {};\n\t\n\tfunction getRegisteredDefinition(name) {\n\t  if (name) {\n\t    return registry[name.toLowerCase()];\n\t  }\n\t}\n\t\n\tfunction registerDefinition(name, definition) {\n\t  registry[name] = definition;\n\t}\n\t\n\tfunction generateConstructor(definition) {\n\t  return function() {\n\t    return instantiate(definition);\n\t  };\n\t}\n\t\n\tvar HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n\tfunction createElementNS(namespace, tag, typeExtension) {\n\t  // NOTE: we do not support non-HTML elements,\n\t  // just call createElementNS for non HTML Elements\n\t  if (namespace === HTML_NAMESPACE) {\n\t    return createElement(tag, typeExtension);\n\t  } else {\n\t    return domCreateElementNS(namespace, tag);\n\t  }\n\t}\n\t\n\tfunction createElement(tag, typeExtension) {\n\t  // TODO(sjmiles): ignore 'tag' when using 'typeExtension', we could\n\t  // error check it, or perhaps there should only ever be one argument\n\t  if (tag) {\n\t    tag = tag.toLowerCase();\n\t  }\n\t  if (typeExtension) {\n\t    typeExtension = typeExtension.toLowerCase();\n\t  }\n\t  var definition = getRegisteredDefinition(typeExtension || tag);\n\t  if (definition) {\n\t    if (tag == definition.tag && typeExtension == definition.is) {\n\t      return new definition.ctor();\n\t    }\n\t    // Handle empty string for type extension.\n\t    if (!typeExtension && !definition.is) {\n\t      return new definition.ctor();\n\t    }\n\t  }\n\t  var element;\n\t  if (typeExtension) {\n\t    element = createElement(tag);\n\t    element.setAttribute('is', typeExtension);\n\t    return element;\n\t  }\n\t  element = domCreateElement(tag);\n\t  // Custom tags should be HTMLElements even if not upgraded.\n\t  if (tag.indexOf('-') >= 0) {\n\t    implementPrototype(element, HTMLElement);\n\t  }\n\t  return element;\n\t}\n\t\n\t// capture native createElement before we override it\n\tvar domCreateElement = document.createElement.bind(document);\n\tvar domCreateElementNS = document.createElementNS.bind(document);\n\t\n\t// Create a custom 'instanceof'. This is necessary when CustomElements\n\t// are implemented via a mixin strategy, as for example on IE10.\n\tvar isInstance;\n\tif (!Object.__proto__ && !useNative) {\n\t  isInstance = function(obj, ctor) {\n\t    // Allows instanceof(<div>, HTMLElement.prototype) to work\n\t    if (obj instanceof ctor) {\n\t      return true;\n\t    }\n\t    var p = obj;\n\t    while (p) {\n\t      // NOTE: this is not technically correct since we're not checking if\n\t      // an object is an instance of a constructor; however, this should\n\t      // be good enough for the mixin strategy.\n\t      if (p === ctor.prototype) {\n\t        return true;\n\t      }\n\t      p = p.__proto__;\n\t    }\n\t    return false;\n\t  };\n\t} else {\n\t  isInstance = function(obj, base) {\n\t    return obj instanceof base;\n\t  };\n\t}\n\t\n\t// wrap a dom object method that works on nodes such that it forces upgrade\n\tfunction wrapDomMethodToForceUpgrade(obj, methodName) {\n\t  var orig = obj[methodName];\n\t  obj[methodName] = function() {\n\t    var n = orig.apply(this, arguments);\n\t    upgradeAll(n);\n\t    return n;\n\t  };\n\t}\n\t\n\twrapDomMethodToForceUpgrade(Node.prototype, 'cloneNode');\n\twrapDomMethodToForceUpgrade(document, 'importNode');\n\t\n\t// exports\n\tdocument.registerElement = register;\n\tdocument.createElement = createElement; // override\n\tdocument.createElementNS = createElementNS; // override\n\tscope.registry = registry;\n\tscope.instanceof = isInstance;\n\tscope.reservedTagList = reservedTagList;\n\tscope.getRegisteredDefinition = getRegisteredDefinition;\n\t\n\t// bc\n\tdocument.register = document.registerElement;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 153:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t(function(scope){\n\t\n\t// imports\n\tvar useNative = scope.useNative;\n\tvar initializeModules = scope.initializeModules;\n\t\n\tvar isIE = scope.isIE;\n\t\n\t// If native, setup stub api and bail.\n\t// NOTE: we fire `WebComponentsReady` under native for api compatibility\n\tif (useNative) {\n\t  // stub\n\t  var nop = function() {};\n\t\n\t  // exports\n\t  scope.watchShadow = nop;\n\t  scope.upgrade = nop;\n\t  scope.upgradeAll = nop;\n\t  scope.upgradeDocumentTree = nop;\n\t  scope.upgradeSubtree = nop;\n\t  scope.takeRecords = nop;\n\t\n\t  scope.instanceof = function(obj, base) {\n\t    return obj instanceof base;\n\t  };\n\t\n\t} else {\n\t  // Initialize polyfill modules. Note, polyfill modules are loaded but not\n\t  // executed; this is a convenient way to control which modules run when\n\t  // the polyfill is required and allows the polyfill to load even when it's\n\t  // not needed.\n\t  initializeModules();\n\t}\n\t\n\t// imports\n\tvar upgradeDocumentTree = scope.upgradeDocumentTree;\n\tvar upgradeDocument = scope.upgradeDocument;\n\t\n\t// ShadowDOM polyfill wraps elements but some elements like `document`\n\t// cannot be wrapped so we help the polyfill by wrapping some elements.\n\tif (!window.wrap) {\n\t  if (window.ShadowDOMPolyfill) {\n\t    window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded;\n\t    window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded;\n\t  } else {\n\t    window.wrap = window.unwrap = function(node) {\n\t      return node;\n\t    };\n\t  }\n\t}\n\t\n\t// eagarly upgrade imported documents\n\tif (window.HTMLImports) {\n\t  window.HTMLImports.__importsParsingHook = function(elt) {\n\t    if (elt.import) {\n\t      upgradeDocument(wrap(elt.import));\n\t    }\n\t  };\n\t}\n\t\n\t// bootstrap parsing\n\tfunction bootstrap() {\n\t  // one more upgrade to catch out of order registrations\n\t  upgradeDocumentTree(window.wrap(document));\n\t  // install upgrade hook if HTMLImports are available\n\t  // set internal 'ready' flag, now document.registerElement will trigger\n\t  // synchronous upgrades\n\t  window.CustomElements.ready = true;\n\t  // async to ensure *native* custom elements upgrade prior to this\n\t  // DOMContentLoaded can fire before elements upgrade (e.g. when there's\n\t  // an external script)\n\t  // Delay doubly to help workaround\n\t  // https://code.google.com/p/chromium/issues/detail?id=516550.\n\t  // CustomElements must use requestAnimationFrame in attachedCallback\n\t  // to query style/layout data. The WebComponentsReady event is intended\n\t  // to convey overall readiness, which ideally should be after elements\n\t  // are attached. Adding a slight extra delay to WebComponentsReady\n\t  // helps preserve this guarantee.\n\t  var requestAnimationFrame = window.requestAnimationFrame || function(f) {\n\t    setTimeout(f, 16);\n\t  };\n\t  requestAnimationFrame(function() {\n\t    setTimeout(function() {\n\t      // capture blunt profiling data\n\t      window.CustomElements.readyTime = Date.now();\n\t      if (window.HTMLImports) {\n\t        window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime;\n\t      }\n\t      // notify the system that we are bootstrapped\n\t      document.dispatchEvent(\n\t        new CustomEvent('WebComponentsReady', {bubbles: true})\n\t      );\n\t    });\n\t  });\n\t}\n\t\n\t// When loading at readyState complete time (or via flag), boot custom elements\n\t// immediately.\n\t// If relevant, HTMLImports must already be loaded.\n\tif (document.readyState === 'complete' || scope.flags.eager) {\n\t  bootstrap();\n\t// When loading at readyState interactive time, bootstrap only if HTMLImports\n\t// are not pending. Also avoid IE as the semantics of this state are unreliable.\n\t} else if (document.readyState === 'interactive' && !window.attachEvent &&\n\t    (!window.HTMLImports || window.HTMLImports.ready)) {\n\t  bootstrap();\n\t// When loading at other readyStates, wait for the appropriate DOM event to\n\t// bootstrap.\n\t} else {\n\t  var loadEvent = window.HTMLImports && !window.HTMLImports.ready ?\n\t      'HTMLImportsLoaded' : 'DOMContentLoaded';\n\t  window.addEventListener(loadEvent, bootstrap);\n\t}\n\t\n\t})(window.CustomElements);\n\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t\n\t/*\n\t * PLEASE NOTE: This file is duplicated within Polymer. Please keep it in sync!\n\t * https://github.com/Polymer/polymer/blob/master/src/system/HTMLImports/base.js\n\t */\n\t\n\t/*\n\t\tCreate polyfill scope and feature detect native support.\n\t*/\n\twindow.HTMLImports = window.HTMLImports || {flags:{}};\n\t\n\t(function(scope) {\n\t\n\t/**\n\t\tBasic setup and simple module executer. We collect modules and then execute\n\t  the code later, only if it's necessary for polyfilling.\n\t*/\n\tvar IMPORT_LINK_TYPE = 'import';\n\tvar useNative = Boolean(IMPORT_LINK_TYPE in document.createElement('link'));\n\t\n\t/**\n\t  Support `currentScript` on all browsers as `document._currentScript.`\n\t\n\t  NOTE: We cannot polyfill `document.currentScript` because it's not possible\n\t  both to override and maintain the ability to capture the native value.\n\t  Therefore we choose to expose `_currentScript` both when native imports\n\t  and the polyfill are in use.\n\t*/\n\t// NOTE: ShadowDOMPolyfill intrusion.\n\tvar hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);\n\tvar wrap = function(node) {\n\t  return hasShadowDOMPolyfill ? window.ShadowDOMPolyfill.wrapIfNeeded(node) : node;\n\t};\n\tvar rootDocument = wrap(document);\n\t\n\tvar currentScriptDescriptor = {\n\t  get: function() {\n\t    var script = window.HTMLImports.currentScript || document.currentScript ||\n\t        // NOTE: only works when called in synchronously executing code.\n\t        // readyState should check if `loading` but IE10 is\n\t        // interactive when scripts run so we cheat.\n\t        (document.readyState !== 'complete' ?\n\t        document.scripts[document.scripts.length - 1] : null);\n\t    return wrap(script);\n\t  },\n\t  configurable: true\n\t};\n\t\n\tObject.defineProperty(document, '_currentScript', currentScriptDescriptor);\n\tObject.defineProperty(rootDocument, '_currentScript', currentScriptDescriptor);\n\t\n\t/**\n\t  Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n\t  method. This api is necessary because unlike the native implementation,\n\t  script elements do not force imports to resolve. Instead, users should wrap\n\t  code in either an `HTMLImportsLoaded` handler or after load time in an\n\t  `HTMLImports.whenReady(callback)` call.\n\t\n\t  NOTE: This module also supports these apis under the native implementation.\n\t  Therefore, if this file is loaded, the same code can be used under both\n\t  the polyfill and native implementation.\n\t */\n\t\n\tvar isIE = /Trident/.test(navigator.userAgent);\n\t\n\t// call a callback when all HTMLImports in the document at call time\n\t// (or at least document ready) have loaded.\n\t// 1. ensure the document is in a ready state (has dom), then\n\t// 2. watch for loading of imports and call callback when done\n\tfunction whenReady(callback, doc) {\n\t  doc = doc || rootDocument;\n\t  // if document is loading, wait and try again\n\t  whenDocumentReady(function() {\n\t    watchImportsLoad(callback, doc);\n\t  }, doc);\n\t}\n\t\n\t// call the callback when the document is in a ready state (has dom)\n\tvar requiredReadyState = isIE ? 'complete' : 'interactive';\n\tvar READY_EVENT = 'readystatechange';\n\tfunction isDocumentReady(doc) {\n\t  return (doc.readyState === 'complete' ||\n\t      doc.readyState === requiredReadyState);\n\t}\n\t\n\t// call <callback> when we ensure the document is in a ready state\n\tfunction whenDocumentReady(callback, doc) {\n\t  if (!isDocumentReady(doc)) {\n\t    var checkReady = function() {\n\t      if (doc.readyState === 'complete' ||\n\t          doc.readyState === requiredReadyState) {\n\t        doc.removeEventListener(READY_EVENT, checkReady);\n\t        whenDocumentReady(callback, doc);\n\t      }\n\t    };\n\t    doc.addEventListener(READY_EVENT, checkReady);\n\t  } else if (callback) {\n\t    callback();\n\t  }\n\t}\n\t\n\tfunction markTargetLoaded(event) {\n\t  event.target.__loaded = true;\n\t}\n\t\n\t// call <callback> when we ensure all imports have loaded\n\tfunction watchImportsLoad(callback, doc) {\n\t  var imports = doc.querySelectorAll('link[rel=import]');\n\t  var parsedCount = 0, importCount = imports.length, newImports = [], errorImports = [];\n\t  function checkDone() {\n\t    if (parsedCount == importCount && callback) {\n\t      callback({\n\t        allImports: imports,\n\t        loadedImports: newImports,\n\t        errorImports: errorImports\n\t      });\n\t    }\n\t  }\n\t  function loadedImport(e) {\n\t    markTargetLoaded(e);\n\t    newImports.push(this);\n\t    parsedCount++;\n\t    checkDone();\n\t  }\n\t  function errorLoadingImport(e) {\n\t    errorImports.push(this);\n\t    parsedCount++;\n\t    checkDone();\n\t  }\n\t  if (importCount) {\n\t    for (var i=0, imp; i<importCount && (imp=imports[i]); i++) {\n\t      if (isImportLoaded(imp)) {\n\t        newImports.push(this);\n\t        parsedCount++;\n\t        checkDone();\n\t      } else {\n\t        imp.addEventListener('load', loadedImport);\n\t        imp.addEventListener('error', errorLoadingImport);\n\t      }\n\t    }\n\t  } else {\n\t    checkDone();\n\t  }\n\t}\n\t\n\t// NOTE: test for native imports loading is based on explicitly watching\n\t// all imports (see below).\n\t// However, we cannot rely on this entirely without watching the entire document\n\t// for import links. For perf reasons, currently only head is watched.\n\t// Instead, we fallback to checking if the import property is available\n\t// and the document is not itself loading.\n\tfunction isImportLoaded(link) {\n\t  return useNative ? link.__loaded ||\n\t      (link.import && link.import.readyState !== 'loading') :\n\t      link.__importParsed;\n\t}\n\t\n\t// TODO(sorvell): Workaround for\n\t// https://www.w3.org/Bugs/Public/show_bug.cgi?id=25007, should be removed when\n\t// this bug is addressed.\n\t// (1) Install a mutation observer to see when HTMLImports have loaded\n\t// (2) if this script is run during document load it will watch any existing\n\t// imports for loading.\n\t//\n\t// NOTE: The workaround has restricted functionality: (1) it's only compatible\n\t// with imports that are added to document.head since the mutation observer\n\t// watches only head for perf reasons, (2) it requires this script\n\t// to run before any imports have completed loading.\n\tif (useNative) {\n\t  new MutationObserver(function(mxns) {\n\t    for (var i=0, l=mxns.length, m; (i < l) && (m=mxns[i]); i++) {\n\t      if (m.addedNodes) {\n\t        handleImports(m.addedNodes);\n\t      }\n\t    }\n\t  }).observe(document.head, {childList: true});\n\t\n\t  function handleImports(nodes) {\n\t    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n\t      if (isImport(n)) {\n\t        handleImport(n);\n\t      }\n\t    }\n\t  }\n\t\n\t  function isImport(element) {\n\t    return element.localName === 'link' && element.rel === 'import';\n\t  }\n\t\n\t  function handleImport(element) {\n\t    var loaded = element.import;\n\t    if (loaded) {\n\t      markTargetLoaded({target: element});\n\t    } else {\n\t      element.addEventListener('load', markTargetLoaded);\n\t      element.addEventListener('error', markTargetLoaded);\n\t    }\n\t  }\n\t\n\t  // make sure to catch any imports that are in the process of loading\n\t  // when this script is run.\n\t  (function() {\n\t    if (document.readyState === 'loading') {\n\t      var imports = document.querySelectorAll('link[rel=import]');\n\t      for (var i=0, l=imports.length, imp; (i<l) && (imp=imports[i]); i++) {\n\t        handleImport(imp);\n\t      }\n\t    }\n\t  })();\n\t\n\t}\n\t\n\t// Fire the 'HTMLImportsLoaded' event when imports in document at load time\n\t// have loaded. This event is required to simulate the script blocking\n\t// behavior of native imports. A main document script that needs to be sure\n\t// imports have loaded should wait for this event.\n\twhenReady(function(detail) {\n\t  window.HTMLImports.ready = true;\n\t  window.HTMLImports.readyTime = new Date().getTime();\n\t  var evt = rootDocument.createEvent(\"CustomEvent\");\n\t  evt.initCustomEvent(\"HTMLImportsLoaded\", true, true, detail);\n\t  rootDocument.dispatchEvent(evt);\n\t});\n\t\n\t// exports\n\tscope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;\n\tscope.useNative = useNative;\n\tscope.rootDocument = rootDocument;\n\tscope.whenReady = whenReady;\n\tscope.isIE = isIE;\n\t\n\t})(window.HTMLImports);\n\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t(function(scope) {\n\t\n\t// world's simplest module initializer\n\tvar modules = [];\n\tvar addModule = function(module) {\n\t\tmodules.push(module);\n\t};\n\t\n\tvar initializeModules = function() {\n\t\tmodules.forEach(function(module) {\n\t\t\tmodule(scope);\n\t\t});\n\t};\n\t\n\t// exports\n\tscope.addModule = addModule;\n\tscope.initializeModules = initializeModules;\n\t\n\t})(window.HTMLImports);\n\t\n\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\tvar CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n\tvar CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\t\n\t// path fixup: style elements in imports must be made relative to the main\n\t// document. We fixup url's in url() and @import.\n\tvar path = {\n\t\n\t  resolveUrlsInStyle: function(style, linkUrl) {\n\t    var doc = style.ownerDocument;\n\t    var resolver = doc.createElement('a');\n\t    style.textContent = this.resolveUrlsInCssText(style.textContent, linkUrl, resolver);\n\t    return style;\n\t  },\n\t\n\t  resolveUrlsInCssText: function(cssText, linkUrl, urlObj) {\n\t    var r = this.replaceUrls(cssText, urlObj, linkUrl, CSS_URL_REGEXP);\n\t    r = this.replaceUrls(r, urlObj, linkUrl, CSS_IMPORT_REGEXP);\n\t    return r;\n\t  },\n\t\n\t  replaceUrls: function(text, urlObj, linkUrl, regexp) {\n\t    return text.replace(regexp, function(m, pre, url, post) {\n\t      var urlPath = url.replace(/[\"']/g, '');\n\t      if (linkUrl) {\n\t        urlPath = (new URL(urlPath, linkUrl)).href;\n\t      }\n\t      urlObj.href = urlPath;\n\t      urlPath = urlObj.href;\n\t      return pre + '\\'' + urlPath + '\\'' + post;\n\t    });\n\t  }\n\t\n\t};\n\t\n\t// exports\n\tscope.path = path;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 157:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t/*\n\t  xhr processor.\n\t*/\n\tvar xhr = {\n\t  async: true,\n\t\n\t  ok: function(request) {\n\t    return (request.status >= 200 && request.status < 300)\n\t        || (request.status === 304)\n\t        || (request.status === 0);\n\t  },\n\t\n\t  load: function(url, next, nextContext) {\n\t    var request = new XMLHttpRequest();\n\t    if (scope.flags.debug || scope.flags.bust) {\n\t      url += '?' + Math.random();\n\t    }\n\t    request.open('GET', url, xhr.async);\n\t    request.addEventListener('readystatechange', function(e) {\n\t      if (request.readyState === 4) {\n\t        // Servers redirecting an import can add a Location header to help us\n\t        // polyfill correctly.\n\t        var redirectedUrl = null;\n\t        try {\n\t          var locationHeader = request.getResponseHeader(\"Location\");\n\t          if (locationHeader) {\n\t            redirectedUrl = (locationHeader.substr( 0, 1 ) === \"/\")\n\t              ? location.origin + locationHeader  // Location is a relative path\n\t              : locationHeader;                   // Full path\n\t          }\n\t        } catch ( e ) {\n\t            console.error( e.message );\n\t        }\n\t        next.call(nextContext, !xhr.ok(request) && request,\n\t            request.response || request.responseText, redirectedUrl);\n\t      }\n\t    });\n\t    request.send();\n\t    return request;\n\t  },\n\t\n\t  loadDocument: function(url, next, nextContext) {\n\t    this.load(url, next, nextContext).responseType = 'document';\n\t  }\n\t\n\t};\n\t\n\t// exports\n\tscope.xhr = xhr;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 158:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t// imports\n\tvar xhr = scope.xhr;\n\tvar flags = scope.flags;\n\t\n\t// This loader supports a dynamic list of urls\n\t// and an oncomplete callback that is called when the loader is done.\n\t// NOTE: The polyfill currently does *not* need this dynamism or the\n\t// onComplete concept. Because of this, the loader could be simplified\n\t// quite a bit.\n\tvar Loader = function(onLoad, onComplete) {\n\t  this.cache = {};\n\t  this.onload = onLoad;\n\t  this.oncomplete = onComplete;\n\t  this.inflight = 0;\n\t  this.pending = {};\n\t};\n\t\n\tLoader.prototype = {\n\t\n\t  addNodes: function(nodes) {\n\t    // number of transactions to complete\n\t    this.inflight += nodes.length;\n\t    // commence transactions\n\t    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n\t      this.require(n);\n\t    }\n\t    // anything to do?\n\t    this.checkDone();\n\t  },\n\t\n\t  addNode: function(node) {\n\t    // number of transactions to complete\n\t    this.inflight++;\n\t    // commence transactions\n\t    this.require(node);\n\t    // anything to do?\n\t    this.checkDone();\n\t  },\n\t\n\t  require: function(elt) {\n\t    var url = elt.src || elt.href;\n\t    // ensure we have a standard url that can be used\n\t    // reliably for deduping.\n\t    // TODO(sjmiles): ad-hoc\n\t    elt.__nodeUrl = url;\n\t    // deduplication\n\t    if (!this.dedupe(url, elt)) {\n\t      // fetch this resource\n\t      this.fetch(url, elt);\n\t    }\n\t  },\n\t\n\t  dedupe: function(url, elt) {\n\t    if (this.pending[url]) {\n\t      // add to list of nodes waiting for inUrl\n\t      this.pending[url].push(elt);\n\t      // don't need fetch\n\t      return true;\n\t    }\n\t    var resource;\n\t    if (this.cache[url]) {\n\t      this.onload(url, elt, this.cache[url]);\n\t      // finished this transaction\n\t      this.tail();\n\t      // don't need fetch\n\t      return true;\n\t    }\n\t    // first node waiting for inUrl\n\t    this.pending[url] = [elt];\n\t    // need fetch (not a dupe)\n\t    return false;\n\t  },\n\t\n\t  fetch: function(url, elt) {\n\t    flags.load && console.log('fetch', url, elt);\n\t    if (!url) {\n\t      setTimeout(function() {\n\t        this.receive(url, elt, {error: 'href must be specified'}, null);\n\t      }.bind(this), 0);\n\t    } else if (url.match(/^data:/)) {\n\t      // Handle Data URI Scheme\n\t      var pieces = url.split(',');\n\t      var header = pieces[0];\n\t      var body = pieces[1];\n\t      if(header.indexOf(';base64') > -1) {\n\t        body = atob(body);\n\t      } else {\n\t        body = decodeURIComponent(body);\n\t      }\n\t      setTimeout(function() {\n\t          this.receive(url, elt, null, body);\n\t      }.bind(this), 0);\n\t    } else {\n\t      var receiveXhr = function(err, resource, redirectedUrl) {\n\t        this.receive(url, elt, err, resource, redirectedUrl);\n\t      }.bind(this);\n\t      xhr.load(url, receiveXhr);\n\t    }\n\t  },\n\t\n\t  receive: function(url, elt, err, resource, redirectedUrl) {\n\t    this.cache[url] = resource;\n\t    var $p = this.pending[url];\n\t    for (var i=0, l=$p.length, p; (i<l) && (p=$p[i]); i++) {\n\t      // If url was redirected, use the redirected location so paths are\n\t      // calculated relative to that.\n\t      this.onload(url, p, resource, err, redirectedUrl);\n\t      this.tail();\n\t    }\n\t    this.pending[url] = null;\n\t  },\n\t\n\t  tail: function() {\n\t    --this.inflight;\n\t    this.checkDone();\n\t  },\n\t\n\t  checkDone: function() {\n\t    if (!this.inflight) {\n\t      this.oncomplete();\n\t    }\n\t  }\n\t\n\t};\n\t\n\t// exports\n\tscope.Loader = Loader;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t/*\n\t  Use a mutation observer to call a callback for all added nodes.\n\t*/\n\tvar Observer = function(addCallback) {\n\t  this.addCallback = addCallback;\n\t  this.mo = new MutationObserver(this.handler.bind(this));\n\t};\n\t\n\tObserver.prototype = {\n\t\n\t  // we track mutations for addedNodes, looking for imports\n\t  handler: function(mutations) {\n\t    for (var i=0, l=mutations.length, m; (i<l) && (m=mutations[i]); i++) {\n\t      if (m.type === 'childList' && m.addedNodes.length) {\n\t        this.addedNodes(m.addedNodes);\n\t      }\n\t    }\n\t  },\n\t\n\t  addedNodes: function(nodes) {\n\t    if (this.addCallback) {\n\t      this.addCallback(nodes);\n\t    }\n\t    for (var i=0, l=nodes.length, n, loading; (i<l) && (n=nodes[i]); i++) {\n\t      if (n.children && n.children.length) {\n\t        this.addedNodes(n.children);\n\t      }\n\t    }\n\t  },\n\t\n\t  observe: function(root) {\n\t    this.mo.observe(root, {childList: true, subtree: true});\n\t  }\n\t\n\t};\n\t\n\t// exports\n\tscope.Observer = Observer;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 160:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t// imports\n\tvar path = scope.path;\n\tvar rootDocument = scope.rootDocument;\n\tvar flags = scope.flags;\n\tvar isIE = scope.isIE;\n\tvar IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\n\tvar IMPORT_SELECTOR = 'link[rel=' + IMPORT_LINK_TYPE + ']';\n\t\n\t// importParser\n\t// highlander object to manage parsing of imports\n\t// parses import related elements and ensures proper parse order\n\t// parse order is enforced by crawling the tree and monitoring which elements\n\t// have been parsed;\n\t// elements can be dynamically added to imports. These are maintained in a\n\t// separate queue and parsed after all other elements.\n\tvar importParser = {\n\t\n\t  // parse selectors for main document elements\n\t  documentSelectors: IMPORT_SELECTOR,\n\t\n\t  // parse selectors for import document elements\n\t  importsSelectors: [\n\t    IMPORT_SELECTOR,\n\t    'link[rel=stylesheet]:not([type])',\n\t    'style:not([type])',\n\t    'script:not([type])',\n\t    'script[type=\"application/javascript\"]',\n\t    'script[type=\"text/javascript\"]'\n\t  ].join(','),\n\t\n\t  map: {\n\t    link: 'parseLink',\n\t    script: 'parseScript',\n\t    style: 'parseStyle'\n\t  },\n\t\n\t  dynamicElements: [],\n\t\n\t  // try to parse the next import in the tree\n\t  parseNext: function() {\n\t    var next = this.nextToParse();\n\t    if (next) {\n\t      this.parse(next);\n\t    }\n\t  },\n\t\n\t  parse: function(elt) {\n\t    if (this.isParsed(elt)) {\n\t      flags.parse && console.log('[%s] is already parsed', elt.localName);\n\t      return;\n\t    }\n\t    var fn = this[this.map[elt.localName]];\n\t    if (fn) {\n\t      this.markParsing(elt);\n\t      fn.call(this, elt);\n\t    }\n\t  },\n\t\n\t  // marks an element for dynamic parsing and attempts to parse the next element\n\t  parseDynamic: function(elt, quiet) {\n\t    this.dynamicElements.push(elt);\n\t    if (!quiet) {\n\t      this.parseNext();\n\t    }\n\t  },\n\t\n\t  // only 1 element may be parsed at a time; parsing is async so each\n\t  // parsing implementation must inform the system that parsing is complete\n\t  // via markParsingComplete.\n\t  // To prompt the system to parse the next element, parseNext should then be\n\t  // called.\n\t  // Note, parseNext used to be included at the end of markParsingComplete, but\n\t  // we must not do this so that, for example, we can (1) mark parsing complete\n\t  // then (2) fire an import load event, and then (3) parse the next resource.\n\t  markParsing: function(elt) {\n\t    flags.parse && console.log('parsing', elt);\n\t    this.parsingElement = elt;\n\t  },\n\t\n\t  markParsingComplete: function(elt) {\n\t    elt.__importParsed = true;\n\t    this.markDynamicParsingComplete(elt);\n\t    if (elt.__importElement) {\n\t      elt.__importElement.__importParsed = true;\n\t      this.markDynamicParsingComplete(elt.__importElement);\n\t    }\n\t    this.parsingElement = null;\n\t    flags.parse && console.log('completed', elt);\n\t  },\n\t\n\t  markDynamicParsingComplete: function(elt) {\n\t    var i = this.dynamicElements.indexOf(elt);\n\t    if (i >= 0) {\n\t      this.dynamicElements.splice(i, 1);\n\t    }\n\t  },\n\t\n\t  parseImport: function(elt) {\n\t    elt.import = elt.__doc;\n\t    if (window.HTMLImports.__importsParsingHook) {\n\t      window.HTMLImports.__importsParsingHook(elt);\n\t    }\n\t    if (elt.import) {\n\t      elt.import.__importParsed = true;\n\t    }\n\t    this.markParsingComplete(elt);\n\t    // fire load event\n\t    if (elt.__resource && !elt.__error) {\n\t      elt.dispatchEvent(new CustomEvent('load', {bubbles: false}));\n\t    } else {\n\t      elt.dispatchEvent(new CustomEvent('error', {bubbles: false}));\n\t    }\n\t    // TODO(sorvell): workaround for Safari addEventListener not working\n\t    // for elements not in the main document.\n\t    if (elt.__pending) {\n\t      var fn;\n\t      while (elt.__pending.length) {\n\t        fn = elt.__pending.shift();\n\t        if (fn) {\n\t          fn({target: elt});\n\t        }\n\t      }\n\t    }\n\t    this.parseNext();\n\t  },\n\t\n\t  parseLink: function(linkElt) {\n\t    if (nodeIsImport(linkElt)) {\n\t      this.parseImport(linkElt);\n\t    } else {\n\t      // make href absolute\n\t      linkElt.href = linkElt.href;\n\t      this.parseGeneric(linkElt);\n\t    }\n\t  },\n\t\n\t  parseStyle: function(elt) {\n\t    // TODO(sorvell): style element load event can just not fire so clone styles\n\t    var src = elt;\n\t    elt = cloneStyle(elt);\n\t    src.__appliedElement = elt;\n\t    elt.__importElement = src;\n\t    this.parseGeneric(elt);\n\t  },\n\t\n\t  parseGeneric: function(elt) {\n\t    this.trackElement(elt);\n\t    this.addElementToDocument(elt);\n\t  },\n\t\n\t  rootImportForElement: function(elt) {\n\t    var n = elt;\n\t    while (n.ownerDocument.__importLink) {\n\t      n = n.ownerDocument.__importLink;\n\t    }\n\t    return n;\n\t  },\n\t\n\t  addElementToDocument: function(elt) {\n\t    var port = this.rootImportForElement(elt.__importElement || elt);\n\t    port.parentNode.insertBefore(elt, port);\n\t  },\n\t\n\t  // tracks when a loadable element has loaded\n\t  trackElement: function(elt, callback) {\n\t    var self = this;\n\t    var done = function(e) {\n\t      // make sure we don't get multiple load/error signals (FF seems to do\n\t      // this sometimes when <style> elments change)\n\t      elt.removeEventListener('load', done);\n\t      elt.removeEventListener('error', done);\n\t      if (callback) {\n\t        callback(e);\n\t      }\n\t      self.markParsingComplete(elt);\n\t      self.parseNext();\n\t    };\n\t    elt.addEventListener('load', done);\n\t    elt.addEventListener('error', done);\n\t\n\t    // NOTE: IE does not fire \"load\" event for styles that have already loaded\n\t    // This is in violation of the spec, so we try our hardest to work around it\n\t    if (isIE && elt.localName === 'style') {\n\t      var fakeLoad = false;\n\t      // If there's not @import in the textContent, assume it has loaded\n\t      if (elt.textContent.indexOf('@import') == -1) {\n\t        fakeLoad = true;\n\t      // if we have a sheet, we have been parsed\n\t      } else if (elt.sheet) {\n\t        fakeLoad = true;\n\t        var csr = elt.sheet.cssRules;\n\t        var len = csr ? csr.length : 0;\n\t        // search the rules for @import's\n\t        for (var i = 0, r; (i < len) && (r = csr[i]); i++) {\n\t          if (r.type === CSSRule.IMPORT_RULE) {\n\t            // if every @import has resolved, fake the load\n\t            fakeLoad = fakeLoad && Boolean(r.styleSheet);\n\t          }\n\t        }\n\t      }\n\t      // dispatch a fake load event and continue parsing\n\t      if (fakeLoad) {\n\t        // Fire async, to prevent reentrancy\n\t        setTimeout(function() {\n\t          elt.dispatchEvent(new CustomEvent('load', {bubbles: false}));\n\t        });\n\t      }\n\t    }\n\t  },\n\t\n\t  // NOTE: execute scripts by injecting them and watching for the load/error\n\t  // event. Inline scripts are handled via dataURL's because browsers tend to\n\t  // provide correct parsing errors in this case. If this has any compatibility\n\t  // issues, we can switch to injecting the inline script with textContent.\n\t  parseScript: function(scriptElt) {\n\t    var script = document.createElement('script');\n\t    script.__importElement = scriptElt;\n\t    script.src = scriptElt.src ? scriptElt.src :\n\t        generateScriptDataUrl(scriptElt);\n\t    // keep track of executing script to help polyfill `document.currentScript`\n\t    scope.currentScript = scriptElt;\n\t    this.trackElement(script, function(e) {\n\t      if (script.parentNode) {\n\t        script.parentNode.removeChild(script);\n\t      }\n\t      scope.currentScript = null;\n\t    });\n\t    this.addElementToDocument(script);\n\t  },\n\t\n\t  // determine the next element in the tree which should be parsed\n\t  // crawl the document tree to find the next unparsed element\n\t  // then process any dynamically added elements (these should process in 'add'\n\t  // order.\n\t  nextToParse: function() {\n\t    this._mayParse = [];\n\t    return !this.parsingElement && (this.nextToParseInDoc(rootDocument) ||\n\t        this.nextToParseDynamic());\n\t  },\n\t\n\t  nextToParseInDoc: function(doc, link) {\n\t    // use `marParse` list to avoid looping into the same document again\n\t    // since it could cause an iloop.\n\t    if (doc && this._mayParse.indexOf(doc) < 0) {\n\t      this._mayParse.push(doc);\n\t      var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));\n\t      for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n\t        if (!this.isParsed(n)) {\n\t          if (this.hasResource(n)) {\n\t            return nodeIsImport(n) ? this.nextToParseInDoc(n.__doc, n) : n;\n\t          } else {\n\t            return;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // all nodes have been parsed, ready to parse import, if any\n\t    return link;\n\t  },\n\t\n\t  // note dynamically added elements are stored in a separate queue\n\t  nextToParseDynamic: function() {\n\t    return this.dynamicElements[0];\n\t  },\n\t\n\t  // return the set of parse selectors relevant for this node.\n\t  parseSelectorsForNode: function(node) {\n\t    var doc = node.ownerDocument || node;\n\t    return doc === rootDocument ? this.documentSelectors :\n\t        this.importsSelectors;\n\t  },\n\t\n\t  isParsed: function(node) {\n\t    return node.__importParsed;\n\t  },\n\t\n\t  needsDynamicParsing: function(elt) {\n\t    return (this.dynamicElements.indexOf(elt) >= 0);\n\t  },\n\t\n\t  hasResource: function(node) {\n\t    if (nodeIsImport(node) && (node.__doc === undefined)) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t};\n\t\n\tfunction nodeIsImport(elt) {\n\t  return (elt.localName === 'link') && (elt.rel === IMPORT_LINK_TYPE);\n\t}\n\t\n\tfunction generateScriptDataUrl(script) {\n\t  var scriptContent = generateScriptContent(script);\n\t  return 'data:text/javascript;charset=utf-8,' + encodeURIComponent(scriptContent);\n\t}\n\t\n\tfunction generateScriptContent(script) {\n\t  return script.textContent + generateSourceMapHint(script);\n\t}\n\t\n\t// calculate source map hint\n\tfunction generateSourceMapHint(script) {\n\t  var owner = script.ownerDocument;\n\t  owner.__importedScripts = owner.__importedScripts || 0;\n\t  var moniker = script.ownerDocument.baseURI;\n\t  var num = owner.__importedScripts ? '-' + owner.__importedScripts : '';\n\t  owner.__importedScripts++;\n\t  return '\\n//# sourceURL=' + moniker + num + '.js\\n';\n\t}\n\t\n\t// style/stylesheet handling\n\t\n\t// clone style with proper path resolution for main document\n\t// NOTE: styles are the only elements that require direct path fixup.\n\tfunction cloneStyle(style) {\n\t  var clone = style.ownerDocument.createElement('style');\n\t  clone.textContent = style.textContent;\n\t  path.resolveUrlsInStyle(clone);\n\t  return clone;\n\t}\n\t\n\t// exports\n\tscope.parser = importParser;\n\tscope.IMPORT_SELECTOR = IMPORT_SELECTOR;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 161:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t// imports\n\tvar flags = scope.flags;\n\tvar IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\n\tvar IMPORT_SELECTOR = scope.IMPORT_SELECTOR;\n\tvar rootDocument = scope.rootDocument;\n\tvar Loader = scope.Loader;\n\tvar Observer = scope.Observer;\n\tvar parser = scope.parser;\n\t\n\t// importer\n\t// highlander object to manage loading of imports\n\t// for any document, importer:\n\t// - loads any linked import documents (with deduping)\n\t// - whenever an import is loaded, prompts the parser to try to parse\n\t// - observes imported documents for new elements (these are handled via the\n\t// dynamic importer)\n\tvar importer = {\n\t\n\t  documents: {},\n\t\n\t  // nodes to load in the mian document\n\t  documentPreloadSelectors: IMPORT_SELECTOR,\n\t\n\t  // nodes to load in imports\n\t  importsPreloadSelectors: [\n\t    IMPORT_SELECTOR\n\t  ].join(','),\n\t\n\t  loadNode: function(node) {\n\t    importLoader.addNode(node);\n\t  },\n\t\n\t  // load all loadable elements within the parent element\n\t  loadSubtree: function(parent) {\n\t    var nodes = this.marshalNodes(parent);\n\t    // add these nodes to loader's queue\n\t    importLoader.addNodes(nodes);\n\t  },\n\t\n\t  marshalNodes: function(parent) {\n\t    // all preloadable nodes in inDocument\n\t    return parent.querySelectorAll(this.loadSelectorsForNode(parent));\n\t  },\n\t\n\t  // find the proper set of load selectors for a given node\n\t  loadSelectorsForNode: function(node) {\n\t    var doc = node.ownerDocument || node;\n\t    return doc === rootDocument ? this.documentPreloadSelectors :\n\t        this.importsPreloadSelectors;\n\t  },\n\t\n\t  loaded: function(url, elt, resource, err, redirectedUrl) {\n\t    flags.load && console.log('loaded', url, elt);\n\t    // store generic resource\n\t    // TODO(sorvell): fails for nodes inside <template>.content\n\t    // see https://code.google.com/p/chromium/issues/detail?id=249381.\n\t    elt.__resource = resource;\n\t    elt.__error = err;\n\t    if (isImportLink(elt)) {\n\t      var doc = this.documents[url];\n\t      // if we've never seen a document at this url\n\t      if (doc === undefined) {\n\t        // generate an HTMLDocument from data\n\t        doc = err ? null : makeDocument(resource, redirectedUrl || url);\n\t        if (doc) {\n\t          doc.__importLink = elt;\n\t          // note, we cannot use MO to detect parsed nodes because\n\t          // SD polyfill does not report these as mutations.\n\t          this.bootDocument(doc);\n\t        }\n\t        // cache document\n\t        this.documents[url] = doc;\n\t      }\n\t      // don't store import record until we're actually loaded\n\t      // store document resource\n\t      elt.__doc = doc;\n\t    }\n\t    parser.parseNext();\n\t  },\n\t\n\t  bootDocument: function(doc) {\n\t    this.loadSubtree(doc);\n\t    // observe documents for new elements being added\n\t    this.observer.observe(doc);\n\t    parser.parseNext();\n\t  },\n\t\n\t  loadedAll: function() {\n\t    parser.parseNext();\n\t  }\n\t\n\t};\n\t\n\t// loader singleton to handle loading imports\n\tvar importLoader = new Loader(importer.loaded.bind(importer),\n\t    importer.loadedAll.bind(importer));\n\t\n\t// observer singleton to handle observing elements in imports\n\t// NOTE: the observer has a node added callback and this is set\n\t// by the dynamic importer module.\n\timporter.observer = new Observer();\n\t\n\tfunction isImportLink(elt) {\n\t  return isLinkRel(elt, IMPORT_LINK_TYPE);\n\t}\n\t\n\tfunction isLinkRel(elt, rel) {\n\t  return elt.localName === 'link' && elt.getAttribute('rel') === rel;\n\t}\n\t\n\tfunction hasBaseURIAccessor(doc) {\n\t  return !! Object.getOwnPropertyDescriptor(doc, 'baseURI');\n\t}\n\t\n\tfunction makeDocument(resource, url) {\n\t  // create a new HTML document\n\t  var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\n\t  // cache the new document's source url\n\t  doc._URL = url;\n\t  // establish a relative path via <base>\n\t  var base = doc.createElement('base');\n\t  base.setAttribute('href', url);\n\t  // add baseURI support to browsers (IE) that lack it.\n\t  if (!doc.baseURI && !hasBaseURIAccessor(doc)) {\n\t    // Use defineProperty since Safari throws an exception when using assignment.\n\t    Object.defineProperty(doc, 'baseURI', {value:url});\n\t  }\n\t  // ensure UTF-8 charset\n\t  var meta = doc.createElement('meta');\n\t  meta.setAttribute('charset', 'utf-8');\n\t\n\t  doc.head.appendChild(meta);\n\t  doc.head.appendChild(base);\n\t  // install html\n\t  doc.body.innerHTML = resource;\n\t  // TODO(sorvell): ideally this code is not aware of Template polyfill,\n\t  // but for now the polyfill needs help to bootstrap these templates\n\t  if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n\t    HTMLTemplateElement.bootstrap(doc);\n\t  }\n\t  return doc;\n\t}\n\t\n\t// Polyfill document.baseURI for browsers without it.\n\tif (!document.baseURI) {\n\t  var baseURIDescriptor = {\n\t    get: function() {\n\t      var base = document.querySelector('base');\n\t      return base ? base.href : window.location.href;\n\t    },\n\t    configurable: true\n\t  };\n\t\n\t  Object.defineProperty(document, 'baseURI', baseURIDescriptor);\n\t  Object.defineProperty(rootDocument, 'baseURI', baseURIDescriptor);\n\t}\n\t\n\t// exports\n\tscope.importer = importer;\n\tscope.importLoader = importLoader;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 162:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\twindow.HTMLImports.addModule(function(scope) {\n\t\n\t// imports\n\tvar parser = scope.parser;\n\tvar importer = scope.importer;\n\t\n\t// dynamic\n\t// highlander object to manage elements dynamically added to imports\n\t// for any observed document, dynamic:\n\t// - tells the importer to load any imports that are added.\n\t// - tells the parser to parse any added elements that need to be parsed.\n\t// dynamic importer)\n\tvar dynamic = {\n\t  // process (load/parse) any nodes added to imported documents.\n\t  added: function(nodes) {\n\t    var owner, parsed, loading;\n\t    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n\t      if (!owner) {\n\t        owner = n.ownerDocument;\n\t        parsed = parser.isParsed(owner);\n\t      }\n\t      // note: the act of loading kicks the parser, so we use parseDynamic's\n\t      // 2nd argument to control if this added node needs to kick the parser.\n\t      loading = this.shouldLoadNode(n);\n\t      if (loading) {\n\t        importer.loadNode(n);\n\t      }\n\t      if (this.shouldParseNode(n) && parsed) {\n\t        parser.parseDynamic(n, loading);\n\t      }\n\t    }\n\t  },\n\t\n\t  shouldLoadNode: function(node) {\n\t    return (node.nodeType === 1) && matches.call(node,\n\t        importer.loadSelectorsForNode(node));\n\t  },\n\t\n\t  shouldParseNode: function(node) {\n\t    return (node.nodeType === 1) && matches.call(node,\n\t        parser.parseSelectorsForNode(node));\n\t  }\n\t\n\t};\n\t\n\t// let the dynamic element helper tie into the import observer.\n\timporter.observer.addCallback = dynamic.added.bind(dynamic);\n\t\n\t// x-plat matches\n\tvar matches = HTMLElement.prototype.matches ||\n\t    HTMLElement.prototype.matchesSelector ||\n\t    HTMLElement.prototype.webkitMatchesSelector ||\n\t    HTMLElement.prototype.mozMatchesSelector ||\n\t    HTMLElement.prototype.msMatchesSelector;\n\t\n\t});\n\n\n/***/ },\n\n/***/ 163:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license\n\t * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n\t * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n\t * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n\t * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n\t * Code distributed by Google as part of the polymer project is also\n\t * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\t */\n\t(function(scope){\n\t\n\t// imports\n\tvar initializeModules = scope.initializeModules;\n\tvar isIE = scope.isIE;\n\t\n\t/*\n\tNOTE: Even when native HTMLImports exists, the following api is available by\n\tloading the polyfill. This provides api compatibility where the polyfill\n\tcannot be \"correct\":\n\t\n\t  * `document._currentScript`\n\t  * `HTMLImportsLoaded` event\n\t  * `HTMLImports.whenReady(callback)\n\t*/\n\tif (scope.useNative) {\n\t  return;\n\t}\n\t\n\t// Initialize polyfill modules. Note, polyfill modules are loaded but not\n\t// executed; this is a convenient way to control which modules run when\n\t// the polyfill is required and allows the polyfill to load even when it's\n\t// not needed.\n\tinitializeModules();\n\t\n\t// imports\n\tvar rootDocument = scope.rootDocument;\n\t\n\t/*\n\t  Bootstrap the imports machine.\n\t*/\n\tfunction bootstrap() {\n\t  window.HTMLImports.importer.bootDocument(rootDocument);\n\t}\n\t\n\t// TODO(sorvell): SD polyfill does *not* generate mutations for nodes added\n\t// by the parser. For this reason, we must wait until the dom exists to\n\t// bootstrap.\n\tif (document.readyState === 'complete' ||\n\t    (document.readyState === 'interactive' && !window.attachEvent)) {\n\t  bootstrap();\n\t} else {\n\t  document.addEventListener('DOMContentLoaded', bootstrap);\n\t}\n\t\n\t})(window.HTMLImports);\n\n\n/***/ },\n\n/***/ 164:\n/***/ function(module, exports) {\n\n\tvar HANDJS = HANDJS || {};\r\n\t\r\n\t(function () {\r\n\t    // If the user agent already supports Pointer Events, do nothing\r\n\t    if (window.PointerEvent)\r\n\t        return;\r\n\t\r\n\t    // Polyfilling indexOf for old browsers\r\n\t    if (!Array.prototype.indexOf) {\r\n\t        Array.prototype.indexOf = function (searchElement) {\r\n\t            var t = Object(this);\r\n\t            var len = t.length >>> 0;\r\n\t            if (len === 0) {\r\n\t                return -1;\r\n\t            }\r\n\t            var n = 0;\r\n\t            if (arguments.length > 0) {\r\n\t                n = Number(arguments[1]);\r\n\t                if (n !== n) { // shortcut for verifying if it's NaN\r\n\t                    n = 0;\r\n\t                } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\r\n\t                    n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t                }\r\n\t            }\r\n\t            if (n >= len) {\r\n\t                return -1;\r\n\t            }\r\n\t            var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t            for (; k < len; k++) {\r\n\t                if (k in t && t[k] === searchElement) {\r\n\t                    return k;\r\n\t                }\r\n\t            }\r\n\t            return -1;\r\n\t        };\r\n\t    }\r\n\t    //Polyfilling forEach for old browsers\r\n\t    if (!Array.prototype.forEach) {\r\n\t        Array.prototype.forEach = function (method, thisArg) {\r\n\t            if (!this || !(method instanceof Function))\r\n\t                throw new TypeError();\r\n\t            for (var i = 0; i < this.length; i++)\r\n\t                method.call(thisArg, this[i], i, this);\r\n\t        };\r\n\t    }\r\n\t\t// Polyfilling trim for old browsers\r\n\t\tif (!String.prototype.trim) {\r\n\t\t\tString.prototype.trim = function () {\r\n\t\t\t\treturn this.replace(/^\\s+|\\s+$/, '');\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t    // Installing Hand.js\r\n\t    var supportedEventsNames = [\"pointerdown\", \"pointerup\", \"pointermove\", \"pointerover\", \"pointerout\", \"pointercancel\", \"pointerenter\", \"pointerleave\"];\r\n\t    var upperCaseEventsNames = [\"PointerDown\", \"PointerUp\", \"PointerMove\", \"PointerOver\", \"PointerOut\", \"PointerCancel\", \"PointerEnter\", \"PointerLeave\"];\r\n\t\r\n\t    var POINTER_TYPE_TOUCH = \"touch\";\r\n\t    var POINTER_TYPE_PEN = \"pen\";\r\n\t    var POINTER_TYPE_MOUSE = \"mouse\";\r\n\t\r\n\t    var previousTargets = {};\r\n\t\r\n\t    var checkPreventDefault = function (node) {\r\n\t        while (node && !node.handjs_forcePreventDefault) {\r\n\t            node = node.parentNode;\r\n\t        }\r\n\t        return !!node || window.handjs_forcePreventDefault;\r\n\t    };\r\n\t\r\n\t    // Touch events\r\n\t    var generateTouchClonedEvent = function (sourceEvent, newName, canBubble, target, relatedTarget) {\r\n\t        // Considering touch events are almost like super mouse events\r\n\t        var evObj;\r\n\t        \r\n\t        if (document.createEvent) {\r\n\t            evObj = document.createEvent('MouseEvents');\r\n\t            evObj.initMouseEvent(newName, canBubble, true, window, 1, sourceEvent.screenX, sourceEvent.screenY,\r\n\t                sourceEvent.clientX, sourceEvent.clientY, sourceEvent.ctrlKey, sourceEvent.altKey,\r\n\t                sourceEvent.shiftKey, sourceEvent.metaKey, sourceEvent.button, relatedTarget || sourceEvent.relatedTarget);\r\n\t        }\r\n\t        else {\r\n\t            evObj = document.createEventObject();\r\n\t            evObj.screenX = sourceEvent.screenX;\r\n\t            evObj.screenY = sourceEvent.screenY;\r\n\t            evObj.clientX = sourceEvent.clientX;\r\n\t            evObj.clientY = sourceEvent.clientY;\r\n\t            evObj.ctrlKey = sourceEvent.ctrlKey;\r\n\t            evObj.altKey = sourceEvent.altKey;\r\n\t            evObj.shiftKey = sourceEvent.shiftKey;\r\n\t            evObj.metaKey = sourceEvent.metaKey;\r\n\t            evObj.button = sourceEvent.button;\r\n\t            evObj.relatedTarget = relatedTarget || sourceEvent.relatedTarget;\r\n\t        }\r\n\t        // offsets\r\n\t        if (evObj.offsetX === undefined) {\r\n\t            if (sourceEvent.offsetX !== undefined) {\r\n\t\r\n\t                // For Opera which creates readonly properties\r\n\t                if (Object && Object.defineProperty !== undefined) {\r\n\t                    Object.defineProperty(evObj, \"offsetX\", {\r\n\t                        writable: true\r\n\t                    });\r\n\t                    Object.defineProperty(evObj, \"offsetY\", {\r\n\t                        writable: true\r\n\t                    });\r\n\t                }\r\n\t\r\n\t                evObj.offsetX = sourceEvent.offsetX;\r\n\t                evObj.offsetY = sourceEvent.offsetY;\r\n\t            } else if (Object && Object.defineProperty !== undefined) {\r\n\t                Object.defineProperty(evObj, \"offsetX\", {\r\n\t                    get: function () {\r\n\t                        if (this.currentTarget && this.currentTarget.offsetLeft) {\r\n\t                            return sourceEvent.clientX - this.currentTarget.offsetLeft;\r\n\t                        }\r\n\t                        return sourceEvent.clientX;\r\n\t                    }\r\n\t                });\r\n\t                Object.defineProperty(evObj, \"offsetY\", {\r\n\t                    get: function () {\r\n\t                        if (this.currentTarget && this.currentTarget.offsetTop) {\r\n\t                            return sourceEvent.clientY - this.currentTarget.offsetTop;\r\n\t                        }\r\n\t                        return sourceEvent.clientY;\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t            else if (sourceEvent.layerX !== undefined) {\r\n\t                evObj.offsetX = sourceEvent.layerX - sourceEvent.currentTarget.offsetLeft;\r\n\t                evObj.offsetY = sourceEvent.layerY - sourceEvent.currentTarget.offsetTop;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        // adding missing properties\r\n\t\r\n\t        if (sourceEvent.isPrimary !== undefined)\r\n\t            evObj.isPrimary = sourceEvent.isPrimary;\r\n\t        else\r\n\t            evObj.isPrimary = true;\r\n\t\r\n\t        if (sourceEvent.pressure)\r\n\t            evObj.pressure = sourceEvent.pressure;\r\n\t        else {\r\n\t            var button = 0;\r\n\t\r\n\t            if (sourceEvent.which !== undefined)\r\n\t                button = sourceEvent.which;\r\n\t            else if (sourceEvent.button !== undefined) {\r\n\t                button = sourceEvent.button;\r\n\t            }\r\n\t            evObj.pressure = (button === 0) ? 0 : 0.5;\r\n\t        }\r\n\t\r\n\t\r\n\t        if (sourceEvent.rotation)\r\n\t            evObj.rotation = sourceEvent.rotation;\r\n\t        else\r\n\t            evObj.rotation = 0;\r\n\t\r\n\t        // Timestamp\r\n\t        if (sourceEvent.hwTimestamp)\r\n\t            evObj.hwTimestamp = sourceEvent.hwTimestamp;\r\n\t        else\r\n\t            evObj.hwTimestamp = 0;\r\n\t\r\n\t        // Tilts\r\n\t        if (sourceEvent.tiltX)\r\n\t            evObj.tiltX = sourceEvent.tiltX;\r\n\t        else\r\n\t            evObj.tiltX = 0;\r\n\t\r\n\t        if (sourceEvent.tiltY)\r\n\t            evObj.tiltY = sourceEvent.tiltY;\r\n\t        else\r\n\t            evObj.tiltY = 0;\r\n\t\r\n\t        // Width and Height\r\n\t        if (sourceEvent.height)\r\n\t            evObj.height = sourceEvent.height;\r\n\t        else\r\n\t            evObj.height = 0;\r\n\t\r\n\t        if (sourceEvent.width)\r\n\t            evObj.width = sourceEvent.width;\r\n\t        else\r\n\t            evObj.width = 0;\r\n\t\r\n\t        // preventDefault\r\n\t        evObj.preventDefault = function () {\r\n\t            if (sourceEvent.preventDefault !== undefined)\r\n\t                sourceEvent.preventDefault();\r\n\t        };\r\n\t\r\n\t        // stopPropagation\r\n\t        if (evObj.stopPropagation !== undefined) {\r\n\t            var current = evObj.stopPropagation;\r\n\t            evObj.stopPropagation = function () {\r\n\t                if (sourceEvent.stopPropagation !== undefined)\r\n\t                    sourceEvent.stopPropagation();\r\n\t                current.call(this);\r\n\t            };\r\n\t        }\r\n\t\r\n\t        // Pointer values\r\n\t        evObj.pointerId = sourceEvent.pointerId;\r\n\t        evObj.pointerType = sourceEvent.pointerType;\r\n\t\r\n\t        switch (evObj.pointerType) {// Old spec version check\r\n\t            case 2:\r\n\t                evObj.pointerType = POINTER_TYPE_TOUCH;\r\n\t                break;\r\n\t            case 3:\r\n\t                evObj.pointerType = POINTER_TYPE_PEN;\r\n\t                break;\r\n\t            case 4:\r\n\t                evObj.pointerType = POINTER_TYPE_MOUSE;\r\n\t                break;\r\n\t        }\r\n\t\r\n\t        // Fire event\r\n\t        if (target)\r\n\t            target.dispatchEvent(evObj);\r\n\t        else if (sourceEvent.target) {\r\n\t            sourceEvent.target.dispatchEvent(evObj);\r\n\t        } else {\r\n\t            sourceEvent.srcElement.fireEvent(\"on\" + getMouseEquivalentEventName(newName), evObj); // We must fallback to mouse event for very old browsers\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var generateMouseProxy = function (evt, eventName, canBubble, target, relatedTarget) {\r\n\t        evt.pointerId = 1;\r\n\t        evt.pointerType = POINTER_TYPE_MOUSE;\r\n\t        generateTouchClonedEvent(evt, eventName, canBubble, target, relatedTarget);\r\n\t    };\r\n\t\r\n\t    var generateTouchEventProxy = function (name, touchPoint, target, eventObject, canBubble, relatedTarget) {\r\n\t        var touchPointId = touchPoint.identifier + 2; // Just to not override mouse id\r\n\t\r\n\t        touchPoint.pointerId = touchPointId;\r\n\t        touchPoint.pointerType = POINTER_TYPE_TOUCH;\r\n\t        touchPoint.currentTarget = target;\r\n\t\r\n\t        if (eventObject.preventDefault !== undefined) {\r\n\t            touchPoint.preventDefault = function () {\r\n\t                eventObject.preventDefault();\r\n\t            };\r\n\t        }\r\n\t\r\n\t        generateTouchClonedEvent(touchPoint, name, canBubble, target, relatedTarget);\r\n\t    };\r\n\t\r\n\t    var checkEventRegistration = function (node, eventName) {\r\n\t        return node.__handjsGlobalRegisteredEvents && node.__handjsGlobalRegisteredEvents[eventName];\r\n\t    };\r\n\t    var findEventRegisteredNode = function (node, eventName) {\r\n\t        while (node && !checkEventRegistration(node, eventName))\r\n\t            node = node.parentNode;\r\n\t        if (node)\r\n\t            return node;\r\n\t        else if (checkEventRegistration(window, eventName))\r\n\t            return window;\r\n\t    };\r\n\t\r\n\t    var generateTouchEventProxyIfRegistered = function (eventName, touchPoint, target, eventObject, canBubble, relatedTarget) { // Check if user registered this event\r\n\t        if (findEventRegisteredNode(target, eventName)) {\r\n\t            generateTouchEventProxy(eventName, touchPoint, target, eventObject, canBubble, relatedTarget);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //var handleOtherEvent = function (eventObject, name, useLocalTarget, checkRegistration) {\r\n\t    //    if (eventObject.preventManipulation)\r\n\t    //        eventObject.preventManipulation();\r\n\t\r\n\t    //    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n\t    //        var touchPoint = eventObject.changedTouches[i];\r\n\t\r\n\t    //        if (useLocalTarget) {\r\n\t    //            previousTargets[touchPoint.identifier] = touchPoint.target;\r\n\t    //        }\r\n\t\r\n\t    //        if (checkRegistration) {\r\n\t    //            generateTouchEventProxyIfRegistered(name, touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n\t    //        } else {\r\n\t    //            generateTouchEventProxy(name, touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n\t    //        }\r\n\t    //    }\r\n\t    //};\r\n\t\r\n\t    var getMouseEquivalentEventName = function (eventName) {\r\n\t        return eventName.toLowerCase().replace(\"pointer\", \"mouse\");\r\n\t    };\r\n\t\r\n\t    var getPrefixEventName = function (prefix, eventName) {\r\n\t        var upperCaseIndex = supportedEventsNames.indexOf(eventName);\r\n\t        var newEventName = prefix + upperCaseEventsNames[upperCaseIndex];\r\n\t\r\n\t        return newEventName;\r\n\t    };\r\n\t\r\n\t    var registerOrUnregisterEvent = function (item, name, func, enable) {\r\n\t        if (item.__handjsRegisteredEvents === undefined) {\r\n\t            item.__handjsRegisteredEvents = [];\r\n\t        }\r\n\t\r\n\t        if (enable) {\r\n\t            if (item.__handjsRegisteredEvents[name] !== undefined) {\r\n\t                item.__handjsRegisteredEvents[name]++;\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            item.__handjsRegisteredEvents[name] = 1;\r\n\t            item.addEventListener(name, func, false);\r\n\t        } else {\r\n\t\r\n\t            if (item.__handjsRegisteredEvents.indexOf(name) !== -1) {\r\n\t                item.__handjsRegisteredEvents[name]--;\r\n\t\r\n\t                if (item.__handjsRegisteredEvents[name] !== 0) {\r\n\t                    return;\r\n\t                }\r\n\t            }\r\n\t            item.removeEventListener(name, func);\r\n\t            item.__handjsRegisteredEvents[name] = 0;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var setTouchAware = function (item, eventName, enable) {\r\n\t        // Leaving tokens\r\n\t        if (!item.__handjsGlobalRegisteredEvents) {\r\n\t            item.__handjsGlobalRegisteredEvents = [];\r\n\t        }\r\n\t        if (enable) {\r\n\t            if (item.__handjsGlobalRegisteredEvents[eventName] !== undefined) {\r\n\t                item.__handjsGlobalRegisteredEvents[eventName]++;\r\n\t                return;\r\n\t            }\r\n\t            item.__handjsGlobalRegisteredEvents[eventName] = 1;\r\n\t        } else {\r\n\t            if (item.__handjsGlobalRegisteredEvents[eventName] !== undefined) {\r\n\t                item.__handjsGlobalRegisteredEvents[eventName]--;\r\n\t                if (item.__handjsGlobalRegisteredEvents[eventName] < 0) {\r\n\t                    item.__handjsGlobalRegisteredEvents[eventName] = 0;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var nameGenerator;\r\n\t        var eventGenerator;\r\n\t        if (window.MSPointerEvent) {\r\n\t            nameGenerator = function (name) { return getPrefixEventName(\"MS\", name); };\r\n\t            eventGenerator = generateTouchClonedEvent;\r\n\t        }\r\n\t        else {\r\n\t            nameGenerator = getMouseEquivalentEventName;\r\n\t            eventGenerator = generateMouseProxy;\r\n\t        }\r\n\t        switch (eventName) {\r\n\t            case \"pointerenter\":\r\n\t            case \"pointerleave\":\r\n\t                var targetEvent = nameGenerator(eventName);\r\n\t                if (item['on' + targetEvent.toLowerCase()] !== undefined) {\r\n\t                    registerOrUnregisterEvent(item, targetEvent, function (evt) { eventGenerator(evt, eventName); }, enable);\r\n\t                }\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Intercept addEventListener calls by changing the prototype\r\n\t    var interceptAddEventListener = function (root) {\r\n\t        var current = root.prototype ? root.prototype.addEventListener : root.addEventListener;\r\n\t\r\n\t        var customAddEventListener = function (name, func, capture) {\r\n\t            // Branch when a PointerXXX is used\r\n\t            if (supportedEventsNames.indexOf(name) !== -1) {\r\n\t                setTouchAware(this, name, true);\r\n\t            }\r\n\t\r\n\t            if (current === undefined) {\r\n\t                this.attachEvent(\"on\" + getMouseEquivalentEventName(name), func);\r\n\t            } else {\r\n\t                current.call(this, name, func, capture);\r\n\t            }\r\n\t        };\r\n\t\r\n\t        if (root.prototype) {\r\n\t            root.prototype.addEventListener = customAddEventListener;\r\n\t        } else {\r\n\t            root.addEventListener = customAddEventListener;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Intercept removeEventListener calls by changing the prototype\r\n\t    var interceptRemoveEventListener = function (root) {\r\n\t        var current = root.prototype ? root.prototype.removeEventListener : root.removeEventListener;\r\n\t\r\n\t        var customRemoveEventListener = function (name, func, capture) {\r\n\t            // Release when a PointerXXX is used\r\n\t            if (supportedEventsNames.indexOf(name) !== -1) {\r\n\t                setTouchAware(this, name, false);\r\n\t            }\r\n\t\r\n\t            if (current === undefined) {\r\n\t                this.detachEvent(getMouseEquivalentEventName(name), func);\r\n\t            } else {\r\n\t                current.call(this, name, func, capture);\r\n\t            }\r\n\t        };\r\n\t        if (root.prototype) {\r\n\t            root.prototype.removeEventListener = customRemoveEventListener;\r\n\t        } else {\r\n\t            root.removeEventListener = customRemoveEventListener;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Hooks\r\n\t    interceptAddEventListener(window);\r\n\t    interceptAddEventListener(window.HTMLElement || window.Element);\r\n\t    interceptAddEventListener(document);\r\n\t    if (!navigator.isCocoonJS){\r\n\t        interceptAddEventListener(HTMLBodyElement);\r\n\t        interceptAddEventListener(HTMLDivElement);\r\n\t        interceptAddEventListener(HTMLImageElement);\r\n\t        interceptAddEventListener(HTMLUListElement);\r\n\t        interceptAddEventListener(HTMLAnchorElement);\r\n\t        interceptAddEventListener(HTMLLIElement);\r\n\t        interceptAddEventListener(HTMLTableElement);\r\n\t        if (window.HTMLSpanElement) {\r\n\t            interceptAddEventListener(HTMLSpanElement);\r\n\t        }\r\n\t    }\r\n\t    if (window.HTMLCanvasElement) {\r\n\t        interceptAddEventListener(HTMLCanvasElement);\r\n\t    }\r\n\t    if (!navigator.isCocoonJS && window.SVGElement) {\r\n\t        interceptAddEventListener(SVGElement);\r\n\t    }\r\n\t\r\n\t    interceptRemoveEventListener(window);\r\n\t    interceptRemoveEventListener(window.HTMLElement || window.Element);\r\n\t    interceptRemoveEventListener(document);\r\n\t    if (!navigator.isCocoonJS){\r\n\t        interceptRemoveEventListener(HTMLBodyElement);\r\n\t        interceptRemoveEventListener(HTMLDivElement);\r\n\t        interceptRemoveEventListener(HTMLImageElement);\r\n\t        interceptRemoveEventListener(HTMLUListElement);\r\n\t        interceptRemoveEventListener(HTMLAnchorElement);\r\n\t        interceptRemoveEventListener(HTMLLIElement);\r\n\t        interceptRemoveEventListener(HTMLTableElement);\r\n\t        if (window.HTMLSpanElement) {\r\n\t            interceptRemoveEventListener(HTMLSpanElement);\r\n\t        }\r\n\t    }\r\n\t    if (window.HTMLCanvasElement) {\r\n\t        interceptRemoveEventListener(HTMLCanvasElement);\r\n\t    }\r\n\t    if (!navigator.isCocoonJS && window.SVGElement) {\r\n\t        interceptRemoveEventListener(SVGElement);\r\n\t    }\r\n\t\r\n\t    // Prevent mouse event from being dispatched after Touch Events action\r\n\t    var touching = false;\r\n\t    var touchTimer = -1;\r\n\t\r\n\t    function setTouchTimer() {\r\n\t        touching = true;\r\n\t        clearTimeout(touchTimer);\r\n\t        touchTimer = setTimeout(function () {\r\n\t            touching = false;\r\n\t        }, 700);\r\n\t        // 1. Mobile browsers dispatch mouse events 300ms after touchend\r\n\t        // 2. Chrome for Android dispatch mousedown for long-touch about 650ms\r\n\t        // Result: Blocking Mouse Events for 700ms.\r\n\t    }\r\n\t\r\n\t    function getFirstCommonNode(x, y) {\r\n\t        while (x) {\r\n\t            if (x.contains(y))\r\n\t                return x;\r\n\t            x = x.parentNode;\r\n\t        }\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t    //generateProxy receives a node to dispatch the event\r\n\t    function dispatchPointerEnter(currentTarget, relatedTarget, generateProxy) {\r\n\t        var commonParent = getFirstCommonNode(currentTarget, relatedTarget);\r\n\t        var node = currentTarget;\r\n\t        var nodelist = [];\r\n\t        while (node && node !== commonParent) {//target range: this to the direct child of parent relatedTarget\r\n\t            if (checkEventRegistration(node, \"pointerenter\")) //check if any parent node has pointerenter\r\n\t                nodelist.push(node);\r\n\t            node = node.parentNode;\r\n\t        }\r\n\t        while (nodelist.length > 0)\r\n\t            generateProxy(nodelist.pop());\r\n\t    }\r\n\t\r\n\t    //generateProxy receives a node to dispatch the event\r\n\t    function dispatchPointerLeave(currentTarget, relatedTarget, generateProxy) {\r\n\t        var commonParent = getFirstCommonNode(currentTarget, relatedTarget);\r\n\t        var node = currentTarget;\r\n\t        while (node && node !== commonParent) {//target range: this to the direct child of parent relatedTarget\r\n\t            if (checkEventRegistration(node, \"pointerleave\"))//check if any parent node has pointerleave\r\n\t                generateProxy(node);\r\n\t            node = node.parentNode;\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    // Handling events on window to prevent unwanted super-bubbling\r\n\t    // All mouse events are affected by touch fallback\r\n\t    function applySimpleEventTunnels(nameGenerator, eventGenerator) {\r\n\t        [\"pointerdown\", \"pointermove\", \"pointerup\", \"pointerover\", \"pointerout\"].forEach(function (eventName) {\r\n\t            window.addEventListener(nameGenerator(eventName), function (evt) {\r\n\t                if (!touching && findEventRegisteredNode(evt.target, eventName))\r\n\t                    eventGenerator(evt, eventName, true);\r\n\t            });\r\n\t        });\r\n\t        if (window['on' + nameGenerator(\"pointerenter\").toLowerCase()] === undefined)\r\n\t            window.addEventListener(nameGenerator(\"pointerover\"), function (evt) {\r\n\t                if (touching)\r\n\t                    return;\r\n\t                var foundNode = findEventRegisteredNode(evt.target, \"pointerenter\");\r\n\t                if (!foundNode || foundNode === window)\r\n\t                    return;\r\n\t                else if (!foundNode.contains(evt.relatedTarget)) {\r\n\t                    dispatchPointerEnter(foundNode, evt.relatedTarget, function (targetNode) {\r\n\t                        eventGenerator(evt, \"pointerenter\", false, targetNode, evt.relatedTarget);\r\n\t                    });\r\n\t                }\r\n\t            });\r\n\t        if (window['on' + nameGenerator(\"pointerleave\").toLowerCase()] === undefined)\r\n\t            window.addEventListener(nameGenerator(\"pointerout\"), function (evt) {\r\n\t                if (touching)\r\n\t                    return;\r\n\t                var foundNode = findEventRegisteredNode(evt.target, \"pointerleave\");\r\n\t                if (!foundNode || foundNode === window)\r\n\t                    return;\r\n\t                else if (!foundNode.contains(evt.relatedTarget)) {\r\n\t                    dispatchPointerLeave(foundNode, evt.relatedTarget, function (targetNode) {\r\n\t                        eventGenerator(evt, \"pointerleave\", false, targetNode, evt.relatedTarget);\r\n\t                    });\r\n\t                }\r\n\t            });\r\n\t    }\r\n\t\r\n\t    (function () {\r\n\t        if (window.MSPointerEvent) {\r\n\t            //IE 10\r\n\t            applySimpleEventTunnels(\r\n\t                function (name) { return getPrefixEventName(\"MS\", name); },\r\n\t                generateTouchClonedEvent);\r\n\t        }\r\n\t        else {\r\n\t            applySimpleEventTunnels(getMouseEquivalentEventName, generateMouseProxy);\r\n\t\r\n\t            // Handling move on window to detect pointerleave/out/over\r\n\t            if (window.ontouchstart !== undefined) {\r\n\t                window.addEventListener('touchstart', function (eventObject) {\r\n\t                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n\t                        var touchPoint = eventObject.changedTouches[i];\r\n\t                        previousTargets[touchPoint.identifier] = touchPoint.target;\r\n\t\r\n\t                        generateTouchEventProxyIfRegistered(\"pointerover\", touchPoint, touchPoint.target, eventObject, true);\r\n\t\r\n\t                        //pointerenter should not be bubbled\r\n\t                        dispatchPointerEnter(touchPoint.target, null, function (targetNode) {\r\n\t                            generateTouchEventProxy(\"pointerenter\", touchPoint, targetNode, eventObject, false);\r\n\t                        });\r\n\t\r\n\t                        generateTouchEventProxyIfRegistered(\"pointerdown\", touchPoint, touchPoint.target, eventObject, true);\r\n\t                    }\r\n\t                    setTouchTimer();\r\n\t                });\r\n\t\r\n\t                window.addEventListener('touchend', function (eventObject) {\r\n\t                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n\t                        var touchPoint = eventObject.changedTouches[i];\r\n\t                        var currentTarget = previousTargets[touchPoint.identifier];\r\n\t\r\n\t                        generateTouchEventProxyIfRegistered(\"pointerup\", touchPoint, currentTarget, eventObject, true);\r\n\t                        generateTouchEventProxyIfRegistered(\"pointerout\", touchPoint, currentTarget, eventObject, true);\r\n\t\r\n\t                        //pointerleave should not be bubbled\r\n\t                        dispatchPointerLeave(currentTarget, null, function (targetNode) {\r\n\t                            generateTouchEventProxy(\"pointerleave\", touchPoint, targetNode, eventObject, false);\r\n\t                        });\r\n\t                    }\r\n\t                    setTouchTimer();\r\n\t                });\r\n\t\r\n\t                window.addEventListener('touchmove', function (eventObject) {\r\n\t                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n\t                        var touchPoint = eventObject.changedTouches[i];\r\n\t                        var newTarget = document.elementFromPoint(touchPoint.clientX, touchPoint.clientY);\r\n\t                        var currentTarget = previousTargets[touchPoint.identifier];\r\n\t\r\n\t                        // If force preventDefault\r\n\t                        if (currentTarget && checkPreventDefault(currentTarget) === true)\r\n\t                            eventObject.preventDefault();\r\n\t\r\n\t                        generateTouchEventProxyIfRegistered(\"pointermove\", touchPoint, currentTarget, eventObject, true);\r\n\t                        if (!navigator.isCocoonJS){\r\n\t                            var newTarget = document.elementFromPoint(touchPoint.clientX, touchPoint.clientY);\r\n\t                            if (currentTarget === newTarget) {\r\n\t                                continue; // We can skip this as the pointer is effectively over the current target\r\n\t                            }\r\n\t\r\n\t                            if (currentTarget) {\r\n\t                                // Raise out\r\n\t                                generateTouchEventProxyIfRegistered(\"pointerout\", touchPoint, currentTarget, eventObject, true, newTarget);\r\n\t\r\n\t                                // Raise leave\r\n\t                                if (!currentTarget.contains(newTarget)) { // Leave must be called if the new target is not a child of the current\r\n\t                                    dispatchPointerLeave(currentTarget, newTarget, function (targetNode) {\r\n\t                                        generateTouchEventProxy(\"pointerleave\", touchPoint, targetNode, eventObject, false, newTarget);\r\n\t                                    });\r\n\t                                }\r\n\t                            }\r\n\t\r\n\t                            if (newTarget) {\r\n\t                                // Raise over\r\n\t                                generateTouchEventProxyIfRegistered(\"pointerover\", touchPoint, newTarget, eventObject, true, currentTarget);\r\n\t\r\n\t                                // Raise enter\r\n\t                                if (!newTarget.contains(currentTarget)) { // Leave must be called if the new target is not the parent of the current\r\n\t                                    dispatchPointerEnter(newTarget, currentTarget, function (targetNode) {\r\n\t                                        generateTouchEventProxy(\"pointerenter\", touchPoint, targetNode, eventObject, false, currentTarget);\r\n\t                                    })\r\n\t                                }\r\n\t                            }\r\n\t                            previousTargets[touchPoint.identifier] = newTarget;\r\n\t                        }\r\n\t                    }\r\n\t                    setTouchTimer();\r\n\t                });\r\n\t\r\n\t                window.addEventListener('touchcancel', function (eventObject) {\r\n\t                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n\t                        var touchPoint = eventObject.changedTouches[i];\r\n\t\r\n\t                        generateTouchEventProxyIfRegistered(\"pointercancel\", touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t    })();\r\n\t    \r\n\t\r\n\t    // Extension to navigator\r\n\t    if (navigator.pointerEnabled === undefined) {\r\n\t\r\n\t        // Indicates if the browser will fire pointer events for pointing input\r\n\t        navigator.pointerEnabled = true;\r\n\t\r\n\t        // IE\r\n\t        if (navigator.msPointerEnabled) {\r\n\t            navigator.maxTouchPoints = navigator.msMaxTouchPoints;\r\n\t        }\r\n\t    }\r\n\t})();\n\n/***/ },\n\n/***/ 165:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function () {\n\t\n\t/*** Variables ***/\n\t\n\t  var win = window,\n\t    doc = document,\n\t    attrProto = {\n\t      setAttribute: Element.prototype.setAttribute,\n\t      removeAttribute: Element.prototype.removeAttribute\n\t    },\n\t    hasShadow = Element.prototype.createShadowRoot,\n\t    container = doc.createElement('div'),\n\t    noop = function(){},\n\t    trueop = function(){ return true; },\n\t    regexReplaceCommas = /,/g,\n\t    regexCamelToDash = /([a-z])([A-Z])/g,\n\t    regexPseudoParens = /\\(|\\)/g,\n\t    regexPseudoCapture = /:(\\w+)\\u276A(.+?(?=\\u276B))|:(\\w+)/g,\n\t    regexDigits = /(\\d+)/g,\n\t    keypseudo = {\n\t      action: function (pseudo, event) {\n\t        return pseudo.value.match(regexDigits).indexOf(String(event.keyCode)) > -1 == (pseudo.name == 'keypass') || null;\n\t      }\n\t    },\n\t    /*\n\t      - The prefix object generated here is added to the xtag object as xtag.prefix later in the code\n\t      - Prefix provides a variety of prefix variations for the browser in which your code is running\n\t      - The 4 variations of prefix are as follows:\n\t        * prefix.dom: the correct prefix case and form when used on DOM elements/style properties\n\t        * prefix.lowercase: a lowercase version of the prefix for use in various user-code situations\n\t        * prefix.css: the lowercase, dashed version of the prefix\n\t        * prefix.js: addresses prefixed APIs present in global and non-Element contexts\n\t    */\n\t    prefix = (function () {\n\t      var styles = win.getComputedStyle(doc.documentElement, ''),\n\t          pre = (Array.prototype.slice\n\t            .call(styles)\n\t            .join('')\n\t            .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n\t          )[1];\n\t      return {\n\t        dom: pre == 'ms' ? 'MS' : pre,\n\t        lowercase: pre,\n\t        css: '-' + pre + '-',\n\t        js: pre == 'ms' ? pre : pre[0].toUpperCase() + pre.substr(1)\n\t      };\n\t    })(),\n\t    matchSelector = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype[prefix.lowercase + 'MatchesSelector'];\n\t\n\t  var issetCustomEvent = false;\n\t  var customEvent;\n\t  try {\n\t    customEvent = doc.createEvent('CustomEvent');\n\t    issetCustomEvent = true;\n\t  } catch(e) {\n\t    customEvent = doc.createEvent('Event');\n\t  }\n\t\n\t/*** Functions ***/\n\t\n\t// Utilities\n\t\n\t  /*\n\t    This is an enhanced typeof check for all types of objects. Where typeof would normaly return\n\t    'object' for many common DOM objects (like NodeLists and HTMLCollections).\n\t    - For example: typeOf(document.children) will correctly return 'htmlcollection'\n\t  */\n\t  var typeCache = {},\n\t      typeString = typeCache.toString,\n\t      typeRegexp = /\\s([a-zA-Z]+)/;\n\t  function typeOf(obj) {\n\t    var type = typeString.call(obj);\n\t    return typeCache[type] || (typeCache[type] = type.match(typeRegexp)[1].toLowerCase());\n\t  }\n\t\n\t  function clone(item, type){\n\t    var fn = clone[type || typeOf(item)];\n\t    return fn ? fn(item) : item;\n\t  }\n\t    clone.object = function(src){\n\t      var obj = {};\n\t      for (var key in src) obj[key] = clone(src[key]);\n\t      return obj;\n\t    };\n\t    clone.array = function(src){\n\t      var i = src.length, array = new Array(i);\n\t      while (i--) array[i] = clone(src[i]);\n\t      return array;\n\t    };\n\t\n\t  /*\n\t    The toArray() method allows for conversion of any object to a true array. For types that\n\t    cannot be converted to an array, the method returns a 1 item array containing the passed-in object.\n\t  */\n\t  var unsliceable = { 'undefined': 1, 'null': 1, 'number': 1, 'boolean': 1, 'string': 1, 'function': 1 };\n\t  function toArray(obj){\n\t    return unsliceable[typeOf(obj)] ? [obj] : Array.prototype.slice.call(obj, 0);\n\t  }\n\t\n\t// DOM\n\t\n\t  var str = '';\n\t  function query(element, selector){\n\t    return (selector || str).length ? toArray(element.querySelectorAll(selector)) : [];\n\t  }\n\t\n\t// Pseudos\n\t\n\t  function parsePseudo(fn){fn();}\n\t\n\t// Mixins\n\t\n\t  function mergeOne(source, key, current){\n\t    var type = typeOf(current);\n\t    if (type == 'object' && typeOf(source[key]) == 'object') xtag.merge(source[key], current);\n\t    else source[key] = clone(current, type);\n\t    return source;\n\t  }\n\t\n\t  function mergeMixin(tag, original, mixin, name) {\n\t    var key, keys = {};\n\t    for (var z in original) keys[z.split(':')[0]] = z;\n\t    for (z in mixin) {\n\t      key = keys[z.split(':')[0]];\n\t      if (typeof original[key] == 'function') {\n\t        if (!key.match(':mixins')) {\n\t          original[key + ':mixins'] = original[key];\n\t          delete original[key];\n\t          key = key + ':mixins';\n\t        }\n\t        original[key].__mixin__ = xtag.applyPseudos(z + (z.match(':mixins') ? '' : ':mixins'), mixin[z], tag.pseudos, original[key].__mixin__);\n\t      }\n\t      else {\n\t        original[z] = mixin[z];\n\t        delete original[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  var uniqueMixinCount = 0;\n\t  function addMixin(tag, original, mixin){\n\t    for (var z in mixin){\n\t      original[z + ':__mixin__(' + (uniqueMixinCount++) + ')'] = xtag.applyPseudos(z, mixin[z], tag.pseudos);\n\t    }\n\t  }\n\t\n\t  function resolveMixins(mixins, output){\n\t    var index = mixins.length;\n\t    while (index--){\n\t      output.unshift(mixins[index]);\n\t      if (xtag.mixins[mixins[index]].mixins) resolveMixins(xtag.mixins[mixins[index]].mixins, output);\n\t    }\n\t    return output;\n\t  }\n\t\n\t  function applyMixins(tag) {\n\t    resolveMixins(tag.mixins, []).forEach(function(name){\n\t      var mixin = xtag.mixins[name];\n\t      for (var type in mixin) {\n\t        var item = mixin[type],\n\t            original = tag[type];\n\t        if (!original) tag[type] = item;\n\t        else {\n\t          switch (type){\n\t            case 'mixins': break;\n\t            case 'events': addMixin(tag, original, item); break;\n\t            case 'accessors':\n\t            case 'prototype':\n\t              for (var z in item) {\n\t                if (!original[z]) original[z] = item[z];\n\t                else mergeMixin(tag, original[z], item[z], name);\n\t              }\n\t              break;\n\t            default: mergeMixin(tag, original, item, name);\n\t          }\n\t        }\n\t      }\n\t    });\n\t    return tag;\n\t  }\n\t\n\t// Events\n\t\n\t  function delegateAction(pseudo, event) {\n\t    var match,\n\t        target = event.target,\n\t        root = event.currentTarget;\n\t    while (!match && target && target != root) {\n\t      if (target.tagName && matchSelector.call(target, pseudo.value)) match = target;\n\t      target = target.parentNode;\n\t    }\n\t    if (!match && root.tagName && matchSelector.call(root, pseudo.value)) match = root;\n\t    return match ? pseudo.listener = pseudo.listener.bind(match) : null;\n\t  }\n\t\n\t  function touchFilter(event){\n\t    return event.button === 0;\n\t  }\n\t\n\t  function writeProperty(key, event, base, desc){\n\t    if (desc) event[key] = base[key];\n\t    else Object.defineProperty(event, key, {\n\t      writable: true,\n\t      enumerable: true,\n\t      value: base[key]\n\t    });\n\t  }\n\t\n\t  var skipProps = {};\n\t  for (var z in customEvent) skipProps[z] = 1;\n\t  function inheritEvent(event, base){\n\t    var desc = Object.getOwnPropertyDescriptor(event, 'target');\n\t    for (var z in base) {\n\t      if (!skipProps[z]) writeProperty(z, event, base, desc);\n\t    }\n\t    event.baseEvent = base;\n\t  }\n\t\n\t// Accessors\n\t\n\t  function modAttr(element, attr, name, value, method){\n\t    attrProto[method].call(element, name, attr && attr.boolean ? '' : value);\n\t  }\n\t\n\t  function syncAttr(element, attr, name, value, method){\n\t    if (attr && (attr.property || attr.selector)) {\n\t      var nodes = attr.property ? [element.xtag[attr.property]] : attr.selector ? xtag.query(element, attr.selector) : [],\n\t          index = nodes.length;\n\t      while (index--) nodes[index][method](name, value);\n\t    }\n\t  }\n\t\n\t  function attachProperties(tag, prop, z, accessor, attr, name){\n\t    var key = z.split(':'), type = key[0];\n\t    if (type == 'get') {\n\t      key[0] = prop;\n\t      tag.prototype[prop].get = xtag.applyPseudos(key.join(':'), accessor[z], tag.pseudos, accessor[z]);\n\t    }\n\t    else if (type == 'set') {\n\t      key[0] = prop;\n\t      var setter = tag.prototype[prop].set = xtag.applyPseudos(key.join(':'), attr ? function(value){\n\t        var old, method = 'setAttribute';\n\t        if (attr.boolean){\n\t          value = !!value;\n\t          old = this.hasAttribute(name);\n\t          if (!value) method = 'removeAttribute';\n\t        }\n\t        else {\n\t          value = attr.validate ? attr.validate.call(this, value) : value;\n\t          old = this.getAttribute(name);\n\t        }\n\t        modAttr(this, attr, name, value, method);\n\t        accessor[z].call(this, value, old);\n\t        syncAttr(this, attr, name, value, method);\n\t      } : accessor[z] ? function(value){\n\t        accessor[z].call(this, value);\n\t      } : null, tag.pseudos, accessor[z]);\n\t\n\t      if (attr) attr.setter = accessor[z];\n\t    }\n\t    else tag.prototype[prop][z] = accessor[z];\n\t  }\n\t\n\t  function parseAccessor(tag, prop){\n\t    tag.prototype[prop] = {};\n\t    var accessor = tag.accessors[prop],\n\t        attr = accessor.attribute,\n\t        name;\n\t\n\t    if (attr) {\n\t      name = attr.name = (attr ? (attr.name || prop.replace(regexCamelToDash, '$1-$2')) : prop).toLowerCase();\n\t      attr.key = prop;\n\t      tag.attributes[name] = attr;\n\t    }\n\t\n\t    for (var z in accessor) attachProperties(tag, prop, z, accessor, attr, name);\n\t\n\t    if (attr) {\n\t      if (!tag.prototype[prop].get) {\n\t        var method = (attr.boolean ? 'has' : 'get') + 'Attribute';\n\t        tag.prototype[prop].get = function(){\n\t          return this[method](name);\n\t        };\n\t      }\n\t      if (!tag.prototype[prop].set) tag.prototype[prop].set = function(value){\n\t        value = attr.boolean ? !!value : attr.validate ? attr.validate.call(this, value) : value;\n\t        var method = attr.boolean ? (value ? 'setAttribute' : 'removeAttribute') : 'setAttribute';\n\t        modAttr(this, attr, name, value, method);\n\t        syncAttr(this, attr, name, value, method);\n\t      };\n\t    }\n\t  }\n\t\n\t  var unwrapComment = /\\/\\*!?(?:\\@preserve)?[ \\t]*(?:\\r\\n|\\n)([\\s\\S]*?)(?:\\r\\n|\\n)\\s*\\*\\//;\n\t  function parseMultiline(fn){\n\t    return typeof fn == 'function' ? unwrapComment.exec(fn.toString())[1] : fn;\n\t  }\n\t\n\t/*** X-Tag Object Definition ***/\n\t\n\t  var xtag = {\n\t    tags: {},\n\t    defaultOptions: {\n\t      pseudos: [],\n\t      mixins: [],\n\t      events: {},\n\t      methods: {},\n\t      accessors: {},\n\t      lifecycle: {},\n\t      attributes: {},\n\t      'prototype': {\n\t        xtag: {\n\t          get: function(){\n\t            return this.__xtag__ ? this.__xtag__ : (this.__xtag__ = { data: {} });\n\t          }\n\t        }\n\t      }\n\t    },\n\t    register: function (name, options) {\n\t      var _name;\n\t      if (typeof name == 'string') _name = name.toLowerCase();\n\t      else throw 'First argument must be a Custom Element string name';\n\t      xtag.tags[_name] = options || {};\n\t\n\t      var basePrototype = options.prototype;\n\t      delete options.prototype;\n\t      var tag = xtag.tags[_name].compiled = applyMixins(xtag.merge({}, xtag.defaultOptions, options));\n\t\n\t      for (var z in tag.events) tag.events[z] = xtag.parseEvent(z, tag.events[z]);\n\t      for (z in tag.lifecycle) tag.lifecycle[z.split(':')[0]] = xtag.applyPseudos(z, tag.lifecycle[z], tag.pseudos, tag.lifecycle[z]);\n\t      for (z in tag.methods) tag.prototype[z.split(':')[0]] = { value: xtag.applyPseudos(z, tag.methods[z], tag.pseudos, tag.methods[z]), enumerable: true };\n\t      for (z in tag.accessors) parseAccessor(tag, z);\n\t\n\t      if (tag.shadow) tag.shadow = tag.shadow.nodeName ? tag.shadow : xtag.createFragment(tag.shadow);\n\t      if (tag.content) tag.content = tag.content.nodeName ? tag.content.innerHTML : parseMultiline(tag.content);\n\t      var created = tag.lifecycle.created;\n\t      var finalized = tag.lifecycle.finalized;\n\t      tag.prototype.createdCallback = {\n\t        enumerable: true,\n\t        value: function(){\n\t          var element = this;\n\t          if (tag.shadow && hasShadow) this.createShadowRoot().appendChild(tag.shadow.cloneNode(true));\n\t          if (tag.content) this.appendChild(document.createElement('div')).outerHTML = tag.content;\n\t          var output = created ? created.apply(this, arguments) : null;\n\t          xtag.addEvents(this, tag.events);\n\t          for (var name in tag.attributes) {\n\t            var attr = tag.attributes[name],\n\t                hasAttr = this.hasAttribute(name),\n\t                hasDefault = attr.def !== undefined;\n\t            if (hasAttr || attr.boolean || hasDefault) {\n\t              this[attr.key] = attr.boolean ? hasAttr : !hasAttr && hasDefault ? attr.def : this.getAttribute(name);\n\t            }\n\t          }\n\t          tag.pseudos.forEach(function(obj){\n\t            obj.onAdd.call(element, obj);\n\t          });\n\t          this.xtagComponentReady = true;\n\t          if (finalized) finalized.apply(this, arguments);\n\t          return output;\n\t        }\n\t      };\n\t\n\t      var inserted = tag.lifecycle.inserted,\n\t          removed = tag.lifecycle.removed;\n\t      if (inserted || removed) {\n\t        tag.prototype.attachedCallback = { value: function(){\n\t          if (removed) this.xtag.__parentNode__ = this.parentNode;\n\t          if (inserted) return inserted.apply(this, arguments);\n\t        }, enumerable: true };\n\t      }\n\t      if (removed) {\n\t        tag.prototype.detachedCallback = { value: function(){\n\t          var args = toArray(arguments);\n\t          args.unshift(this.xtag.__parentNode__);\n\t          var output = removed.apply(this, args);\n\t          delete this.xtag.__parentNode__;\n\t          return output;\n\t        }, enumerable: true };\n\t      }\n\t      if (tag.lifecycle.attributeChanged) tag.prototype.attributeChangedCallback = { value: tag.lifecycle.attributeChanged, enumerable: true };\n\t\n\t      tag.prototype.setAttribute = {\n\t        writable: true,\n\t        enumerable: true,\n\t        value: function (name, value){\n\t          var old;\n\t          var _name = name.toLowerCase();\n\t          var attr = tag.attributes[_name];\n\t          if (attr) {\n\t            old = this.getAttribute(_name);\n\t            value = attr.boolean ? '' : attr.validate ? attr.validate.call(this, value) : value;\n\t          }\n\t          modAttr(this, attr, _name, value, 'setAttribute');\n\t          if (attr) {\n\t            if (attr.setter) attr.setter.call(this, attr.boolean ? true : value, old);\n\t            syncAttr(this, attr, _name, value, 'setAttribute');\n\t          }\n\t        }\n\t      };\n\t\n\t      tag.prototype.removeAttribute = {\n\t        writable: true,\n\t        enumerable: true,\n\t        value: function (name){\n\t          var _name = name.toLowerCase();\n\t          var attr = tag.attributes[_name];\n\t          var old = this.hasAttribute(_name);\n\t          modAttr(this, attr, _name, '', 'removeAttribute');\n\t          if (attr) {\n\t            if (attr.setter) attr.setter.call(this, attr.boolean ? false : undefined, old);\n\t            syncAttr(this, attr, _name, '', 'removeAttribute');\n\t          }\n\t        }\n\t      };\n\t\n\t      var elementProto = basePrototype ?\n\t            basePrototype :\n\t            tag['extends'] ?\n\t            Object.create(doc.createElement(tag['extends']).constructor).prototype :\n\t            win.HTMLElement.prototype;\n\t\n\t      var definition = {\n\t        'prototype': Object.create(elementProto, tag.prototype)\n\t      };\n\t      if (tag['extends']) {\n\t        definition['extends'] = tag['extends'];\n\t      }\n\t      var reg = doc.registerElement(_name, definition);\n\t      return reg;\n\t    },\n\t\n\t    /* Exposed Variables */\n\t\n\t    mixins: {},\n\t    prefix: prefix,\n\t    captureEvents: { focus: 1, blur: 1, scroll: 1, DOMMouseScroll: 1 },\n\t    customEvents: {\n\t      animationstart: {\n\t        attach: [prefix.dom + 'AnimationStart']\n\t      },\n\t      animationend: {\n\t        attach: [prefix.dom + 'AnimationEnd']\n\t      },\n\t      transitionend: {\n\t        attach: [prefix.dom + 'TransitionEnd']\n\t      },\n\t      move: {\n\t        attach: ['pointermove']\n\t      },\n\t      enter: {\n\t        attach: ['pointerenter']\n\t      },\n\t      leave: {\n\t        attach: ['pointerleave']\n\t      },\n\t      scrollwheel: {\n\t        attach: ['DOMMouseScroll', 'mousewheel'],\n\t        condition: function(event){\n\t          event.delta = event.wheelDelta ? event.wheelDelta / 40 : Math.round(event.detail / 3.5 * -1);\n\t          return true;\n\t        }\n\t      },\n\t      tap: {\n\t        attach: ['pointerdown', 'pointerup'],\n\t        condition: function(event, custom){\n\t          if (event.type == 'pointerdown') {\n\t            custom.startX = event.clientX;\n\t            custom.startY = event.clientY;\n\t          }\n\t          else if (event.button === 0 &&\n\t                   Math.abs(custom.startX - event.clientX) < 10 &&\n\t                   Math.abs(custom.startY - event.clientY) < 10) return true;\n\t        }\n\t      },\n\t      tapstart: {\n\t        attach: ['pointerdown'],\n\t        condition: touchFilter\n\t      },\n\t      tapend: {\n\t        attach: ['pointerup'],\n\t        condition: touchFilter\n\t      },\n\t      tapmove: {\n\t        attach: ['pointerdown', 'pointerup'],\n\t        condition: function(event, custom){\n\t          if (event.type == 'pointerdown') {\n\t            if (!custom.moveListener) custom.moveListener = xtag.addEvent(this, 'pointermove', custom.listener);\n\t          }\n\t          else if (event.type == 'pointerup') {\n\t            xtag.removeEvent(this, custom.moveListener);\n\t            custom.moveListener = null;\n\t          }\n\t          else return true;\n\t        }\n\t      },\n\t      taphold: {\n\t        attach: ['pointerdown', 'pointerup'],\n\t        condition: function(event, custom){\n\t          if (event.type == 'pointerdown') {\n\t            (custom.pointers = custom.pointers || {})[event.pointerId] = setTimeout(\n\t              xtag.fireEvent.bind(null, this, 'taphold'),\n\t              custom.duration || 1000\n\t            );\n\t          }\n\t          else if (event.type == 'pointerup') {\n\t            if (custom.pointers) {\n\t              clearTimeout(custom.pointers[event.pointerId]);\n\t              delete custom.pointers[event.pointerId];\n\t            }\n\t          }\n\t          else return true;\n\t        }\n\t      }\n\t    },\n\t    pseudos: {\n\t      __mixin__: {},\n\t      mixins: {\n\t        onCompiled: function(fn, pseudo){\n\t          var mixin = pseudo.source && pseudo.source.__mixin__ || pseudo.source;\n\t          if (mixin) switch (pseudo.value) {\n\t            case null: case '': case 'before': return function(){\n\t              mixin.apply(this, arguments);\n\t              return fn.apply(this, arguments);\n\t            };\n\t            case 'after': return function(){\n\t              var returns = fn.apply(this, arguments);\n\t              mixin.apply(this, arguments);\n\t              return returns;\n\t            };\n\t            case 'none': return fn;\n\t          }\n\t          else return fn;\n\t        }\n\t      },\n\t      keypass: keypseudo,\n\t      keyfail: keypseudo,\n\t      delegate: {\n\t        action: delegateAction\n\t      },\n\t      preventable: {\n\t        action: function (pseudo, event) {\n\t          return !event.defaultPrevented;\n\t        }\n\t      },\n\t      duration: {\n\t        onAdd: function(pseudo){\n\t          pseudo.source.duration = Number(pseudo.value);\n\t        }\n\t      },\n\t      capture: {\n\t        onCompiled: function(fn, pseudo){\n\t          if (pseudo.source) pseudo.source.capture = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /* UTILITIES */\n\t\n\t    clone: clone,\n\t    typeOf: typeOf,\n\t    toArray: toArray,\n\t\n\t    wrap: function (original, fn) {\n\t      return function(){\n\t        var output = original.apply(this, arguments);\n\t        fn.apply(this, arguments);\n\t        return output;\n\t      };\n\t    },\n\t    /*\n\t      Recursively merges one object with another. The first argument is the destination object,\n\t      all other objects passed in as arguments are merged from right to left, conflicts are overwritten\n\t    */\n\t    merge: function(source, k, v){\n\t      if (typeOf(k) == 'string') return mergeOne(source, k, v);\n\t      for (var i = 1, l = arguments.length; i < l; i++){\n\t        var object = arguments[i];\n\t        for (var key in object) mergeOne(source, key, object[key]);\n\t      }\n\t      return source;\n\t    },\n\t\n\t    /*\n\t      ----- This should be simplified! -----\n\t      Generates a random ID string\n\t    */\n\t    uid: function(){\n\t      return Math.random().toString(36).substr(2,10);\n\t    },\n\t\n\t    /* DOM */\n\t\n\t    query: query,\n\t\n\t    skipTransition: function(element, fn, bind){\n\t      var prop = prefix.js + 'TransitionProperty';\n\t      element.style[prop] = element.style.transitionProperty = 'none';\n\t      var callback = fn ? fn.call(bind || element) : null;\n\t      return xtag.skipFrame(function(){\n\t        element.style[prop] = element.style.transitionProperty = '';\n\t        if (callback) callback.call(bind || element);\n\t      });\n\t    },\n\t\n\t    requestFrame: (function(){\n\t      var raf = win.requestAnimationFrame ||\n\t                win[prefix.lowercase + 'RequestAnimationFrame'] ||\n\t                function(fn){ return win.setTimeout(fn, 20); };\n\t      return function(fn){ return raf(fn); };\n\t    })(),\n\t\n\t    cancelFrame: (function(){\n\t      var cancel = win.cancelAnimationFrame ||\n\t                   win[prefix.lowercase + 'CancelAnimationFrame'] ||\n\t                   win.clearTimeout;\n\t      return function(id){ return cancel(id); };\n\t    })(),\n\t\n\t    skipFrame: function(fn){\n\t      var id = xtag.requestFrame(function(){ id = xtag.requestFrame(fn); });\n\t      return id;\n\t    },\n\t\n\t    matchSelector: function (element, selector) {\n\t      return matchSelector.call(element, selector);\n\t    },\n\t\n\t    set: function (element, method, value) {\n\t      element[method] = value;\n\t      if (window.CustomElements) CustomElements.upgradeAll(element);\n\t    },\n\t\n\t    innerHTML: function(el, html){\n\t      xtag.set(el, 'innerHTML', html);\n\t    },\n\t\n\t    hasClass: function (element, klass) {\n\t      return element.className.split(' ').indexOf(klass.trim())>-1;\n\t    },\n\t\n\t    addClass: function (element, klass) {\n\t      var list = element.className.trim().split(' ');\n\t      klass.trim().split(' ').forEach(function (name) {\n\t        if (!~list.indexOf(name)) list.push(name);\n\t      });\n\t      element.className = list.join(' ').trim();\n\t      return element;\n\t    },\n\t\n\t    removeClass: function (element, klass) {\n\t      var classes = klass.trim().split(' ');\n\t      element.className = element.className.trim().split(' ').filter(function (name) {\n\t        return name && !~classes.indexOf(name);\n\t      }).join(' ');\n\t      return element;\n\t    },\n\t\n\t    toggleClass: function (element, klass) {\n\t      return xtag[xtag.hasClass(element, klass) ? 'removeClass' : 'addClass'].call(null, element, klass);\n\t    },\n\t\n\t    /*\n\t      Runs a query on only the children of an element\n\t    */\n\t    queryChildren: function (element, selector) {\n\t      var id = element.id,\n\t          attr = '#' + (element.id = id || 'x_' + xtag.uid()) + ' > ',\n\t          parent = element.parentNode || !container.appendChild(element);\n\t      selector = attr + (selector + '').replace(regexReplaceCommas, ',' + attr);\n\t      var result = element.parentNode.querySelectorAll(selector);\n\t      if (!id) element.removeAttribute('id');\n\t      if (!parent) container.removeChild(element);\n\t      return toArray(result);\n\t    },\n\t\n\t    /*\n\t      Creates a document fragment with the content passed in - content can be\n\t      a string of HTML, an element, or an array/collection of elements\n\t    */\n\t    createFragment: function(content) {\n\t      var template = document.createElement('template');\n\t      if (content) {\n\t        if (content.nodeName) toArray(arguments).forEach(function(e){\n\t          template.content.appendChild(e);\n\t        });\n\t        else template.innerHTML = parseMultiline(content);\n\t      }\n\t      return document.importNode(template.content, true);\n\t    },\n\t\n\t    /*\n\t      Removes an element from the DOM for more performant node manipulation. The element\n\t      is placed back into the DOM at the place it was taken from.\n\t    */\n\t    manipulate: function(element, fn){\n\t      var next = element.nextSibling,\n\t          parent = element.parentNode,\n\t          returned = fn.call(element) || element;\n\t      if (next) parent.insertBefore(returned, next);\n\t      else parent.appendChild(returned);\n\t    },\n\t\n\t    /* PSEUDOS */\n\t\n\t    applyPseudos: function(key, fn, target, source) {\n\t      var listener = fn,\n\t          pseudos = {};\n\t      if (key.match(':')) {\n\t        var matches = [],\n\t            valueFlag = 0;\n\t        key.replace(regexPseudoParens, function(match){\n\t          if (match == '(') return ++valueFlag == 1 ? '\\u276A' : '(';\n\t          return !--valueFlag ? '\\u276B' : ')';\n\t        }).replace(regexPseudoCapture, function(z, name, value, solo){\n\t          matches.push([name || solo, value]);\n\t        });\n\t        var i = matches.length;\n\t        while (i--) parsePseudo(function(){\n\t          var name = matches[i][0],\n\t              value = matches[i][1];\n\t          if (!xtag.pseudos[name]) throw \"pseudo not found: \" + name + \" \" + value;\n\t          value = (value === '' || typeof value == 'undefined') ? null : value;\n\t          var pseudo = pseudos[i] = Object.create(xtag.pseudos[name]);\n\t          pseudo.key = key;\n\t          pseudo.name = name;\n\t          pseudo.value = value;\n\t          pseudo['arguments'] = (value || '').split(',');\n\t          pseudo.action = pseudo.action || trueop;\n\t          pseudo.source = source;\n\t          pseudo.onAdd = pseudo.onAdd || noop;\n\t          pseudo.onRemove = pseudo.onRemove || noop;\n\t          var original = pseudo.listener = listener;\n\t          listener = function(){\n\t            var output = pseudo.action.apply(this, [pseudo].concat(toArray(arguments)));\n\t            if (output === null || output === false) return output;\n\t            output = pseudo.listener.apply(this, arguments);\n\t            pseudo.listener = original;\n\t            return output;\n\t          };\n\t          if (!target) pseudo.onAdd.call(fn, pseudo);\n\t          else target.push(pseudo);\n\t        });\n\t      }\n\t      for (var z in pseudos) {\n\t        if (pseudos[z].onCompiled) listener = pseudos[z].onCompiled(listener, pseudos[z]) || listener;\n\t      }\n\t      return listener;\n\t    },\n\t\n\t    removePseudos: function(target, pseudos){\n\t      pseudos.forEach(function(obj){\n\t        obj.onRemove.call(target, obj);\n\t      });\n\t    },\n\t\n\t  /*** Events ***/\n\t\n\t    parseEvent: function(type, fn) {\n\t      var pseudos = type.split(':'),\n\t          key = pseudos.shift(),\n\t          custom = xtag.customEvents[key],\n\t          event = xtag.merge({\n\t            type: key,\n\t            stack: noop,\n\t            condition: trueop,\n\t            capture: xtag.captureEvents[key],\n\t            attach: [],\n\t            _attach: [],\n\t            pseudos: '',\n\t            _pseudos: [],\n\t            onAdd: noop,\n\t            onRemove: noop\n\t          }, custom || {});\n\t      event.attach = toArray(event.base || event.attach);\n\t      event.chain = key + (event.pseudos.length ? ':' + event.pseudos : '') + (pseudos.length ? ':' + pseudos.join(':') : '');\n\t      var stack = xtag.applyPseudos(event.chain, fn, event._pseudos, event);\n\t      event.stack = function(e){\n\t        e.currentTarget = e.currentTarget || this;\n\t        var detail = e.detail || {};\n\t        if (!detail.__stack__) return stack.apply(this, arguments);\n\t        else if (detail.__stack__ == stack) {\n\t          e.stopPropagation();\n\t          e.cancelBubble = true;\n\t          return stack.apply(this, arguments);\n\t        }\n\t      };\n\t      event.listener = function(e){\n\t        var args = toArray(arguments),\n\t            output = event.condition.apply(this, args.concat([event]));\n\t        if (!output) return output;\n\t        // The second condition in this IF is to address the following Blink regression: https://code.google.com/p/chromium/issues/detail?id=367537\n\t        // Remove this when affected browser builds with this regression fall below 5% marketshare\n\t        if (e.type != key && (e.baseEvent && e.type != e.baseEvent.type)) {\n\t          xtag.fireEvent(e.target, key, {\n\t            baseEvent: e,\n\t            detail: output !== true && (output.__stack__ = stack) ? output : { __stack__: stack }\n\t          });\n\t        }\n\t        else return event.stack.apply(this, args);\n\t      };\n\t      event.attach.forEach(function(name) {\n\t        event._attach.push(xtag.parseEvent(name, event.listener));\n\t      });\n\t      return event;\n\t    },\n\t\n\t    addEvent: function (element, type, fn, capture) {\n\t      var event = typeof fn == 'function' ? xtag.parseEvent(type, fn) : fn;\n\t      event._pseudos.forEach(function(obj){\n\t        obj.onAdd.call(element, obj);\n\t      });\n\t      event._attach.forEach(function(obj) {\n\t        xtag.addEvent(element, obj.type, obj);\n\t      });\n\t      event.onAdd.call(element, event, event.listener);\n\t      element.addEventListener(event.type, event.stack, capture || event.capture);\n\t      return event;\n\t    },\n\t\n\t    addEvents: function (element, obj) {\n\t      var events = {};\n\t      for (var z in obj) {\n\t        events[z] = xtag.addEvent(element, z, obj[z]);\n\t      }\n\t      return events;\n\t    },\n\t\n\t    removeEvent: function (element, type, event) {\n\t      event = event || type;\n\t      event.onRemove.call(element, event, event.listener);\n\t      xtag.removePseudos(element, event._pseudos);\n\t      event._attach.forEach(function(obj) {\n\t        xtag.removeEvent(element, obj);\n\t      });\n\t      element.removeEventListener(event.type, event.stack, false);\n\t    },\n\t\n\t    removeEvents: function(element, obj){\n\t      for (var z in obj) xtag.removeEvent(element, obj[z]);\n\t    },\n\t\n\t    fireEvent: function(element, type, options){\n\t      options = options || {};\n\t\n\t      var event;\n\t      var bubbles = options.bubbles !== false;\n\t      var cancelable = options.cancelable !== false;\n\t\n\t      if (issetCustomEvent) {\n\t        event = doc.createEvent('CustomEvent');\n\t        event.initCustomEvent(type, bubbles, cancelable, options.detail);\n\t\n\t      } else {\n\t        event = doc.createEvent('Event');\n\t        event.initEvent(type, bubbles, cancelable);\n\t        event.detail = options.detail;\n\t      }\n\t\n\t      if (options.baseEvent) inheritEvent(event, options.baseEvent);\n\t\n\t      element.dispatchEvent(event);\n\t    }\n\t  };\n\t\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (xtag), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module !== 'undefined' && module.exports) module.exports = xtag;\n\t  else win.xtag = xtag;\n\t\n\t  doc.addEventListener('WebComponentsReady', function(){\n\t    xtag.fireEvent(doc.body, 'DOMComponentsLoaded');\n\t  }, false);\n\t\n\t})();\n\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** xtag.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4080550084571666500a\n **/","import context from './context';\n\ncontext.Platform = {};\n\n/* eslint no-unused-vars:0 */\nvar logFlags = {\n    // dom: true\n    // data: true\n};\n\nimport './polyfills/performance';\nimport './polyfills/matches';\nimport './polyfills/CustomEvent';\nimport './polyfills/DOMAttrModified';\n\nimport 'dom-token-list-polyfill/src/token-list.js';\nimport 'webcomponents.js/src/WeakMap/WeakMap.js';\nimport 'webcomponents.js/src/MutationObserver/MutationObserver.js';\n\nimport 'webcomponents.js/src/CustomElements/base.js';\nimport 'webcomponents.js/src/CustomElements/traverse.js';\nimport 'webcomponents.js/src/CustomElements/observe.js';\nimport 'webcomponents.js/src/CustomElements/upgrade.js';\nimport 'webcomponents.js/src/CustomElements/register.js';\nimport 'webcomponents.js/src/CustomElements/boot.js';\n\nimport 'webcomponents.js/src/HTMLImports/base.js';\nimport 'webcomponents.js/src/HTMLImports/module.js';\nimport 'webcomponents.js/src/HTMLImports/path.js';\nimport 'webcomponents.js/src/HTMLImports/xhr.js';\nimport 'webcomponents.js/src/HTMLImports/Loader.js';\nimport 'webcomponents.js/src/HTMLImports/Observer.js';\nimport 'webcomponents.js/src/HTMLImports/parser.js';\nimport 'webcomponents.js/src/HTMLImports/importer.js';\nimport 'webcomponents.js/src/HTMLImports/dynamic.js';\nimport 'webcomponents.js/src/HTMLImports/boot.js';\n\nimport 'handjs/hand.base.js';\nimport xtag from 'x-tag/src/core.js';\n\nmodule.exports = xtag;\n\n\n\n/** WEBPACK FOOTER **\n ** ./xtag.js\n **/","export default (function () {\n    /* eslint no-eval: 0 */\n    return this || (1, eval)('this');\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./context.js\n **/","import context from '../context';\n\nlet issetCustomEvent = false;\n\ntry {\n    issetCustomEvent = Boolean(context.document.createEvent('CustomEvent'));\n} catch (e) {\n    // do nothing\n}\n\nlet CustomEventCommon = (function () {\n    if (issetCustomEvent) {\n        return function (eventName, params) {\n            params = params || {};\n\n            let bubbles = Boolean(params.bubbles);\n            let cancelable = Boolean(params.cancelable);\n            let evt = context.document.createEvent('CustomEvent');\n\n            evt.initCustomEvent(eventName, bubbles, cancelable, params.detail);\n\n            return evt;\n        };\n    }\n\n    return function (eventName, params) {\n        params = params || {};\n\n        let bubbles = Boolean(params.bubbles);\n        let cancelable = Boolean(params.cancelable);\n        let evt = context.document.createEvent('Event');\n\n        evt.initEvent(eventName, bubbles, cancelable);\n        evt.detail = params.detail;\n\n        return evt;\n    };\n}());\n\nCustomEventCommon.prototype = context.Event.prototype;\n\nexport default CustomEventCommon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./polyfills/CustomEventCommon.js\n **/","import context from '../context';\n\nif (typeof context.performance === 'undefined') {\n    context.performance = {};\n}\n\n/**\n * Method Performance.now() returns timestamp DOMHighResTimeStamp,\n * measured in milliseconds, accurate to one thousandth of a millisecond.\n * @returns {number}\n */\ncontext.performance.now = context.performance.now || (function () {\n    let nowOffset;\n\n    if (context.performance.timing && context.performance.timing.navigationStart) {\n        nowOffset = context.performance.timing.navigationStar;\n\n    } else {\n        nowOffset = Date.now();\n    }\n\n    return function () {\n        return (Date.now() - nowOffset);\n    };\n}());\n\n\n\n/** WEBPACK FOOTER **\n ** ./polyfills/performance.js\n **/","import context from '../context';\n\nconst indexOf = Array.prototype.indexOf;\nconst proto = context.Element.prototype;\n\nproto.matches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector ||\n    function (selector) {\n        return (indexOf.call((this.parentNode || this.ownerDocument).querySelectorAll(selector), this) !== -1);\n    };\n\nexport default proto.matches;\n\n\n\n/** WEBPACK FOOTER **\n ** ./polyfills/matches.js\n **/","/**\n * strange commit, checks CustomEvent only in IE\n * https://github.com/webcomponents/webcomponentsjs/commit/8d6a38aa6e3d03ff54a41db9e9725401bbc1446c\n */\n\nimport context from '../context';\nimport CustomEventCommon from './CustomEventCommon';\n\nif (typeof context.CustomEvent !== 'function') {\n    context.CustomEvent = CustomEventCommon;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./polyfills/CustomEvent.js\n **/","/**\n * @see http://engineering.silk.co/post/31921750832/mutation-events-what-happens\n */\n\nimport context from '../context';\n\nlet attrModifiedWorks = false;\nlet listener = function () {\n    attrModifiedWorks = true;\n};\n\nlet htmlElement = context.document.documentElement;\nhtmlElement.addEventListener('DOMAttrModified', listener, false);\nhtmlElement.setAttribute('___TEST___', true);\nhtmlElement.removeEventListener('DOMAttrModified', listener, false);\nhtmlElement.removeAttribute('___TEST___', true);\n\nif (!attrModifiedWorks) {\n    let proto = context.Element.prototype;\n\n    proto.__setAttribute = proto.setAttribute;\n\n    /**\n     * Set attribute.\n     * @param {string} attrName\n     * @param {string} newVal\n     */\n    proto.setAttribute = function (attrName, newVal) {\n        let prevVal = this.getAttribute(attrName);\n        this.__setAttribute(attrName, newVal);\n        newVal = this.getAttribute(attrName);\n        if (newVal !== prevVal) {\n            let evt = context.document.createEvent('MutationEvent');\n            evt.initMutationEvent(\n                'DOMAttrModified',\n                true,\n                false,\n                this,\n                prevVal || '',\n                newVal || '',\n                attrName,\n                (prevVal === null) ? evt.ADDITION : evt.MODIFICATION\n            );\n            this.dispatchEvent(evt);\n        }\n    };\n\n    proto.__removeAttribute = proto.removeAttribute;\n\n    /**\n     * Remote attribute.\n     * @param {string} attrName\n     */\n    proto.removeAttribute = function (attrName) {\n        let prevVal = this.getAttribute(attrName);\n        this.__removeAttribute(attrName);\n        let evt = context.document.createEvent('MutationEvent');\n        evt.initMutationEvent(\n            'DOMAttrModified',\n            true,\n            false,\n            this,\n            prevVal,\n            '',\n            attrName,\n            evt.REMOVAL\n        );\n        this.dispatchEvent(evt);\n    };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./polyfills/DOMAttrModified.js\n **/","// DOMTokenList polyfill for IE9\n(function () {\n\nif (typeof window.Element === \"undefined\" || \"classList\" in document.documentElement) return;\n\nvar prototype = Array.prototype,\n    indexOf = prototype.indexOf,\n    slice = prototype.slice,\n    push = prototype.push,\n    splice = prototype.splice,\n    join = prototype.join;\n\nfunction DOMTokenList(el) {\n  this._element = el;\n  if (el.className != this._classCache) {\n    this._classCache = el.className;\n\n    if (!this._classCache) return;\n\n      // The className needs to be trimmed and split on whitespace\n      // to retrieve a list of classes.\n      var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n        i;\n    for (i = 0; i < classes.length; i++) {\n      push.call(this, classes[i]);\n    }\n  }\n};\n\nfunction setToClassName(el, classes) {\n  el.className = classes.join(' ');\n}\n\nDOMTokenList.prototype = {\n  add: function(token) {\n    if(this.contains(token)) return;\n    push.call(this, token);\n    setToClassName(this._element, slice.call(this, 0));\n  },\n  contains: function(token) {\n    return indexOf.call(this, token) !== -1;\n  },\n  item: function(index) {\n    return this[index] || null;\n  },\n  remove: function(token) {\n    var i = indexOf.call(this, token);\n     if (i === -1) {\n       return;\n     }\n    splice.call(this, i, 1);\n    setToClassName(this._element, slice.call(this, 0));\n  },\n  toString: function() {\n    return join.call(this, ' ');\n  },\n  toggle: function(token) {\n    if (indexOf.call(this, token) === -1) {\n      this.add(token);\n    } else {\n      this.remove(token);\n    }\n  }\n};\n\nwindow.DOMTokenList = DOMTokenList;\n\nfunction defineElementGetter (obj, prop, getter) {\n  if (Object.defineProperty) {\n    Object.defineProperty(obj, prop,{\n      get : getter\n    })\n  } else {\n    obj.__defineGetter__(prop, getter);\n  }\n}\n\ndefineElementGetter(Element.prototype, 'classList', function () {\n  return new DOMTokenList(this);\n});\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/dom-token-list-polyfill/src/token-list.js\n ** module id = 145\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nif (typeof WeakMap === 'undefined') {\n  (function() {\n    var defineProperty = Object.defineProperty;\n    var counter = Date.now() % 1e9;\n\n    var WeakMap = function() {\n      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\n    };\n\n    WeakMap.prototype = {\n      set: function(key, value) {\n        var entry = key[this.name];\n        if (entry && entry[0] === key)\n          entry[1] = value;\n        else\n          defineProperty(key, this.name, {value: [key, value], writable: true});\n        return this;\n      },\n      get: function(key) {\n        var entry;\n        return (entry = key[this.name]) && entry[0] === key ?\n            entry[1] : undefined;\n      },\n      delete: function(key) {\n        var entry = key[this.name];\n        if (!entry || entry[0] !== key) return false;\n        entry[0] = entry[1] = undefined;\n        return true;\n      },\n      has: function(key) {\n        var entry = key[this.name];\n        if (!entry) return false;\n        return entry[0] === key;\n      }\n    };\n\n    window.WeakMap = WeakMap;\n  })();\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/WeakMap/WeakMap.js\n ** module id = 146\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(global) {\n\n  // Don't allow this object to be redefined.\n  if (global.JsMutationObserver) {\n    return;\n  }\n\n  var registrationsTable = new WeakMap();\n\n  var setImmediate;\n\n  // As much as we would like to use the native implementation, IE\n  // (all versions) suffers a rather annoying bug where it will drop or defer\n  // callbacks when heavy DOM operations are being performed concurrently.\n  //\n  // For a thorough discussion on this, see:\n  // http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\n  if (/Trident|Edge/.test(navigator.userAgent)) {\n    // Sadly, this bug also affects postMessage and MessageQueues.\n    //\n    // We would like to use the onreadystatechange hack for IE <= 10, but it is\n    // dangerous in the polyfilled environment due to requiring that the\n    // observed script element be in the document.\n    setImmediate = setTimeout;\n\n  // If some other browser ever implements it, let's prefer their native\n  // implementation:\n  } else if (window.setImmediate) {\n    setImmediate = window.setImmediate;\n\n  // Otherwise, we fall back to postMessage as a means of emulating the next\n  // task semantics of setImmediate.\n  } else {\n    var setImmediateQueue = [];\n    var sentinel = String(Math.random());\n    window.addEventListener('message', function(e) {\n      if (e.data === sentinel) {\n        var queue = setImmediateQueue;\n        setImmediateQueue = [];\n        queue.forEach(function(func) {\n          func();\n        });\n      }\n    });\n    setImmediate = function(func) {\n      setImmediateQueue.push(func);\n      window.postMessage(sentinel, '*');\n    };\n  }\n\n  // This is used to ensure that we never schedule 2 callas to setImmediate\n  var isScheduled = false;\n\n  // Keep track of observers that needs to be notified next time.\n  var scheduledObservers = [];\n\n  /**\n   * Schedules |dispatchCallback| to be called in the future.\n   * @param {MutationObserver} observer\n   */\n  function scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n    if (!isScheduled) {\n      isScheduled = true;\n      setImmediate(dispatchCallbacks);\n    }\n  }\n\n  function wrapIfNeeded(node) {\n    return window.ShadowDOMPolyfill &&\n        window.ShadowDOMPolyfill.wrapIfNeeded(node) ||\n        node;\n  }\n\n  function dispatchCallbacks() {\n    // http://dom.spec.whatwg.org/#mutation-observers\n\n    isScheduled = false; // Used to allow a new setImmediate call above.\n\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    // Sort observers based on their creation UID (incremental).\n    observers.sort(function(o1, o2) {\n      return o1.uid_ - o2.uid_;\n    });\n\n    var anyNonEmpty = false;\n    observers.forEach(function(observer) {\n\n      // 2.1, 2.2\n      var queue = observer.takeRecords();\n      // 2.3. Remove all transient registered observers whose observer is mo.\n      removeTransientObserversFor(observer);\n\n      // 2.4\n      if (queue.length) {\n        observer.callback_(queue, observer);\n        anyNonEmpty = true;\n      }\n    });\n\n    // 3.\n    if (anyNonEmpty)\n      dispatchCallbacks();\n  }\n\n  function removeTransientObserversFor(observer) {\n    observer.nodes_.forEach(function(node) {\n      var registrations = registrationsTable.get(node);\n      if (!registrations)\n        return;\n      registrations.forEach(function(registration) {\n        if (registration.observer === observer)\n          registration.removeTransientObservers();\n      });\n    });\n  }\n\n  /**\n   * This function is used for the \"For each registered observer observer (with\n   * observer's options as options) in target's list of registered observers,\n   * run these substeps:\" and the \"For each ancestor ancestor of target, and for\n   * each registered observer observer (with options options) in ancestor's list\n   * of registered observers, run these substeps:\" part of the algorithms. The\n   * |options.subtree| is checked to ensure that the callback is called\n   * correctly.\n   *\n   * @param {Node} target\n   * @param {function(MutationObserverInit):MutationRecord} callback\n   */\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n      var registrations = registrationsTable.get(node);\n\n      if (registrations) {\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n\n          // Only target ignores subtree.\n          if (node !== target && !options.subtree)\n            continue;\n\n          var record = callback(options);\n          if (record)\n            registration.enqueue(record);\n        }\n      }\n    }\n  }\n\n  var uidCounter = 0;\n\n  /**\n   * The class that maps to the DOM MutationObserver interface.\n   * @param {Function} callback.\n   * @constructor\n   */\n  function JsMutationObserver(callback) {\n    this.callback_ = callback;\n    this.nodes_ = [];\n    this.records_ = [];\n    this.uid_ = ++uidCounter;\n  }\n\n  JsMutationObserver.prototype = {\n    observe: function(target, options) {\n      target = wrapIfNeeded(target);\n\n      // 1.1\n      if (!options.childList && !options.attributes && !options.characterData ||\n\n          // 1.2\n          options.attributeOldValue && !options.attributes ||\n\n          // 1.3\n          options.attributeFilter && options.attributeFilter.length &&\n              !options.attributes ||\n\n          // 1.4\n          options.characterDataOldValue && !options.characterData) {\n\n        throw new SyntaxError();\n      }\n\n      var registrations = registrationsTable.get(target);\n      if (!registrations)\n        registrationsTable.set(target, registrations = []);\n\n      // 2\n      // If target's list of registered observers already includes a registered\n      // observer associated with the context object, replace that registered\n      // observer's options with options.\n      var registration;\n      for (var i = 0; i < registrations.length; i++) {\n        if (registrations[i].observer === this) {\n          registration = registrations[i];\n          registration.removeListeners();\n          registration.options = options;\n          break;\n        }\n      }\n\n      // 3.\n      // Otherwise, add a new registered observer to target's list of registered\n      // observers with the context object as the observer and options as the\n      // options, and add target to context object's list of nodes on which it\n      // is registered.\n      if (!registration) {\n        registration = new Registration(this, target, options);\n        registrations.push(registration);\n        this.nodes_.push(target);\n      }\n\n      registration.addListeners();\n    },\n\n    disconnect: function() {\n      this.nodes_.forEach(function(node) {\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n          if (registration.observer === this) {\n            registration.removeListeners();\n            registrations.splice(i, 1);\n            // Each node can only have one registered observer associated with\n            // this observer.\n            break;\n          }\n        }\n      }, this);\n      this.records_ = [];\n    },\n\n    takeRecords: function() {\n      var copyOfRecords = this.records_;\n      this.records_ = [];\n      return copyOfRecords;\n    }\n  };\n\n  /**\n   * @param {string} type\n   * @param {Node} target\n   * @constructor\n   */\n  function MutationRecord(type, target) {\n    this.type = type;\n    this.target = target;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.attributeName = null;\n    this.attributeNamespace = null;\n    this.oldValue = null;\n  }\n\n  function copyMutationRecord(original) {\n    var record = new MutationRecord(original.type, original.target);\n    record.addedNodes = original.addedNodes.slice();\n    record.removedNodes = original.removedNodes.slice();\n    record.previousSibling = original.previousSibling;\n    record.nextSibling = original.nextSibling;\n    record.attributeName = original.attributeName;\n    record.attributeNamespace = original.attributeNamespace;\n    record.oldValue = original.oldValue;\n    return record;\n  };\n\n  // We keep track of the two (possibly one) records used in a single mutation.\n  var currentRecord, recordWithOldValue;\n\n  /**\n   * Creates a record without |oldValue| and caches it as |currentRecord| for\n   * later use.\n   * @param {string} oldValue\n   * @return {MutationRecord}\n   */\n  function getRecord(type, target) {\n    return currentRecord = new MutationRecord(type, target);\n  }\n\n  /**\n   * Gets or creates a record with |oldValue| based in the |currentRecord|\n   * @param {string} oldValue\n   * @return {MutationRecord}\n   */\n  function getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue)\n      return recordWithOldValue;\n    recordWithOldValue = copyMutationRecord(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n  }\n\n  function clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n  }\n\n  /**\n   * @param {MutationRecord} record\n   * @return {boolean} Whether the record represents a record from the current\n   * mutation event.\n   */\n  function recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n  }\n\n  /**\n   * Selects which record, if any, to replace the last record in the queue.\n   * This returns |null| if no record should be replaced.\n   *\n   * @param {MutationRecord} lastRecord\n   * @param {MutationRecord} newRecord\n   * @param {MutationRecord}\n   */\n  function selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord)\n      return lastRecord;\n\n    // Check if the the record we are adding represents the same record. If\n    // so, we keep the one with the oldValue in it.\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord))\n      return recordWithOldValue;\n\n    return null;\n  }\n\n  /**\n   * Class used to represent a registered observer.\n   * @param {MutationObserver} observer\n   * @param {Node} target\n   * @param {MutationObserverInit} options\n   * @constructor\n   */\n  function Registration(observer, target, options) {\n    this.observer = observer;\n    this.target = target;\n    this.options = options;\n    this.transientObservedNodes = [];\n  }\n\n  Registration.prototype = {\n    enqueue: function(record) {\n      var records = this.observer.records_;\n      var length = records.length;\n\n      // There are cases where we replace the last record with the new record.\n      // For example if the record represents the same mutation we need to use\n      // the one with the oldValue. If we get same record (this can happen as we\n      // walk up the tree) we ignore the new record.\n      if (records.length > 0) {\n        var lastRecord = records[length - 1];\n        var recordToReplaceLast = selectRecord(lastRecord, record);\n        if (recordToReplaceLast) {\n          records[length - 1] = recordToReplaceLast;\n          return;\n        }\n      } else {\n        scheduleCallback(this.observer);\n      }\n\n      records[length] = record;\n    },\n\n    addListeners: function() {\n      this.addListeners_(this.target);\n    },\n\n    addListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes)\n        node.addEventListener('DOMAttrModified', this, true);\n\n      if (options.characterData)\n        node.addEventListener('DOMCharacterDataModified', this, true);\n\n      if (options.childList)\n        node.addEventListener('DOMNodeInserted', this, true);\n\n      if (options.childList || options.subtree)\n        node.addEventListener('DOMNodeRemoved', this, true);\n    },\n\n    removeListeners: function() {\n      this.removeListeners_(this.target);\n    },\n\n    removeListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes)\n        node.removeEventListener('DOMAttrModified', this, true);\n\n      if (options.characterData)\n        node.removeEventListener('DOMCharacterDataModified', this, true);\n\n      if (options.childList)\n        node.removeEventListener('DOMNodeInserted', this, true);\n\n      if (options.childList || options.subtree)\n        node.removeEventListener('DOMNodeRemoved', this, true);\n    },\n\n    /**\n     * Adds a transient observer on node. The transient observer gets removed\n     * next time we deliver the change records.\n     * @param {Node} node\n     */\n    addTransientObserver: function(node) {\n      // Don't add transient observers on the target itself. We already have all\n      // the required listeners set up on the target.\n      if (node === this.target)\n        return;\n\n      this.addListeners_(node);\n      this.transientObservedNodes.push(node);\n      var registrations = registrationsTable.get(node);\n      if (!registrations)\n        registrationsTable.set(node, registrations = []);\n\n      // We know that registrations does not contain this because we already\n      // checked if node === this.target.\n      registrations.push(this);\n    },\n\n    removeTransientObservers: function() {\n      var transientObservedNodes = this.transientObservedNodes;\n      this.transientObservedNodes = [];\n\n      transientObservedNodes.forEach(function(node) {\n        // Transient observers are never added to the target.\n        this.removeListeners_(node);\n\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i] === this) {\n            registrations.splice(i, 1);\n            // Each node can only have one registered observer associated with\n            // this observer.\n            break;\n          }\n        }\n      }, this);\n    },\n\n    handleEvent: function(e) {\n      // Stop propagation since we are managing the propagation manually.\n      // This means that other mutation events on the page will not work\n      // correctly but that is by design.\n      e.stopImmediatePropagation();\n\n      switch (e.type) {\n        case 'DOMAttrModified':\n          // http://dom.spec.whatwg.org/#concept-mo-queue-attributes\n\n          var name = e.attrName;\n          var namespace = e.relatedNode.namespaceURI;\n          var target = e.target;\n\n          // 1.\n          var record = new getRecord('attributes', target);\n          record.attributeName = name;\n          record.attributeNamespace = namespace;\n\n          // 2.\n          var oldValue =\n              e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n\n          forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n            // 3.1, 4.2\n            if (!options.attributes)\n              return;\n\n            // 3.2, 4.3\n            if (options.attributeFilter && options.attributeFilter.length &&\n                options.attributeFilter.indexOf(name) === -1 &&\n                options.attributeFilter.indexOf(namespace) === -1) {\n              return;\n            }\n            // 3.3, 4.4\n            if (options.attributeOldValue)\n              return getRecordWithOldValue(oldValue);\n\n            // 3.4, 4.5\n            return record;\n          });\n\n          break;\n\n        case 'DOMCharacterDataModified':\n          // http://dom.spec.whatwg.org/#concept-mo-queue-characterdata\n          var target = e.target;\n\n          // 1.\n          var record = getRecord('characterData', target);\n\n          // 2.\n          var oldValue = e.prevValue;\n\n\n          forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n            // 3.1, 4.2\n            if (!options.characterData)\n              return;\n\n            // 3.2, 4.3\n            if (options.characterDataOldValue)\n              return getRecordWithOldValue(oldValue);\n\n            // 3.3, 4.4\n            return record;\n          });\n\n          break;\n\n        case 'DOMNodeRemoved':\n          this.addTransientObserver(e.target);\n          // Fall through.\n        case 'DOMNodeInserted':\n          // http://dom.spec.whatwg.org/#concept-mo-queue-childlist\n          var changedNode = e.target;\n          var addedNodes, removedNodes;\n          if (e.type === 'DOMNodeInserted') {\n            addedNodes = [changedNode];\n            removedNodes = [];\n          } else {\n\n            addedNodes = [];\n            removedNodes = [changedNode];\n          }\n          var previousSibling = changedNode.previousSibling;\n          var nextSibling = changedNode.nextSibling;\n\n          // 1.\n          var record = getRecord('childList', e.target.parentNode);\n          record.addedNodes = addedNodes;\n          record.removedNodes = removedNodes;\n          record.previousSibling = previousSibling;\n          record.nextSibling = nextSibling;\n\n          forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {\n            // 2.1, 3.2\n            if (!options.childList)\n              return;\n\n            // 2.2, 3.3\n            return record;\n          });\n\n      }\n\n      clearRecords();\n    }\n  };\n\n  global.JsMutationObserver = JsMutationObserver;\n\n  if (!global.MutationObserver) {\n    global.MutationObserver = JsMutationObserver;\n    // Explicltly mark MO as polyfilled for user reference.\n    JsMutationObserver._isPolyfilled = true;\n  }\n\n})(self);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/MutationObserver/MutationObserver.js\n ** module id = 147\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.CustomElements = window.CustomElements || {flags:{}};\n\n(function(scope) {\n\n// imports\nvar flags = scope.flags;\n\n// world's simplest module initializer\nvar modules = [];\nvar addModule = function(module) {\n\tmodules.push(module);\n};\n\nvar initializeModules = function() {\n\tmodules.forEach(function(module) {\n\t\tmodule(scope);\n\t});\n};\n\n// exports\nscope.addModule = addModule;\nscope.initializeModules = initializeModules;\nscope.hasNative = Boolean(document.registerElement);\nscope.isIE = /Trident/.test(navigator.userAgent);\n\n// NOTE: For consistent timing, use native custom elements only when not\n// polyfilling other key related web components features.\nscope.useNative = !flags.register && scope.hasNative &&\n\t\t!window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);\n\n})(window.CustomElements);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/base.js\n ** module id = 148\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n// helper methods for traversing through element trees\nwindow.CustomElements.addModule(function(scope){\n\n// imports\nvar IMPORT_LINK_TYPE = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : 'none';\n\n// walk the subtree rooted at node, including descent into shadow-roots,\n// applying 'cb' to each element\nfunction forSubtree(node, cb) {\n  //flags.dom && node.childNodes && node.childNodes.length && console.group('subTree: ', node);\n  findAllElements(node, function(e) {\n    if (cb(e)) {\n      return true;\n    }\n    forRoots(e, cb);\n  });\n  forRoots(node, cb);\n  //flags.dom && node.childNodes && node.childNodes.length && console.groupEnd();\n}\n\n\n// walk the subtree rooted at node, applying 'find(element, data)' function\n// to each element\n// if 'find' returns true for 'element', do not search element's subtree\nfunction findAllElements(node, find, data) {\n  var e = node.firstElementChild;\n  if (!e) {\n    e = node.firstChild;\n    while (e && e.nodeType !== Node.ELEMENT_NODE) {\n      e = e.nextSibling;\n    }\n  }\n  while (e) {\n    if (find(e, data) !== true) {\n      findAllElements(e, find, data);\n    }\n    e = e.nextElementSibling;\n  }\n  return null;\n}\n\n// walk all shadowRoots on a given node.\nfunction forRoots(node, cb) {\n  var root = node.shadowRoot;\n  while(root) {\n    forSubtree(root, cb);\n    root = root.olderShadowRoot;\n  }\n}\n\nfunction forDocumentTree(doc, cb) {\n  _forDocumentTree(doc, cb, []);\n}\n\n\nfunction _forDocumentTree(doc, cb, processingDocuments) {\n  doc = window.wrap(doc);\n  if (processingDocuments.indexOf(doc) >= 0) {\n    return;\n  }\n  processingDocuments.push(doc);\n  var imports = doc.querySelectorAll('link[rel=' + IMPORT_LINK_TYPE + ']');\n  for (var i=0, l=imports.length, n; (i<l) && (n=imports[i]); i++) {\n    if (n.import) {\n      _forDocumentTree(n.import, cb, processingDocuments);\n    }\n  }\n  cb(doc);\n}\n\n// exports\nscope.forDocumentTree = forDocumentTree;\nscope.forSubtree = forSubtree;\n\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/traverse.js\n ** module id = 149\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Implements custom element observation and attached/detached callbacks\n * @module observe\n*/\n\nwindow.CustomElements.addModule(function(scope){\n\n// imports\nvar flags = scope.flags;\nvar forSubtree = scope.forSubtree;\nvar forDocumentTree = scope.forDocumentTree;\n\n/*\n  Manage nodes attached to document trees\n*/\n\n// manage lifecycle on added node and it's subtree; upgrade the node and\n// entire subtree if necessary and process attached for the node and entire\n// subtree\nfunction addedNode(node, isAttached) {\n  return added(node, isAttached) || addedSubtree(node, isAttached);\n}\n\n// manage lifecycle on added node; upgrade if necessary and process attached\nfunction added(node, isAttached) {\n  if (scope.upgrade(node, isAttached)) {\n    // Return true to indicate\n    return true;\n  }\n  if (isAttached) {\n    attached(node);\n  }\n}\n\n// manage lifecycle on added node's subtree only; allows the entire subtree\n// to upgrade if necessary and process attached\nfunction addedSubtree(node, isAttached) {\n  forSubtree(node, function(e) {\n    if (added(e, isAttached)) {\n      return true;\n    }\n  });\n}\n\n// On platforms without MutationObserver, mutations may not be\n// reliable and therefore attached/detached are not reliable. We think this\n// occurs sometimes under heavy DOM operation load, but it is not easy to\n// reproduce.\n// To make these callbacks less likely to fail in this scenario,\n// we *optionally* defer all inserts and removes\n// to give a chance for elements to be attached into dom.\n// This helps ensure attachedCallback fires for elements that are created and\n// immediately added to dom.\n// This change can significantly alter the performance characteristics\n// of attaching elements and therefore we only enable it if the user has\n// explicitly provided the `throttle-attached` flag.\nvar hasThrottledAttached = (window.MutationObserver._isPolyfilled &&\n    flags['throttle-attached']);\n// bc\nscope.hasPolyfillMutations = hasThrottledAttached;\n// exposed for testing\nscope.hasThrottledAttached = hasThrottledAttached;\n\nvar isPendingMutations = false;\nvar pendingMutations = [];\nfunction deferMutation(fn) {\n  pendingMutations.push(fn);\n  if (!isPendingMutations) {\n    isPendingMutations = true;\n    setTimeout(takeMutations);\n  }\n}\n\nfunction takeMutations() {\n  isPendingMutations = false;\n  var $p = pendingMutations;\n  for (var i=0, l=$p.length, p; (i<l) && (p=$p[i]); i++) {\n    p();\n  }\n  pendingMutations = [];\n}\n\nfunction attached(element) {\n  if (hasThrottledAttached) {\n    deferMutation(function() {\n      _attached(element);\n    });\n  } else {\n    _attached(element);\n  }\n}\n\n// NOTE: due to how MO works (see comments below), an element may be attached\n// multiple times so we protect against extra processing here.\nfunction _attached(element) {\n  // track element for insertion if it's upgraded and cares about insertion\n  // bail if the element is already marked as attached\n  if (element.__upgraded__ && !element.__attached) {\n    element.__attached = true;\n    if (element.attachedCallback) {\n      element.attachedCallback();\n    }\n  }\n}\n\n/*\n  Manage nodes detached from document trees\n*/\n\n// manage lifecycle on detached node and it's subtree; process detached\n// for the node and entire subtree\nfunction detachedNode(node) {\n  detached(node);\n  forSubtree(node, function(e) {\n    detached(e);\n  });\n}\n\nfunction detached(element) {\n  if (hasThrottledAttached) {\n    deferMutation(function() {\n      _detached(element);\n    });\n  } else {\n    _detached(element);\n  }\n}\n\n// NOTE: due to how MO works (see comments below), an element may be detached\n// multiple times so we protect against extra processing here.\nfunction _detached(element) {\n  // track element for removal if it's upgraded and cares about removal\n  // bail if the element is already marked as not attached\n  if (element.__upgraded__ && element.__attached) {\n    element.__attached = false;\n    if (element.detachedCallback) {\n      element.detachedCallback();\n    }\n  }\n}\n\n// recurse up the tree to check if an element is actually in the main document.\nfunction inDocument(element) {\n  var p = element;\n  var doc = window.wrap(document);\n  while (p) {\n    if (p == doc) {\n      return true;\n    }\n    p = p.parentNode || ((p.nodeType === Node.DOCUMENT_FRAGMENT_NODE) && p.host);\n  }\n}\n\n//  Install an element observer on all shadowRoots owned by node.\nfunction watchShadow(node) {\n  if (node.shadowRoot && !node.shadowRoot.__watched) {\n    flags.dom && console.log('watching shadow-root for: ', node.localName);\n    // watch all unwatched roots...\n    var root = node.shadowRoot;\n    while (root) {\n      observe(root);\n      root = root.olderShadowRoot;\n    }\n  }\n}\n\n/*\n  NOTE: In order to process all mutations, it's necessary to recurse into\n  any added nodes. However, it's not possible to determine a priori if a node\n  will get its own mutation record. This means\n  *nodes can be seen multiple times*.\n\n  Here's an example:\n\n  (1) In this case, recursion is required to see `child`:\n\n      node.innerHTML = '<div><child></child></div>'\n\n  (2) In this case, child will get its own mutation record:\n\n      node.appendChild(div).appendChild(child);\n\n  We cannot know ahead of time if we need to walk into the node in (1) so we\n  do and see child; however, if it was added via case (2) then it will have its\n  own record and therefore be seen 2x.\n*/\nfunction handler(root, mutations) {\n  // for logging only\n  if (flags.dom) {\n    var mx = mutations[0];\n    if (mx && mx.type === 'childList' && mx.addedNodes) {\n        if (mx.addedNodes) {\n          var d = mx.addedNodes[0];\n          while (d && d !== document && !d.host) {\n            d = d.parentNode;\n          }\n          var u = d && (d.URL || d._URL || (d.host && d.host.localName)) || '';\n          u = u.split('/?').shift().split('/').pop();\n        }\n    }\n    console.group('mutations (%d) [%s]', mutations.length, u || '');\n  }\n  // handle mutations\n  // NOTE: do an `inDocument` check dynamically here. It's possible that `root`\n  // is a document in which case the answer here can never change; however\n  // `root` may be an element like a shadowRoot that can be added/removed\n  // from the main document.\n  var isAttached = inDocument(root);\n  mutations.forEach(function(mx) {\n    if (mx.type === 'childList') {\n      forEach(mx.addedNodes, function(n) {\n        if (!n.localName) {\n          return;\n        }\n        addedNode(n, isAttached);\n      });\n      forEach(mx.removedNodes, function(n) {\n        if (!n.localName) {\n          return;\n        }\n        detachedNode(n);\n      });\n    }\n  });\n  flags.dom && console.groupEnd();\n};\n\n\n/*\n  When elements are added to the dom, upgrade and attached/detached may be\n  asynchronous. `CustomElements.takeRecords` can be called to process any\n  pending upgrades and attached/detached callbacks synchronously.\n*/\nfunction takeRecords(node) {\n  node = window.wrap(node);\n  // If the optional node is not supplied, assume we mean the whole document.\n  if (!node) {\n    node = window.wrap(document);\n  }\n  // Find the root of the tree, which will be an Document or ShadowRoot.\n  while (node.parentNode) {\n    node = node.parentNode;\n  }\n  var observer = node.__observer;\n  if (observer) {\n    handler(node, observer.takeRecords());\n    takeMutations();\n  }\n}\n\nvar forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n\n\n// observe a node tree; bail if it's already being observed.\nfunction observe(inRoot) {\n  if (inRoot.__observer) {\n    return;\n  }\n  // For each ShadowRoot, we create a new MutationObserver, so the root can be\n  // garbage collected once all references to the `inRoot` node are gone.\n  // Give the handler access to the root so that an 'in document' check can\n  // be done.\n  var observer = new MutationObserver(handler.bind(this, inRoot));\n  observer.observe(inRoot, {childList: true, subtree: true});\n  inRoot.__observer = observer;\n}\n\n// upgrade an entire document and observe it for elements changes.\nfunction upgradeDocument(doc) {\n  doc = window.wrap(doc);\n  flags.dom && console.group('upgradeDocument: ', (doc.baseURI).split('/').pop());\n  var isMainDocument = (doc === window.wrap(document));\n  addedNode(doc, isMainDocument);\n  observe(doc);\n  flags.dom && console.groupEnd();\n}\n\n/*\nThis method is intended to be called when the document tree (including imports)\nhas pending custom elements to upgrade. It can be called multiple times and\nshould do nothing if no elements are in need of upgrade.\n*/\nfunction upgradeDocumentTree(doc) {\n  forDocumentTree(doc, upgradeDocument);\n}\n\n\n// Patch `createShadowRoot()` if Shadow DOM is available, otherwise leave\n// undefined to aid feature detection of Shadow DOM.\nvar originalCreateShadowRoot = Element.prototype.createShadowRoot;\nif (originalCreateShadowRoot) {\n  Element.prototype.createShadowRoot = function() {\n    var root = originalCreateShadowRoot.call(this);\n    window.CustomElements.watchShadow(this);\n    return root;\n  };\n}\n\n// exports\nscope.watchShadow = watchShadow;\nscope.upgradeDocumentTree = upgradeDocumentTree;\nscope.upgradeDocument = upgradeDocument;\nscope.upgradeSubtree = addedSubtree;\nscope.upgradeAll = addedNode;\nscope.attached = attached;\nscope.takeRecords = takeRecords;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/observe.js\n ** module id = 150\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Implements custom element upgrading\n * @module upgrade\n*/\n\nwindow.CustomElements.addModule(function(scope) {\n\n// imports\nvar flags = scope.flags;\n\n/**\n * Upgrade an element to a custom element. Upgrading an element\n * causes the custom prototype to be applied, an `is` attribute\n * to be attached (as needed), and invocation of the `readyCallback`.\n * If the element is in the main document, the `attachedkCallback` method\n * will be invoked.\n * `upgrade` does nothing if the element is already upgraded, or\n * if it matches no registered custom tag name.\n *\n * @method ugprade\n * @param {Element} element The element to upgrade.\n * @return {Element} The upgraded element.\n */\n// Upgrade a node if it can be upgraded and is not already.\nfunction upgrade(node, isAttached) {\n  // upgrade template elements before custom elements\n  if (node.localName === 'template') {\n    if (window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n      HTMLTemplateElement.decorate(node);\n    }\n  }\n  if (!node.__upgraded__ && (node.nodeType === Node.ELEMENT_NODE)) {\n    var is = node.getAttribute('is');\n    // find definition first by localName and secondarily by is attribute\n    var definition = scope.getRegisteredDefinition(node.localName) ||\n      scope.getRegisteredDefinition(is);\n    if (definition) {\n      // upgrade with is iff the definition tag matches the element tag\n      // and don't upgrade if there's an is and the definition does not extend\n      // a native element\n      if ((is && definition.tag == node.localName) ||\n        (!is && !definition.extends)) {\n        return upgradeWithDefinition(node, definition, isAttached);\n      }\n    }\n  }\n}\n\nfunction upgradeWithDefinition(element, definition, isAttached) {\n  flags.upgrade && console.group('upgrade:', element.localName);\n  // some definitions specify an 'is' attribute\n  if (definition.is) {\n    element.setAttribute('is', definition.is);\n  }\n  // make 'element' implement definition.prototype\n  implementPrototype(element, definition);\n  // flag as upgraded\n  element.__upgraded__ = true;\n  // lifecycle management\n  created(element);\n  // attachedCallback fires in tree order, call before recursing\n  if (isAttached) {\n    scope.attached(element);\n  }\n  // there should never be a shadow root on element at this point\n  scope.upgradeSubtree(element, isAttached);\n  flags.upgrade && console.groupEnd();\n  // OUTPUT\n  return element;\n}\n\n//  Set __proto__ on supported platforms and use a mixin strategy when\n//  this is not supported; e.g. on IE10.\nfunction implementPrototype(element, definition) {\n  // prototype swizzling is best\n  if (Object.__proto__) {\n    element.__proto__ = definition.prototype;\n  } else {\n    // where above we can re-acquire inPrototype via\n    // getPrototypeOf(Element), we cannot do so when\n    // we use mixin, so we install a magic reference\n    customMixin(element, definition.prototype, definition.native);\n    element.__proto__ = definition.prototype;\n  }\n}\n\nfunction customMixin(inTarget, inSrc, inNative) {\n  // TODO(sjmiles): 'used' allows us to only copy the 'youngest' version of\n  // any property. This set should be precalculated. We also need to\n  // consider this for supporting 'super'.\n  var used = {};\n  // start with inSrc\n  var p = inSrc;\n  // The default is HTMLElement.prototype, so we add a test to avoid mixing in\n  // native prototypes\n  while (p !== inNative && p !== HTMLElement.prototype) {\n    var keys = Object.getOwnPropertyNames(p);\n    for (var i=0, k; k=keys[i]; i++) {\n      if (!used[k]) {\n        Object.defineProperty(inTarget, k,\n            Object.getOwnPropertyDescriptor(p, k));\n        used[k] = 1;\n      }\n    }\n    p = Object.getPrototypeOf(p);\n  }\n}\n\nfunction created(element) {\n  // invoke createdCallback\n  if (element.createdCallback) {\n    element.createdCallback();\n  }\n}\n\nscope.upgrade = upgrade;\nscope.upgradeWithDefinition = upgradeWithDefinition;\nscope.implementPrototype = implementPrototype;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/upgrade.js\n ** module id = 151\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Implements `document.registerElement`\n * @module register\n*/\n\n/**\n * Polyfilled extensions to the `document` object.\n * @class Document\n*/\n\nwindow.CustomElements.addModule(function(scope) {\n\n// imports\nvar isIE = scope.isIE;\nvar upgradeDocumentTree = scope.upgradeDocumentTree;\nvar upgradeAll = scope.upgradeAll;\nvar upgradeWithDefinition = scope.upgradeWithDefinition;\nvar implementPrototype = scope.implementPrototype;\nvar useNative = scope.useNative;\n\n/**\n * Registers a custom tag name with the document.\n *\n * When a registered element is created, a `readyCallback` method is called\n * in the scope of the element. The `readyCallback` method can be specified on\n * either `options.prototype` or `options.lifecycle` with the latter taking\n * precedence.\n *\n * @method register\n * @param {String} name The tag name to register. Must include a dash ('-'),\n *    for example 'x-component'.\n * @param {Object} options\n *    @param {String} [options.extends]\n *      (_off spec_) Tag name of an element to extend (or blank for a new\n *      element). This parameter is not part of the specification, but instead\n *      is a hint for the polyfill because the extendee is difficult to infer.\n *      Remember that the input prototype must chain to the extended element's\n *      prototype (or HTMLElement.prototype) regardless of the value of\n *      `extends`.\n *    @param {Object} options.prototype The prototype to use for the new\n *      element. The prototype must inherit from HTMLElement.\n *    @param {Object} [options.lifecycle]\n *      Callbacks that fire at important phases in the life of the custom\n *      element.\n *\n * @example\n *      FancyButton = document.registerElement(\"fancy-button\", {\n *        extends: 'button',\n *        prototype: Object.create(HTMLButtonElement.prototype, {\n *          readyCallback: {\n *            value: function() {\n *              console.log(\"a fancy-button was created\",\n *            }\n *          }\n *        })\n *      });\n * @return {Function} Constructor for the newly registered type.\n */\nfunction register(name, options) {\n  //console.warn('document.registerElement(\"' + name + '\", ', options, ')');\n  // construct a defintion out of options\n  // TODO(sjmiles): probably should clone options instead of mutating it\n  var definition = options || {};\n  if (!name) {\n    throw new Error('document.registerElement: first argument `name` must not be empty');\n  }\n  if (name.indexOf('-') < 0) {\n    throw new Error('document.registerElement: first argument (\\'name\\') must contain a dash (\\'-\\'). Argument provided was \\'' + String(name) + '\\'.');\n  }\n  // prevent registering reserved names\n  if (isReservedTag(name)) {\n    throw new Error('Failed to execute \\'registerElement\\' on \\'Document\\': Registration failed for type \\'' + String(name) + '\\'. The type name is invalid.');\n  }\n  // elements may only be registered once\n  if (getRegisteredDefinition(name)) {\n    throw new Error('DuplicateDefinitionError: a type with name \\'' + String(name) + '\\' is already registered');\n  }\n  // prototype is optional, default to an extension of HTMLElement\n  if (!definition.prototype) {\n    definition.prototype = Object.create(HTMLElement.prototype);\n  }\n  // record name\n  definition.__name = name.toLowerCase();\n  // ensure extended name is also treated case-insensitively\n  if (definition.extends) {\n    definition.extends = definition.extends.toLowerCase();\n  }\n  // ensure a lifecycle object so we don't have to null test it\n  definition.lifecycle = definition.lifecycle || {};\n  // build a list of ancestral custom elements (for native base detection)\n  // TODO(sjmiles): we used to need to store this, but current code only\n  // uses it in 'resolveTagName': it should probably be inlined\n  definition.ancestry = ancestry(definition.extends);\n  // extensions of native specializations of HTMLElement require localName\n  // to remain native, and use secondary 'is' specifier for extension type\n  resolveTagName(definition);\n  // some platforms require modifications to the user-supplied prototype\n  // chain\n  resolvePrototypeChain(definition);\n  // overrides to implement attributeChanged callback\n  overrideAttributeApi(definition.prototype);\n  // 7.1.5: Register the DEFINITION with DOCUMENT\n  registerDefinition(definition.__name, definition);\n  // 7.1.7. Run custom element constructor generation algorithm with PROTOTYPE\n  // 7.1.8. Return the output of the previous step.\n  definition.ctor = generateConstructor(definition);\n  definition.ctor.prototype = definition.prototype;\n  // force our .constructor to be our actual constructor\n  definition.prototype.constructor = definition.ctor;\n  // if initial parsing is complete\n  if (scope.ready) {\n    // upgrade any pre-existing nodes of this type\n    upgradeDocumentTree(document);\n  }\n  return definition.ctor;\n}\n\n// attribute watching\nfunction overrideAttributeApi(prototype) {\n  // overrides to implement callbacks\n  // TODO(sjmiles): should support access via .attributes NamedNodeMap\n  // TODO(sjmiles): preserves user defined overrides, if any\n  if (prototype.setAttribute._polyfilled) {\n    return;\n  }\n  var setAttribute = prototype.setAttribute;\n  prototype.setAttribute = function(name, value) {\n    changeAttribute.call(this, name, value, setAttribute);\n  };\n  var removeAttribute = prototype.removeAttribute;\n  prototype.removeAttribute = function(name) {\n    changeAttribute.call(this, name, null, removeAttribute);\n  };\n  prototype.setAttribute._polyfilled = true;\n}\n\n// https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/\n// index.html#dfn-attribute-changed-callback\nfunction changeAttribute(name, value, operation) {\n  name = name.toLowerCase();\n  var oldValue = this.getAttribute(name);\n  operation.apply(this, arguments);\n  var newValue = this.getAttribute(name);\n  if (this.attributeChangedCallback &&\n      (newValue !== oldValue)) {\n    this.attributeChangedCallback(name, oldValue, newValue);\n  }\n}\n\nfunction isReservedTag(name) {\n  for (var i = 0; i < reservedTagList.length; i++) {\n    if (name === reservedTagList[i]) {\n      return true;\n    }\n  }\n}\n\nvar reservedTagList = [\n  'annotation-xml', 'color-profile', 'font-face', 'font-face-src',\n  'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph'\n];\n\nfunction ancestry(extnds) {\n  var extendee = getRegisteredDefinition(extnds);\n  if (extendee) {\n    return ancestry(extendee.extends).concat([extendee]);\n  }\n  return [];\n}\n\nfunction resolveTagName(definition) {\n  // if we are explicitly extending something, that thing is our\n  // baseTag, unless it represents a custom component\n  var baseTag = definition.extends;\n  // if our ancestry includes custom components, we only have a\n  // baseTag if one of them does\n  for (var i=0, a; (a=definition.ancestry[i]); i++) {\n    baseTag = a.is && a.tag;\n  }\n  // our tag is our baseTag, if it exists, and otherwise just our name\n  definition.tag = baseTag || definition.__name;\n  if (baseTag) {\n    // if there is a base tag, use secondary 'is' specifier\n    definition.is = definition.__name;\n  }\n}\n\nfunction resolvePrototypeChain(definition) {\n  // if we don't support __proto__ we need to locate the native level\n  // prototype for precise mixing in\n  if (!Object.__proto__) {\n    // default prototype\n    var nativePrototype = HTMLElement.prototype;\n    // work out prototype when using type-extension\n    if (definition.is) {\n      var inst = document.createElement(definition.tag);\n      nativePrototype = Object.getPrototypeOf(inst);\n    }\n    // ensure __proto__ reference is installed at each point on the prototype\n    // chain.\n    // NOTE: On platforms without __proto__, a mixin strategy is used instead\n    // of prototype swizzling. In this case, this generated __proto__ provides\n    // limited support for prototype traversal.\n    var proto = definition.prototype, ancestor;\n    var foundPrototype = false;\n    while (proto) {\n      if (proto == nativePrototype) {\n        foundPrototype = true;\n      }\n      ancestor = Object.getPrototypeOf(proto);\n      if (ancestor) {\n        proto.__proto__ = ancestor;\n      }\n      proto = ancestor;\n    }\n    if (!foundPrototype) {\n      // Note the spec actually allows this, but it results in broken elements\n      // and is difficult to polyfill correctly, so we throw\n      console.warn(definition.tag + ' prototype not found in prototype chain for ' +\n        definition.is);\n    }\n    // cache this in case of mixin\n    definition.native = nativePrototype;\n  }\n}\n\n// SECTION 4\n\nfunction instantiate(definition) {\n  // 4.a.1. Create a new object that implements PROTOTYPE\n  // 4.a.2. Let ELEMENT by this new object\n  //\n  // the custom element instantiation algorithm must also ensure that the\n  // output is a valid DOM element with the proper wrapper in place.\n  //\n  return upgradeWithDefinition(domCreateElement(definition.tag), definition);\n}\n\n// element registry (maps tag names to definitions)\n\nvar registry = {};\n\nfunction getRegisteredDefinition(name) {\n  if (name) {\n    return registry[name.toLowerCase()];\n  }\n}\n\nfunction registerDefinition(name, definition) {\n  registry[name] = definition;\n}\n\nfunction generateConstructor(definition) {\n  return function() {\n    return instantiate(definition);\n  };\n}\n\nvar HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nfunction createElementNS(namespace, tag, typeExtension) {\n  // NOTE: we do not support non-HTML elements,\n  // just call createElementNS for non HTML Elements\n  if (namespace === HTML_NAMESPACE) {\n    return createElement(tag, typeExtension);\n  } else {\n    return domCreateElementNS(namespace, tag);\n  }\n}\n\nfunction createElement(tag, typeExtension) {\n  // TODO(sjmiles): ignore 'tag' when using 'typeExtension', we could\n  // error check it, or perhaps there should only ever be one argument\n  if (tag) {\n    tag = tag.toLowerCase();\n  }\n  if (typeExtension) {\n    typeExtension = typeExtension.toLowerCase();\n  }\n  var definition = getRegisteredDefinition(typeExtension || tag);\n  if (definition) {\n    if (tag == definition.tag && typeExtension == definition.is) {\n      return new definition.ctor();\n    }\n    // Handle empty string for type extension.\n    if (!typeExtension && !definition.is) {\n      return new definition.ctor();\n    }\n  }\n  var element;\n  if (typeExtension) {\n    element = createElement(tag);\n    element.setAttribute('is', typeExtension);\n    return element;\n  }\n  element = domCreateElement(tag);\n  // Custom tags should be HTMLElements even if not upgraded.\n  if (tag.indexOf('-') >= 0) {\n    implementPrototype(element, HTMLElement);\n  }\n  return element;\n}\n\n// capture native createElement before we override it\nvar domCreateElement = document.createElement.bind(document);\nvar domCreateElementNS = document.createElementNS.bind(document);\n\n// Create a custom 'instanceof'. This is necessary when CustomElements\n// are implemented via a mixin strategy, as for example on IE10.\nvar isInstance;\nif (!Object.__proto__ && !useNative) {\n  isInstance = function(obj, ctor) {\n    // Allows instanceof(<div>, HTMLElement.prototype) to work\n    if (obj instanceof ctor) {\n      return true;\n    }\n    var p = obj;\n    while (p) {\n      // NOTE: this is not technically correct since we're not checking if\n      // an object is an instance of a constructor; however, this should\n      // be good enough for the mixin strategy.\n      if (p === ctor.prototype) {\n        return true;\n      }\n      p = p.__proto__;\n    }\n    return false;\n  };\n} else {\n  isInstance = function(obj, base) {\n    return obj instanceof base;\n  };\n}\n\n// wrap a dom object method that works on nodes such that it forces upgrade\nfunction wrapDomMethodToForceUpgrade(obj, methodName) {\n  var orig = obj[methodName];\n  obj[methodName] = function() {\n    var n = orig.apply(this, arguments);\n    upgradeAll(n);\n    return n;\n  };\n}\n\nwrapDomMethodToForceUpgrade(Node.prototype, 'cloneNode');\nwrapDomMethodToForceUpgrade(document, 'importNode');\n\n// exports\ndocument.registerElement = register;\ndocument.createElement = createElement; // override\ndocument.createElementNS = createElementNS; // override\nscope.registry = registry;\nscope.instanceof = isInstance;\nscope.reservedTagList = reservedTagList;\nscope.getRegisteredDefinition = getRegisteredDefinition;\n\n// bc\ndocument.register = document.registerElement;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/register.js\n ** module id = 152\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope){\n\n// imports\nvar useNative = scope.useNative;\nvar initializeModules = scope.initializeModules;\n\nvar isIE = scope.isIE;\n\n// If native, setup stub api and bail.\n// NOTE: we fire `WebComponentsReady` under native for api compatibility\nif (useNative) {\n  // stub\n  var nop = function() {};\n\n  // exports\n  scope.watchShadow = nop;\n  scope.upgrade = nop;\n  scope.upgradeAll = nop;\n  scope.upgradeDocumentTree = nop;\n  scope.upgradeSubtree = nop;\n  scope.takeRecords = nop;\n\n  scope.instanceof = function(obj, base) {\n    return obj instanceof base;\n  };\n\n} else {\n  // Initialize polyfill modules. Note, polyfill modules are loaded but not\n  // executed; this is a convenient way to control which modules run when\n  // the polyfill is required and allows the polyfill to load even when it's\n  // not needed.\n  initializeModules();\n}\n\n// imports\nvar upgradeDocumentTree = scope.upgradeDocumentTree;\nvar upgradeDocument = scope.upgradeDocument;\n\n// ShadowDOM polyfill wraps elements but some elements like `document`\n// cannot be wrapped so we help the polyfill by wrapping some elements.\nif (!window.wrap) {\n  if (window.ShadowDOMPolyfill) {\n    window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded;\n    window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded;\n  } else {\n    window.wrap = window.unwrap = function(node) {\n      return node;\n    };\n  }\n}\n\n// eagarly upgrade imported documents\nif (window.HTMLImports) {\n  window.HTMLImports.__importsParsingHook = function(elt) {\n    if (elt.import) {\n      upgradeDocument(wrap(elt.import));\n    }\n  };\n}\n\n// bootstrap parsing\nfunction bootstrap() {\n  // one more upgrade to catch out of order registrations\n  upgradeDocumentTree(window.wrap(document));\n  // install upgrade hook if HTMLImports are available\n  // set internal 'ready' flag, now document.registerElement will trigger\n  // synchronous upgrades\n  window.CustomElements.ready = true;\n  // async to ensure *native* custom elements upgrade prior to this\n  // DOMContentLoaded can fire before elements upgrade (e.g. when there's\n  // an external script)\n  // Delay doubly to help workaround\n  // https://code.google.com/p/chromium/issues/detail?id=516550.\n  // CustomElements must use requestAnimationFrame in attachedCallback\n  // to query style/layout data. The WebComponentsReady event is intended\n  // to convey overall readiness, which ideally should be after elements\n  // are attached. Adding a slight extra delay to WebComponentsReady\n  // helps preserve this guarantee.\n  var requestAnimationFrame = window.requestAnimationFrame || function(f) {\n    setTimeout(f, 16);\n  };\n  requestAnimationFrame(function() {\n    setTimeout(function() {\n      // capture blunt profiling data\n      window.CustomElements.readyTime = Date.now();\n      if (window.HTMLImports) {\n        window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime;\n      }\n      // notify the system that we are bootstrapped\n      document.dispatchEvent(\n        new CustomEvent('WebComponentsReady', {bubbles: true})\n      );\n    });\n  });\n}\n\n// When loading at readyState complete time (or via flag), boot custom elements\n// immediately.\n// If relevant, HTMLImports must already be loaded.\nif (document.readyState === 'complete' || scope.flags.eager) {\n  bootstrap();\n// When loading at readyState interactive time, bootstrap only if HTMLImports\n// are not pending. Also avoid IE as the semantics of this state are unreliable.\n} else if (document.readyState === 'interactive' && !window.attachEvent &&\n    (!window.HTMLImports || window.HTMLImports.ready)) {\n  bootstrap();\n// When loading at other readyStates, wait for the appropriate DOM event to\n// bootstrap.\n} else {\n  var loadEvent = window.HTMLImports && !window.HTMLImports.ready ?\n      'HTMLImportsLoaded' : 'DOMContentLoaded';\n  window.addEventListener(loadEvent, bootstrap);\n}\n\n})(window.CustomElements);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/CustomElements/boot.js\n ** module id = 153\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * PLEASE NOTE: This file is duplicated within Polymer. Please keep it in sync!\n * https://github.com/Polymer/polymer/blob/master/src/system/HTMLImports/base.js\n */\n\n/*\n\tCreate polyfill scope and feature detect native support.\n*/\nwindow.HTMLImports = window.HTMLImports || {flags:{}};\n\n(function(scope) {\n\n/**\n\tBasic setup and simple module executer. We collect modules and then execute\n  the code later, only if it's necessary for polyfilling.\n*/\nvar IMPORT_LINK_TYPE = 'import';\nvar useNative = Boolean(IMPORT_LINK_TYPE in document.createElement('link'));\n\n/**\n  Support `currentScript` on all browsers as `document._currentScript.`\n\n  NOTE: We cannot polyfill `document.currentScript` because it's not possible\n  both to override and maintain the ability to capture the native value.\n  Therefore we choose to expose `_currentScript` both when native imports\n  and the polyfill are in use.\n*/\n// NOTE: ShadowDOMPolyfill intrusion.\nvar hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);\nvar wrap = function(node) {\n  return hasShadowDOMPolyfill ? window.ShadowDOMPolyfill.wrapIfNeeded(node) : node;\n};\nvar rootDocument = wrap(document);\n\nvar currentScriptDescriptor = {\n  get: function() {\n    var script = window.HTMLImports.currentScript || document.currentScript ||\n        // NOTE: only works when called in synchronously executing code.\n        // readyState should check if `loading` but IE10 is\n        // interactive when scripts run so we cheat.\n        (document.readyState !== 'complete' ?\n        document.scripts[document.scripts.length - 1] : null);\n    return wrap(script);\n  },\n  configurable: true\n};\n\nObject.defineProperty(document, '_currentScript', currentScriptDescriptor);\nObject.defineProperty(rootDocument, '_currentScript', currentScriptDescriptor);\n\n/**\n  Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n  method. This api is necessary because unlike the native implementation,\n  script elements do not force imports to resolve. Instead, users should wrap\n  code in either an `HTMLImportsLoaded` handler or after load time in an\n  `HTMLImports.whenReady(callback)` call.\n\n  NOTE: This module also supports these apis under the native implementation.\n  Therefore, if this file is loaded, the same code can be used under both\n  the polyfill and native implementation.\n */\n\nvar isIE = /Trident/.test(navigator.userAgent);\n\n// call a callback when all HTMLImports in the document at call time\n// (or at least document ready) have loaded.\n// 1. ensure the document is in a ready state (has dom), then\n// 2. watch for loading of imports and call callback when done\nfunction whenReady(callback, doc) {\n  doc = doc || rootDocument;\n  // if document is loading, wait and try again\n  whenDocumentReady(function() {\n    watchImportsLoad(callback, doc);\n  }, doc);\n}\n\n// call the callback when the document is in a ready state (has dom)\nvar requiredReadyState = isIE ? 'complete' : 'interactive';\nvar READY_EVENT = 'readystatechange';\nfunction isDocumentReady(doc) {\n  return (doc.readyState === 'complete' ||\n      doc.readyState === requiredReadyState);\n}\n\n// call <callback> when we ensure the document is in a ready state\nfunction whenDocumentReady(callback, doc) {\n  if (!isDocumentReady(doc)) {\n    var checkReady = function() {\n      if (doc.readyState === 'complete' ||\n          doc.readyState === requiredReadyState) {\n        doc.removeEventListener(READY_EVENT, checkReady);\n        whenDocumentReady(callback, doc);\n      }\n    };\n    doc.addEventListener(READY_EVENT, checkReady);\n  } else if (callback) {\n    callback();\n  }\n}\n\nfunction markTargetLoaded(event) {\n  event.target.__loaded = true;\n}\n\n// call <callback> when we ensure all imports have loaded\nfunction watchImportsLoad(callback, doc) {\n  var imports = doc.querySelectorAll('link[rel=import]');\n  var parsedCount = 0, importCount = imports.length, newImports = [], errorImports = [];\n  function checkDone() {\n    if (parsedCount == importCount && callback) {\n      callback({\n        allImports: imports,\n        loadedImports: newImports,\n        errorImports: errorImports\n      });\n    }\n  }\n  function loadedImport(e) {\n    markTargetLoaded(e);\n    newImports.push(this);\n    parsedCount++;\n    checkDone();\n  }\n  function errorLoadingImport(e) {\n    errorImports.push(this);\n    parsedCount++;\n    checkDone();\n  }\n  if (importCount) {\n    for (var i=0, imp; i<importCount && (imp=imports[i]); i++) {\n      if (isImportLoaded(imp)) {\n        newImports.push(this);\n        parsedCount++;\n        checkDone();\n      } else {\n        imp.addEventListener('load', loadedImport);\n        imp.addEventListener('error', errorLoadingImport);\n      }\n    }\n  } else {\n    checkDone();\n  }\n}\n\n// NOTE: test for native imports loading is based on explicitly watching\n// all imports (see below).\n// However, we cannot rely on this entirely without watching the entire document\n// for import links. For perf reasons, currently only head is watched.\n// Instead, we fallback to checking if the import property is available\n// and the document is not itself loading.\nfunction isImportLoaded(link) {\n  return useNative ? link.__loaded ||\n      (link.import && link.import.readyState !== 'loading') :\n      link.__importParsed;\n}\n\n// TODO(sorvell): Workaround for\n// https://www.w3.org/Bugs/Public/show_bug.cgi?id=25007, should be removed when\n// this bug is addressed.\n// (1) Install a mutation observer to see when HTMLImports have loaded\n// (2) if this script is run during document load it will watch any existing\n// imports for loading.\n//\n// NOTE: The workaround has restricted functionality: (1) it's only compatible\n// with imports that are added to document.head since the mutation observer\n// watches only head for perf reasons, (2) it requires this script\n// to run before any imports have completed loading.\nif (useNative) {\n  new MutationObserver(function(mxns) {\n    for (var i=0, l=mxns.length, m; (i < l) && (m=mxns[i]); i++) {\n      if (m.addedNodes) {\n        handleImports(m.addedNodes);\n      }\n    }\n  }).observe(document.head, {childList: true});\n\n  function handleImports(nodes) {\n    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n      if (isImport(n)) {\n        handleImport(n);\n      }\n    }\n  }\n\n  function isImport(element) {\n    return element.localName === 'link' && element.rel === 'import';\n  }\n\n  function handleImport(element) {\n    var loaded = element.import;\n    if (loaded) {\n      markTargetLoaded({target: element});\n    } else {\n      element.addEventListener('load', markTargetLoaded);\n      element.addEventListener('error', markTargetLoaded);\n    }\n  }\n\n  // make sure to catch any imports that are in the process of loading\n  // when this script is run.\n  (function() {\n    if (document.readyState === 'loading') {\n      var imports = document.querySelectorAll('link[rel=import]');\n      for (var i=0, l=imports.length, imp; (i<l) && (imp=imports[i]); i++) {\n        handleImport(imp);\n      }\n    }\n  })();\n\n}\n\n// Fire the 'HTMLImportsLoaded' event when imports in document at load time\n// have loaded. This event is required to simulate the script blocking\n// behavior of native imports. A main document script that needs to be sure\n// imports have loaded should wait for this event.\nwhenReady(function(detail) {\n  window.HTMLImports.ready = true;\n  window.HTMLImports.readyTime = new Date().getTime();\n  var evt = rootDocument.createEvent(\"CustomEvent\");\n  evt.initCustomEvent(\"HTMLImportsLoaded\", true, true, detail);\n  rootDocument.dispatchEvent(evt);\n});\n\n// exports\nscope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;\nscope.useNative = useNative;\nscope.rootDocument = rootDocument;\nscope.whenReady = whenReady;\nscope.isIE = isIE;\n\n})(window.HTMLImports);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/base.js\n ** module id = 154\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n// world's simplest module initializer\nvar modules = [];\nvar addModule = function(module) {\n\tmodules.push(module);\n};\n\nvar initializeModules = function() {\n\tmodules.forEach(function(module) {\n\t\tmodule(scope);\n\t});\n};\n\n// exports\nscope.addModule = addModule;\nscope.initializeModules = initializeModules;\n\n})(window.HTMLImports);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/module.js\n ** module id = 155\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\nvar CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\nvar CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n// path fixup: style elements in imports must be made relative to the main\n// document. We fixup url's in url() and @import.\nvar path = {\n\n  resolveUrlsInStyle: function(style, linkUrl) {\n    var doc = style.ownerDocument;\n    var resolver = doc.createElement('a');\n    style.textContent = this.resolveUrlsInCssText(style.textContent, linkUrl, resolver);\n    return style;\n  },\n\n  resolveUrlsInCssText: function(cssText, linkUrl, urlObj) {\n    var r = this.replaceUrls(cssText, urlObj, linkUrl, CSS_URL_REGEXP);\n    r = this.replaceUrls(r, urlObj, linkUrl, CSS_IMPORT_REGEXP);\n    return r;\n  },\n\n  replaceUrls: function(text, urlObj, linkUrl, regexp) {\n    return text.replace(regexp, function(m, pre, url, post) {\n      var urlPath = url.replace(/[\"']/g, '');\n      if (linkUrl) {\n        urlPath = (new URL(urlPath, linkUrl)).href;\n      }\n      urlObj.href = urlPath;\n      urlPath = urlObj.href;\n      return pre + '\\'' + urlPath + '\\'' + post;\n    });\n  }\n\n};\n\n// exports\nscope.path = path;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/path.js\n ** module id = 156\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n/*\n  xhr processor.\n*/\nvar xhr = {\n  async: true,\n\n  ok: function(request) {\n    return (request.status >= 200 && request.status < 300)\n        || (request.status === 304)\n        || (request.status === 0);\n  },\n\n  load: function(url, next, nextContext) {\n    var request = new XMLHttpRequest();\n    if (scope.flags.debug || scope.flags.bust) {\n      url += '?' + Math.random();\n    }\n    request.open('GET', url, xhr.async);\n    request.addEventListener('readystatechange', function(e) {\n      if (request.readyState === 4) {\n        // Servers redirecting an import can add a Location header to help us\n        // polyfill correctly.\n        var redirectedUrl = null;\n        try {\n          var locationHeader = request.getResponseHeader(\"Location\");\n          if (locationHeader) {\n            redirectedUrl = (locationHeader.substr( 0, 1 ) === \"/\")\n              ? location.origin + locationHeader  // Location is a relative path\n              : locationHeader;                   // Full path\n          }\n        } catch ( e ) {\n            console.error( e.message );\n        }\n        next.call(nextContext, !xhr.ok(request) && request,\n            request.response || request.responseText, redirectedUrl);\n      }\n    });\n    request.send();\n    return request;\n  },\n\n  loadDocument: function(url, next, nextContext) {\n    this.load(url, next, nextContext).responseType = 'document';\n  }\n\n};\n\n// exports\nscope.xhr = xhr;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/xhr.js\n ** module id = 157\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n// imports\nvar xhr = scope.xhr;\nvar flags = scope.flags;\n\n// This loader supports a dynamic list of urls\n// and an oncomplete callback that is called when the loader is done.\n// NOTE: The polyfill currently does *not* need this dynamism or the\n// onComplete concept. Because of this, the loader could be simplified\n// quite a bit.\nvar Loader = function(onLoad, onComplete) {\n  this.cache = {};\n  this.onload = onLoad;\n  this.oncomplete = onComplete;\n  this.inflight = 0;\n  this.pending = {};\n};\n\nLoader.prototype = {\n\n  addNodes: function(nodes) {\n    // number of transactions to complete\n    this.inflight += nodes.length;\n    // commence transactions\n    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n      this.require(n);\n    }\n    // anything to do?\n    this.checkDone();\n  },\n\n  addNode: function(node) {\n    // number of transactions to complete\n    this.inflight++;\n    // commence transactions\n    this.require(node);\n    // anything to do?\n    this.checkDone();\n  },\n\n  require: function(elt) {\n    var url = elt.src || elt.href;\n    // ensure we have a standard url that can be used\n    // reliably for deduping.\n    // TODO(sjmiles): ad-hoc\n    elt.__nodeUrl = url;\n    // deduplication\n    if (!this.dedupe(url, elt)) {\n      // fetch this resource\n      this.fetch(url, elt);\n    }\n  },\n\n  dedupe: function(url, elt) {\n    if (this.pending[url]) {\n      // add to list of nodes waiting for inUrl\n      this.pending[url].push(elt);\n      // don't need fetch\n      return true;\n    }\n    var resource;\n    if (this.cache[url]) {\n      this.onload(url, elt, this.cache[url]);\n      // finished this transaction\n      this.tail();\n      // don't need fetch\n      return true;\n    }\n    // first node waiting for inUrl\n    this.pending[url] = [elt];\n    // need fetch (not a dupe)\n    return false;\n  },\n\n  fetch: function(url, elt) {\n    flags.load && console.log('fetch', url, elt);\n    if (!url) {\n      setTimeout(function() {\n        this.receive(url, elt, {error: 'href must be specified'}, null);\n      }.bind(this), 0);\n    } else if (url.match(/^data:/)) {\n      // Handle Data URI Scheme\n      var pieces = url.split(',');\n      var header = pieces[0];\n      var body = pieces[1];\n      if(header.indexOf(';base64') > -1) {\n        body = atob(body);\n      } else {\n        body = decodeURIComponent(body);\n      }\n      setTimeout(function() {\n          this.receive(url, elt, null, body);\n      }.bind(this), 0);\n    } else {\n      var receiveXhr = function(err, resource, redirectedUrl) {\n        this.receive(url, elt, err, resource, redirectedUrl);\n      }.bind(this);\n      xhr.load(url, receiveXhr);\n    }\n  },\n\n  receive: function(url, elt, err, resource, redirectedUrl) {\n    this.cache[url] = resource;\n    var $p = this.pending[url];\n    for (var i=0, l=$p.length, p; (i<l) && (p=$p[i]); i++) {\n      // If url was redirected, use the redirected location so paths are\n      // calculated relative to that.\n      this.onload(url, p, resource, err, redirectedUrl);\n      this.tail();\n    }\n    this.pending[url] = null;\n  },\n\n  tail: function() {\n    --this.inflight;\n    this.checkDone();\n  },\n\n  checkDone: function() {\n    if (!this.inflight) {\n      this.oncomplete();\n    }\n  }\n\n};\n\n// exports\nscope.Loader = Loader;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/Loader.js\n ** module id = 158\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n/*\n  Use a mutation observer to call a callback for all added nodes.\n*/\nvar Observer = function(addCallback) {\n  this.addCallback = addCallback;\n  this.mo = new MutationObserver(this.handler.bind(this));\n};\n\nObserver.prototype = {\n\n  // we track mutations for addedNodes, looking for imports\n  handler: function(mutations) {\n    for (var i=0, l=mutations.length, m; (i<l) && (m=mutations[i]); i++) {\n      if (m.type === 'childList' && m.addedNodes.length) {\n        this.addedNodes(m.addedNodes);\n      }\n    }\n  },\n\n  addedNodes: function(nodes) {\n    if (this.addCallback) {\n      this.addCallback(nodes);\n    }\n    for (var i=0, l=nodes.length, n, loading; (i<l) && (n=nodes[i]); i++) {\n      if (n.children && n.children.length) {\n        this.addedNodes(n.children);\n      }\n    }\n  },\n\n  observe: function(root) {\n    this.mo.observe(root, {childList: true, subtree: true});\n  }\n\n};\n\n// exports\nscope.Observer = Observer;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/Observer.js\n ** module id = 159\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n// imports\nvar path = scope.path;\nvar rootDocument = scope.rootDocument;\nvar flags = scope.flags;\nvar isIE = scope.isIE;\nvar IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\nvar IMPORT_SELECTOR = 'link[rel=' + IMPORT_LINK_TYPE + ']';\n\n// importParser\n// highlander object to manage parsing of imports\n// parses import related elements and ensures proper parse order\n// parse order is enforced by crawling the tree and monitoring which elements\n// have been parsed;\n// elements can be dynamically added to imports. These are maintained in a\n// separate queue and parsed after all other elements.\nvar importParser = {\n\n  // parse selectors for main document elements\n  documentSelectors: IMPORT_SELECTOR,\n\n  // parse selectors for import document elements\n  importsSelectors: [\n    IMPORT_SELECTOR,\n    'link[rel=stylesheet]:not([type])',\n    'style:not([type])',\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(','),\n\n  map: {\n    link: 'parseLink',\n    script: 'parseScript',\n    style: 'parseStyle'\n  },\n\n  dynamicElements: [],\n\n  // try to parse the next import in the tree\n  parseNext: function() {\n    var next = this.nextToParse();\n    if (next) {\n      this.parse(next);\n    }\n  },\n\n  parse: function(elt) {\n    if (this.isParsed(elt)) {\n      flags.parse && console.log('[%s] is already parsed', elt.localName);\n      return;\n    }\n    var fn = this[this.map[elt.localName]];\n    if (fn) {\n      this.markParsing(elt);\n      fn.call(this, elt);\n    }\n  },\n\n  // marks an element for dynamic parsing and attempts to parse the next element\n  parseDynamic: function(elt, quiet) {\n    this.dynamicElements.push(elt);\n    if (!quiet) {\n      this.parseNext();\n    }\n  },\n\n  // only 1 element may be parsed at a time; parsing is async so each\n  // parsing implementation must inform the system that parsing is complete\n  // via markParsingComplete.\n  // To prompt the system to parse the next element, parseNext should then be\n  // called.\n  // Note, parseNext used to be included at the end of markParsingComplete, but\n  // we must not do this so that, for example, we can (1) mark parsing complete\n  // then (2) fire an import load event, and then (3) parse the next resource.\n  markParsing: function(elt) {\n    flags.parse && console.log('parsing', elt);\n    this.parsingElement = elt;\n  },\n\n  markParsingComplete: function(elt) {\n    elt.__importParsed = true;\n    this.markDynamicParsingComplete(elt);\n    if (elt.__importElement) {\n      elt.__importElement.__importParsed = true;\n      this.markDynamicParsingComplete(elt.__importElement);\n    }\n    this.parsingElement = null;\n    flags.parse && console.log('completed', elt);\n  },\n\n  markDynamicParsingComplete: function(elt) {\n    var i = this.dynamicElements.indexOf(elt);\n    if (i >= 0) {\n      this.dynamicElements.splice(i, 1);\n    }\n  },\n\n  parseImport: function(elt) {\n    elt.import = elt.__doc;\n    if (window.HTMLImports.__importsParsingHook) {\n      window.HTMLImports.__importsParsingHook(elt);\n    }\n    if (elt.import) {\n      elt.import.__importParsed = true;\n    }\n    this.markParsingComplete(elt);\n    // fire load event\n    if (elt.__resource && !elt.__error) {\n      elt.dispatchEvent(new CustomEvent('load', {bubbles: false}));\n    } else {\n      elt.dispatchEvent(new CustomEvent('error', {bubbles: false}));\n    }\n    // TODO(sorvell): workaround for Safari addEventListener not working\n    // for elements not in the main document.\n    if (elt.__pending) {\n      var fn;\n      while (elt.__pending.length) {\n        fn = elt.__pending.shift();\n        if (fn) {\n          fn({target: elt});\n        }\n      }\n    }\n    this.parseNext();\n  },\n\n  parseLink: function(linkElt) {\n    if (nodeIsImport(linkElt)) {\n      this.parseImport(linkElt);\n    } else {\n      // make href absolute\n      linkElt.href = linkElt.href;\n      this.parseGeneric(linkElt);\n    }\n  },\n\n  parseStyle: function(elt) {\n    // TODO(sorvell): style element load event can just not fire so clone styles\n    var src = elt;\n    elt = cloneStyle(elt);\n    src.__appliedElement = elt;\n    elt.__importElement = src;\n    this.parseGeneric(elt);\n  },\n\n  parseGeneric: function(elt) {\n    this.trackElement(elt);\n    this.addElementToDocument(elt);\n  },\n\n  rootImportForElement: function(elt) {\n    var n = elt;\n    while (n.ownerDocument.__importLink) {\n      n = n.ownerDocument.__importLink;\n    }\n    return n;\n  },\n\n  addElementToDocument: function(elt) {\n    var port = this.rootImportForElement(elt.__importElement || elt);\n    port.parentNode.insertBefore(elt, port);\n  },\n\n  // tracks when a loadable element has loaded\n  trackElement: function(elt, callback) {\n    var self = this;\n    var done = function(e) {\n      // make sure we don't get multiple load/error signals (FF seems to do\n      // this sometimes when <style> elments change)\n      elt.removeEventListener('load', done);\n      elt.removeEventListener('error', done);\n      if (callback) {\n        callback(e);\n      }\n      self.markParsingComplete(elt);\n      self.parseNext();\n    };\n    elt.addEventListener('load', done);\n    elt.addEventListener('error', done);\n\n    // NOTE: IE does not fire \"load\" event for styles that have already loaded\n    // This is in violation of the spec, so we try our hardest to work around it\n    if (isIE && elt.localName === 'style') {\n      var fakeLoad = false;\n      // If there's not @import in the textContent, assume it has loaded\n      if (elt.textContent.indexOf('@import') == -1) {\n        fakeLoad = true;\n      // if we have a sheet, we have been parsed\n      } else if (elt.sheet) {\n        fakeLoad = true;\n        var csr = elt.sheet.cssRules;\n        var len = csr ? csr.length : 0;\n        // search the rules for @import's\n        for (var i = 0, r; (i < len) && (r = csr[i]); i++) {\n          if (r.type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            fakeLoad = fakeLoad && Boolean(r.styleSheet);\n          }\n        }\n      }\n      // dispatch a fake load event and continue parsing\n      if (fakeLoad) {\n        // Fire async, to prevent reentrancy\n        setTimeout(function() {\n          elt.dispatchEvent(new CustomEvent('load', {bubbles: false}));\n        });\n      }\n    }\n  },\n\n  // NOTE: execute scripts by injecting them and watching for the load/error\n  // event. Inline scripts are handled via dataURL's because browsers tend to\n  // provide correct parsing errors in this case. If this has any compatibility\n  // issues, we can switch to injecting the inline script with textContent.\n  parseScript: function(scriptElt) {\n    var script = document.createElement('script');\n    script.__importElement = scriptElt;\n    script.src = scriptElt.src ? scriptElt.src :\n        generateScriptDataUrl(scriptElt);\n    // keep track of executing script to help polyfill `document.currentScript`\n    scope.currentScript = scriptElt;\n    this.trackElement(script, function(e) {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      scope.currentScript = null;\n    });\n    this.addElementToDocument(script);\n  },\n\n  // determine the next element in the tree which should be parsed\n  // crawl the document tree to find the next unparsed element\n  // then process any dynamically added elements (these should process in 'add'\n  // order.\n  nextToParse: function() {\n    this._mayParse = [];\n    return !this.parsingElement && (this.nextToParseInDoc(rootDocument) ||\n        this.nextToParseDynamic());\n  },\n\n  nextToParseInDoc: function(doc, link) {\n    // use `marParse` list to avoid looping into the same document again\n    // since it could cause an iloop.\n    if (doc && this._mayParse.indexOf(doc) < 0) {\n      this._mayParse.push(doc);\n      var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));\n      for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n        if (!this.isParsed(n)) {\n          if (this.hasResource(n)) {\n            return nodeIsImport(n) ? this.nextToParseInDoc(n.__doc, n) : n;\n          } else {\n            return;\n          }\n        }\n      }\n    }\n    // all nodes have been parsed, ready to parse import, if any\n    return link;\n  },\n\n  // note dynamically added elements are stored in a separate queue\n  nextToParseDynamic: function() {\n    return this.dynamicElements[0];\n  },\n\n  // return the set of parse selectors relevant for this node.\n  parseSelectorsForNode: function(node) {\n    var doc = node.ownerDocument || node;\n    return doc === rootDocument ? this.documentSelectors :\n        this.importsSelectors;\n  },\n\n  isParsed: function(node) {\n    return node.__importParsed;\n  },\n\n  needsDynamicParsing: function(elt) {\n    return (this.dynamicElements.indexOf(elt) >= 0);\n  },\n\n  hasResource: function(node) {\n    if (nodeIsImport(node) && (node.__doc === undefined)) {\n      return false;\n    }\n    return true;\n  }\n\n};\n\nfunction nodeIsImport(elt) {\n  return (elt.localName === 'link') && (elt.rel === IMPORT_LINK_TYPE);\n}\n\nfunction generateScriptDataUrl(script) {\n  var scriptContent = generateScriptContent(script);\n  return 'data:text/javascript;charset=utf-8,' + encodeURIComponent(scriptContent);\n}\n\nfunction generateScriptContent(script) {\n  return script.textContent + generateSourceMapHint(script);\n}\n\n// calculate source map hint\nfunction generateSourceMapHint(script) {\n  var owner = script.ownerDocument;\n  owner.__importedScripts = owner.__importedScripts || 0;\n  var moniker = script.ownerDocument.baseURI;\n  var num = owner.__importedScripts ? '-' + owner.__importedScripts : '';\n  owner.__importedScripts++;\n  return '\\n//# sourceURL=' + moniker + num + '.js\\n';\n}\n\n// style/stylesheet handling\n\n// clone style with proper path resolution for main document\n// NOTE: styles are the only elements that require direct path fixup.\nfunction cloneStyle(style) {\n  var clone = style.ownerDocument.createElement('style');\n  clone.textContent = style.textContent;\n  path.resolveUrlsInStyle(clone);\n  return clone;\n}\n\n// exports\nscope.parser = importParser;\nscope.IMPORT_SELECTOR = IMPORT_SELECTOR;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/parser.js\n ** module id = 160\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n// imports\nvar flags = scope.flags;\nvar IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\nvar IMPORT_SELECTOR = scope.IMPORT_SELECTOR;\nvar rootDocument = scope.rootDocument;\nvar Loader = scope.Loader;\nvar Observer = scope.Observer;\nvar parser = scope.parser;\n\n// importer\n// highlander object to manage loading of imports\n// for any document, importer:\n// - loads any linked import documents (with deduping)\n// - whenever an import is loaded, prompts the parser to try to parse\n// - observes imported documents for new elements (these are handled via the\n// dynamic importer)\nvar importer = {\n\n  documents: {},\n\n  // nodes to load in the mian document\n  documentPreloadSelectors: IMPORT_SELECTOR,\n\n  // nodes to load in imports\n  importsPreloadSelectors: [\n    IMPORT_SELECTOR\n  ].join(','),\n\n  loadNode: function(node) {\n    importLoader.addNode(node);\n  },\n\n  // load all loadable elements within the parent element\n  loadSubtree: function(parent) {\n    var nodes = this.marshalNodes(parent);\n    // add these nodes to loader's queue\n    importLoader.addNodes(nodes);\n  },\n\n  marshalNodes: function(parent) {\n    // all preloadable nodes in inDocument\n    return parent.querySelectorAll(this.loadSelectorsForNode(parent));\n  },\n\n  // find the proper set of load selectors for a given node\n  loadSelectorsForNode: function(node) {\n    var doc = node.ownerDocument || node;\n    return doc === rootDocument ? this.documentPreloadSelectors :\n        this.importsPreloadSelectors;\n  },\n\n  loaded: function(url, elt, resource, err, redirectedUrl) {\n    flags.load && console.log('loaded', url, elt);\n    // store generic resource\n    // TODO(sorvell): fails for nodes inside <template>.content\n    // see https://code.google.com/p/chromium/issues/detail?id=249381.\n    elt.__resource = resource;\n    elt.__error = err;\n    if (isImportLink(elt)) {\n      var doc = this.documents[url];\n      // if we've never seen a document at this url\n      if (doc === undefined) {\n        // generate an HTMLDocument from data\n        doc = err ? null : makeDocument(resource, redirectedUrl || url);\n        if (doc) {\n          doc.__importLink = elt;\n          // note, we cannot use MO to detect parsed nodes because\n          // SD polyfill does not report these as mutations.\n          this.bootDocument(doc);\n        }\n        // cache document\n        this.documents[url] = doc;\n      }\n      // don't store import record until we're actually loaded\n      // store document resource\n      elt.__doc = doc;\n    }\n    parser.parseNext();\n  },\n\n  bootDocument: function(doc) {\n    this.loadSubtree(doc);\n    // observe documents for new elements being added\n    this.observer.observe(doc);\n    parser.parseNext();\n  },\n\n  loadedAll: function() {\n    parser.parseNext();\n  }\n\n};\n\n// loader singleton to handle loading imports\nvar importLoader = new Loader(importer.loaded.bind(importer),\n    importer.loadedAll.bind(importer));\n\n// observer singleton to handle observing elements in imports\n// NOTE: the observer has a node added callback and this is set\n// by the dynamic importer module.\nimporter.observer = new Observer();\n\nfunction isImportLink(elt) {\n  return isLinkRel(elt, IMPORT_LINK_TYPE);\n}\n\nfunction isLinkRel(elt, rel) {\n  return elt.localName === 'link' && elt.getAttribute('rel') === rel;\n}\n\nfunction hasBaseURIAccessor(doc) {\n  return !! Object.getOwnPropertyDescriptor(doc, 'baseURI');\n}\n\nfunction makeDocument(resource, url) {\n  // create a new HTML document\n  var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\n  // cache the new document's source url\n  doc._URL = url;\n  // establish a relative path via <base>\n  var base = doc.createElement('base');\n  base.setAttribute('href', url);\n  // add baseURI support to browsers (IE) that lack it.\n  if (!doc.baseURI && !hasBaseURIAccessor(doc)) {\n    // Use defineProperty since Safari throws an exception when using assignment.\n    Object.defineProperty(doc, 'baseURI', {value:url});\n  }\n  // ensure UTF-8 charset\n  var meta = doc.createElement('meta');\n  meta.setAttribute('charset', 'utf-8');\n\n  doc.head.appendChild(meta);\n  doc.head.appendChild(base);\n  // install html\n  doc.body.innerHTML = resource;\n  // TODO(sorvell): ideally this code is not aware of Template polyfill,\n  // but for now the polyfill needs help to bootstrap these templates\n  if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n    HTMLTemplateElement.bootstrap(doc);\n  }\n  return doc;\n}\n\n// Polyfill document.baseURI for browsers without it.\nif (!document.baseURI) {\n  var baseURIDescriptor = {\n    get: function() {\n      var base = document.querySelector('base');\n      return base ? base.href : window.location.href;\n    },\n    configurable: true\n  };\n\n  Object.defineProperty(document, 'baseURI', baseURIDescriptor);\n  Object.defineProperty(rootDocument, 'baseURI', baseURIDescriptor);\n}\n\n// exports\nscope.importer = importer;\nscope.importLoader = importLoader;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/importer.js\n ** module id = 161\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nwindow.HTMLImports.addModule(function(scope) {\n\n// imports\nvar parser = scope.parser;\nvar importer = scope.importer;\n\n// dynamic\n// highlander object to manage elements dynamically added to imports\n// for any observed document, dynamic:\n// - tells the importer to load any imports that are added.\n// - tells the parser to parse any added elements that need to be parsed.\n// dynamic importer)\nvar dynamic = {\n  // process (load/parse) any nodes added to imported documents.\n  added: function(nodes) {\n    var owner, parsed, loading;\n    for (var i=0, l=nodes.length, n; (i<l) && (n=nodes[i]); i++) {\n      if (!owner) {\n        owner = n.ownerDocument;\n        parsed = parser.isParsed(owner);\n      }\n      // note: the act of loading kicks the parser, so we use parseDynamic's\n      // 2nd argument to control if this added node needs to kick the parser.\n      loading = this.shouldLoadNode(n);\n      if (loading) {\n        importer.loadNode(n);\n      }\n      if (this.shouldParseNode(n) && parsed) {\n        parser.parseDynamic(n, loading);\n      }\n    }\n  },\n\n  shouldLoadNode: function(node) {\n    return (node.nodeType === 1) && matches.call(node,\n        importer.loadSelectorsForNode(node));\n  },\n\n  shouldParseNode: function(node) {\n    return (node.nodeType === 1) && matches.call(node,\n        parser.parseSelectorsForNode(node));\n  }\n\n};\n\n// let the dynamic element helper tie into the import observer.\nimporter.observer.addCallback = dynamic.added.bind(dynamic);\n\n// x-plat matches\nvar matches = HTMLElement.prototype.matches ||\n    HTMLElement.prototype.matchesSelector ||\n    HTMLElement.prototype.webkitMatchesSelector ||\n    HTMLElement.prototype.mozMatchesSelector ||\n    HTMLElement.prototype.msMatchesSelector;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/dynamic.js\n ** module id = 162\n ** module chunks = 1\n **/","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope){\n\n// imports\nvar initializeModules = scope.initializeModules;\nvar isIE = scope.isIE;\n\n/*\nNOTE: Even when native HTMLImports exists, the following api is available by\nloading the polyfill. This provides api compatibility where the polyfill\ncannot be \"correct\":\n\n  * `document._currentScript`\n  * `HTMLImportsLoaded` event\n  * `HTMLImports.whenReady(callback)\n*/\nif (scope.useNative) {\n  return;\n}\n\n// Initialize polyfill modules. Note, polyfill modules are loaded but not\n// executed; this is a convenient way to control which modules run when\n// the polyfill is required and allows the polyfill to load even when it's\n// not needed.\ninitializeModules();\n\n// imports\nvar rootDocument = scope.rootDocument;\n\n/*\n  Bootstrap the imports machine.\n*/\nfunction bootstrap() {\n  window.HTMLImports.importer.bootDocument(rootDocument);\n}\n\n// TODO(sorvell): SD polyfill does *not* generate mutations for nodes added\n// by the parser. For this reason, we must wait until the dom exists to\n// bootstrap.\nif (document.readyState === 'complete' ||\n    (document.readyState === 'interactive' && !window.attachEvent)) {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n})(window.HTMLImports);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webcomponents.js/src/HTMLImports/boot.js\n ** module id = 163\n ** module chunks = 1\n **/","var HANDJS = HANDJS || {};\r\n\r\n(function () {\r\n    // If the user agent already supports Pointer Events, do nothing\r\n    if (window.PointerEvent)\r\n        return;\r\n\r\n    // Polyfilling indexOf for old browsers\r\n    if (!Array.prototype.indexOf) {\r\n        Array.prototype.indexOf = function (searchElement) {\r\n            var t = Object(this);\r\n            var len = t.length >>> 0;\r\n            if (len === 0) {\r\n                return -1;\r\n            }\r\n            var n = 0;\r\n            if (arguments.length > 0) {\r\n                n = Number(arguments[1]);\r\n                if (n !== n) { // shortcut for verifying if it's NaN\r\n                    n = 0;\r\n                } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\r\n                    n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n                }\r\n            }\r\n            if (n >= len) {\r\n                return -1;\r\n            }\r\n            var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n            for (; k < len; k++) {\r\n                if (k in t && t[k] === searchElement) {\r\n                    return k;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n    }\r\n    //Polyfilling forEach for old browsers\r\n    if (!Array.prototype.forEach) {\r\n        Array.prototype.forEach = function (method, thisArg) {\r\n            if (!this || !(method instanceof Function))\r\n                throw new TypeError();\r\n            for (var i = 0; i < this.length; i++)\r\n                method.call(thisArg, this[i], i, this);\r\n        };\r\n    }\r\n\t// Polyfilling trim for old browsers\r\n\tif (!String.prototype.trim) {\r\n\t\tString.prototype.trim = function () {\r\n\t\t\treturn this.replace(/^\\s+|\\s+$/, '');\r\n\t\t};\r\n\t}\r\n\r\n    // Installing Hand.js\r\n    var supportedEventsNames = [\"pointerdown\", \"pointerup\", \"pointermove\", \"pointerover\", \"pointerout\", \"pointercancel\", \"pointerenter\", \"pointerleave\"];\r\n    var upperCaseEventsNames = [\"PointerDown\", \"PointerUp\", \"PointerMove\", \"PointerOver\", \"PointerOut\", \"PointerCancel\", \"PointerEnter\", \"PointerLeave\"];\r\n\r\n    var POINTER_TYPE_TOUCH = \"touch\";\r\n    var POINTER_TYPE_PEN = \"pen\";\r\n    var POINTER_TYPE_MOUSE = \"mouse\";\r\n\r\n    var previousTargets = {};\r\n\r\n    var checkPreventDefault = function (node) {\r\n        while (node && !node.handjs_forcePreventDefault) {\r\n            node = node.parentNode;\r\n        }\r\n        return !!node || window.handjs_forcePreventDefault;\r\n    };\r\n\r\n    // Touch events\r\n    var generateTouchClonedEvent = function (sourceEvent, newName, canBubble, target, relatedTarget) {\r\n        // Considering touch events are almost like super mouse events\r\n        var evObj;\r\n        \r\n        if (document.createEvent) {\r\n            evObj = document.createEvent('MouseEvents');\r\n            evObj.initMouseEvent(newName, canBubble, true, window, 1, sourceEvent.screenX, sourceEvent.screenY,\r\n                sourceEvent.clientX, sourceEvent.clientY, sourceEvent.ctrlKey, sourceEvent.altKey,\r\n                sourceEvent.shiftKey, sourceEvent.metaKey, sourceEvent.button, relatedTarget || sourceEvent.relatedTarget);\r\n        }\r\n        else {\r\n            evObj = document.createEventObject();\r\n            evObj.screenX = sourceEvent.screenX;\r\n            evObj.screenY = sourceEvent.screenY;\r\n            evObj.clientX = sourceEvent.clientX;\r\n            evObj.clientY = sourceEvent.clientY;\r\n            evObj.ctrlKey = sourceEvent.ctrlKey;\r\n            evObj.altKey = sourceEvent.altKey;\r\n            evObj.shiftKey = sourceEvent.shiftKey;\r\n            evObj.metaKey = sourceEvent.metaKey;\r\n            evObj.button = sourceEvent.button;\r\n            evObj.relatedTarget = relatedTarget || sourceEvent.relatedTarget;\r\n        }\r\n        // offsets\r\n        if (evObj.offsetX === undefined) {\r\n            if (sourceEvent.offsetX !== undefined) {\r\n\r\n                // For Opera which creates readonly properties\r\n                if (Object && Object.defineProperty !== undefined) {\r\n                    Object.defineProperty(evObj, \"offsetX\", {\r\n                        writable: true\r\n                    });\r\n                    Object.defineProperty(evObj, \"offsetY\", {\r\n                        writable: true\r\n                    });\r\n                }\r\n\r\n                evObj.offsetX = sourceEvent.offsetX;\r\n                evObj.offsetY = sourceEvent.offsetY;\r\n            } else if (Object && Object.defineProperty !== undefined) {\r\n                Object.defineProperty(evObj, \"offsetX\", {\r\n                    get: function () {\r\n                        if (this.currentTarget && this.currentTarget.offsetLeft) {\r\n                            return sourceEvent.clientX - this.currentTarget.offsetLeft;\r\n                        }\r\n                        return sourceEvent.clientX;\r\n                    }\r\n                });\r\n                Object.defineProperty(evObj, \"offsetY\", {\r\n                    get: function () {\r\n                        if (this.currentTarget && this.currentTarget.offsetTop) {\r\n                            return sourceEvent.clientY - this.currentTarget.offsetTop;\r\n                        }\r\n                        return sourceEvent.clientY;\r\n                    }\r\n                });\r\n            }\r\n            else if (sourceEvent.layerX !== undefined) {\r\n                evObj.offsetX = sourceEvent.layerX - sourceEvent.currentTarget.offsetLeft;\r\n                evObj.offsetY = sourceEvent.layerY - sourceEvent.currentTarget.offsetTop;\r\n            }\r\n        }\r\n\r\n        // adding missing properties\r\n\r\n        if (sourceEvent.isPrimary !== undefined)\r\n            evObj.isPrimary = sourceEvent.isPrimary;\r\n        else\r\n            evObj.isPrimary = true;\r\n\r\n        if (sourceEvent.pressure)\r\n            evObj.pressure = sourceEvent.pressure;\r\n        else {\r\n            var button = 0;\r\n\r\n            if (sourceEvent.which !== undefined)\r\n                button = sourceEvent.which;\r\n            else if (sourceEvent.button !== undefined) {\r\n                button = sourceEvent.button;\r\n            }\r\n            evObj.pressure = (button === 0) ? 0 : 0.5;\r\n        }\r\n\r\n\r\n        if (sourceEvent.rotation)\r\n            evObj.rotation = sourceEvent.rotation;\r\n        else\r\n            evObj.rotation = 0;\r\n\r\n        // Timestamp\r\n        if (sourceEvent.hwTimestamp)\r\n            evObj.hwTimestamp = sourceEvent.hwTimestamp;\r\n        else\r\n            evObj.hwTimestamp = 0;\r\n\r\n        // Tilts\r\n        if (sourceEvent.tiltX)\r\n            evObj.tiltX = sourceEvent.tiltX;\r\n        else\r\n            evObj.tiltX = 0;\r\n\r\n        if (sourceEvent.tiltY)\r\n            evObj.tiltY = sourceEvent.tiltY;\r\n        else\r\n            evObj.tiltY = 0;\r\n\r\n        // Width and Height\r\n        if (sourceEvent.height)\r\n            evObj.height = sourceEvent.height;\r\n        else\r\n            evObj.height = 0;\r\n\r\n        if (sourceEvent.width)\r\n            evObj.width = sourceEvent.width;\r\n        else\r\n            evObj.width = 0;\r\n\r\n        // preventDefault\r\n        evObj.preventDefault = function () {\r\n            if (sourceEvent.preventDefault !== undefined)\r\n                sourceEvent.preventDefault();\r\n        };\r\n\r\n        // stopPropagation\r\n        if (evObj.stopPropagation !== undefined) {\r\n            var current = evObj.stopPropagation;\r\n            evObj.stopPropagation = function () {\r\n                if (sourceEvent.stopPropagation !== undefined)\r\n                    sourceEvent.stopPropagation();\r\n                current.call(this);\r\n            };\r\n        }\r\n\r\n        // Pointer values\r\n        evObj.pointerId = sourceEvent.pointerId;\r\n        evObj.pointerType = sourceEvent.pointerType;\r\n\r\n        switch (evObj.pointerType) {// Old spec version check\r\n            case 2:\r\n                evObj.pointerType = POINTER_TYPE_TOUCH;\r\n                break;\r\n            case 3:\r\n                evObj.pointerType = POINTER_TYPE_PEN;\r\n                break;\r\n            case 4:\r\n                evObj.pointerType = POINTER_TYPE_MOUSE;\r\n                break;\r\n        }\r\n\r\n        // Fire event\r\n        if (target)\r\n            target.dispatchEvent(evObj);\r\n        else if (sourceEvent.target) {\r\n            sourceEvent.target.dispatchEvent(evObj);\r\n        } else {\r\n            sourceEvent.srcElement.fireEvent(\"on\" + getMouseEquivalentEventName(newName), evObj); // We must fallback to mouse event for very old browsers\r\n        }\r\n    };\r\n\r\n    var generateMouseProxy = function (evt, eventName, canBubble, target, relatedTarget) {\r\n        evt.pointerId = 1;\r\n        evt.pointerType = POINTER_TYPE_MOUSE;\r\n        generateTouchClonedEvent(evt, eventName, canBubble, target, relatedTarget);\r\n    };\r\n\r\n    var generateTouchEventProxy = function (name, touchPoint, target, eventObject, canBubble, relatedTarget) {\r\n        var touchPointId = touchPoint.identifier + 2; // Just to not override mouse id\r\n\r\n        touchPoint.pointerId = touchPointId;\r\n        touchPoint.pointerType = POINTER_TYPE_TOUCH;\r\n        touchPoint.currentTarget = target;\r\n\r\n        if (eventObject.preventDefault !== undefined) {\r\n            touchPoint.preventDefault = function () {\r\n                eventObject.preventDefault();\r\n            };\r\n        }\r\n\r\n        generateTouchClonedEvent(touchPoint, name, canBubble, target, relatedTarget);\r\n    };\r\n\r\n    var checkEventRegistration = function (node, eventName) {\r\n        return node.__handjsGlobalRegisteredEvents && node.__handjsGlobalRegisteredEvents[eventName];\r\n    };\r\n    var findEventRegisteredNode = function (node, eventName) {\r\n        while (node && !checkEventRegistration(node, eventName))\r\n            node = node.parentNode;\r\n        if (node)\r\n            return node;\r\n        else if (checkEventRegistration(window, eventName))\r\n            return window;\r\n    };\r\n\r\n    var generateTouchEventProxyIfRegistered = function (eventName, touchPoint, target, eventObject, canBubble, relatedTarget) { // Check if user registered this event\r\n        if (findEventRegisteredNode(target, eventName)) {\r\n            generateTouchEventProxy(eventName, touchPoint, target, eventObject, canBubble, relatedTarget);\r\n        }\r\n    };\r\n\r\n    //var handleOtherEvent = function (eventObject, name, useLocalTarget, checkRegistration) {\r\n    //    if (eventObject.preventManipulation)\r\n    //        eventObject.preventManipulation();\r\n\r\n    //    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n    //        var touchPoint = eventObject.changedTouches[i];\r\n\r\n    //        if (useLocalTarget) {\r\n    //            previousTargets[touchPoint.identifier] = touchPoint.target;\r\n    //        }\r\n\r\n    //        if (checkRegistration) {\r\n    //            generateTouchEventProxyIfRegistered(name, touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n    //        } else {\r\n    //            generateTouchEventProxy(name, touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n    //        }\r\n    //    }\r\n    //};\r\n\r\n    var getMouseEquivalentEventName = function (eventName) {\r\n        return eventName.toLowerCase().replace(\"pointer\", \"mouse\");\r\n    };\r\n\r\n    var getPrefixEventName = function (prefix, eventName) {\r\n        var upperCaseIndex = supportedEventsNames.indexOf(eventName);\r\n        var newEventName = prefix + upperCaseEventsNames[upperCaseIndex];\r\n\r\n        return newEventName;\r\n    };\r\n\r\n    var registerOrUnregisterEvent = function (item, name, func, enable) {\r\n        if (item.__handjsRegisteredEvents === undefined) {\r\n            item.__handjsRegisteredEvents = [];\r\n        }\r\n\r\n        if (enable) {\r\n            if (item.__handjsRegisteredEvents[name] !== undefined) {\r\n                item.__handjsRegisteredEvents[name]++;\r\n                return;\r\n            }\r\n\r\n            item.__handjsRegisteredEvents[name] = 1;\r\n            item.addEventListener(name, func, false);\r\n        } else {\r\n\r\n            if (item.__handjsRegisteredEvents.indexOf(name) !== -1) {\r\n                item.__handjsRegisteredEvents[name]--;\r\n\r\n                if (item.__handjsRegisteredEvents[name] !== 0) {\r\n                    return;\r\n                }\r\n            }\r\n            item.removeEventListener(name, func);\r\n            item.__handjsRegisteredEvents[name] = 0;\r\n        }\r\n    };\r\n\r\n    var setTouchAware = function (item, eventName, enable) {\r\n        // Leaving tokens\r\n        if (!item.__handjsGlobalRegisteredEvents) {\r\n            item.__handjsGlobalRegisteredEvents = [];\r\n        }\r\n        if (enable) {\r\n            if (item.__handjsGlobalRegisteredEvents[eventName] !== undefined) {\r\n                item.__handjsGlobalRegisteredEvents[eventName]++;\r\n                return;\r\n            }\r\n            item.__handjsGlobalRegisteredEvents[eventName] = 1;\r\n        } else {\r\n            if (item.__handjsGlobalRegisteredEvents[eventName] !== undefined) {\r\n                item.__handjsGlobalRegisteredEvents[eventName]--;\r\n                if (item.__handjsGlobalRegisteredEvents[eventName] < 0) {\r\n                    item.__handjsGlobalRegisteredEvents[eventName] = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        var nameGenerator;\r\n        var eventGenerator;\r\n        if (window.MSPointerEvent) {\r\n            nameGenerator = function (name) { return getPrefixEventName(\"MS\", name); };\r\n            eventGenerator = generateTouchClonedEvent;\r\n        }\r\n        else {\r\n            nameGenerator = getMouseEquivalentEventName;\r\n            eventGenerator = generateMouseProxy;\r\n        }\r\n        switch (eventName) {\r\n            case \"pointerenter\":\r\n            case \"pointerleave\":\r\n                var targetEvent = nameGenerator(eventName);\r\n                if (item['on' + targetEvent.toLowerCase()] !== undefined) {\r\n                    registerOrUnregisterEvent(item, targetEvent, function (evt) { eventGenerator(evt, eventName); }, enable);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Intercept addEventListener calls by changing the prototype\r\n    var interceptAddEventListener = function (root) {\r\n        var current = root.prototype ? root.prototype.addEventListener : root.addEventListener;\r\n\r\n        var customAddEventListener = function (name, func, capture) {\r\n            // Branch when a PointerXXX is used\r\n            if (supportedEventsNames.indexOf(name) !== -1) {\r\n                setTouchAware(this, name, true);\r\n            }\r\n\r\n            if (current === undefined) {\r\n                this.attachEvent(\"on\" + getMouseEquivalentEventName(name), func);\r\n            } else {\r\n                current.call(this, name, func, capture);\r\n            }\r\n        };\r\n\r\n        if (root.prototype) {\r\n            root.prototype.addEventListener = customAddEventListener;\r\n        } else {\r\n            root.addEventListener = customAddEventListener;\r\n        }\r\n    };\r\n\r\n    // Intercept removeEventListener calls by changing the prototype\r\n    var interceptRemoveEventListener = function (root) {\r\n        var current = root.prototype ? root.prototype.removeEventListener : root.removeEventListener;\r\n\r\n        var customRemoveEventListener = function (name, func, capture) {\r\n            // Release when a PointerXXX is used\r\n            if (supportedEventsNames.indexOf(name) !== -1) {\r\n                setTouchAware(this, name, false);\r\n            }\r\n\r\n            if (current === undefined) {\r\n                this.detachEvent(getMouseEquivalentEventName(name), func);\r\n            } else {\r\n                current.call(this, name, func, capture);\r\n            }\r\n        };\r\n        if (root.prototype) {\r\n            root.prototype.removeEventListener = customRemoveEventListener;\r\n        } else {\r\n            root.removeEventListener = customRemoveEventListener;\r\n        }\r\n    };\r\n\r\n    // Hooks\r\n    interceptAddEventListener(window);\r\n    interceptAddEventListener(window.HTMLElement || window.Element);\r\n    interceptAddEventListener(document);\r\n    if (!navigator.isCocoonJS){\r\n        interceptAddEventListener(HTMLBodyElement);\r\n        interceptAddEventListener(HTMLDivElement);\r\n        interceptAddEventListener(HTMLImageElement);\r\n        interceptAddEventListener(HTMLUListElement);\r\n        interceptAddEventListener(HTMLAnchorElement);\r\n        interceptAddEventListener(HTMLLIElement);\r\n        interceptAddEventListener(HTMLTableElement);\r\n        if (window.HTMLSpanElement) {\r\n            interceptAddEventListener(HTMLSpanElement);\r\n        }\r\n    }\r\n    if (window.HTMLCanvasElement) {\r\n        interceptAddEventListener(HTMLCanvasElement);\r\n    }\r\n    if (!navigator.isCocoonJS && window.SVGElement) {\r\n        interceptAddEventListener(SVGElement);\r\n    }\r\n\r\n    interceptRemoveEventListener(window);\r\n    interceptRemoveEventListener(window.HTMLElement || window.Element);\r\n    interceptRemoveEventListener(document);\r\n    if (!navigator.isCocoonJS){\r\n        interceptRemoveEventListener(HTMLBodyElement);\r\n        interceptRemoveEventListener(HTMLDivElement);\r\n        interceptRemoveEventListener(HTMLImageElement);\r\n        interceptRemoveEventListener(HTMLUListElement);\r\n        interceptRemoveEventListener(HTMLAnchorElement);\r\n        interceptRemoveEventListener(HTMLLIElement);\r\n        interceptRemoveEventListener(HTMLTableElement);\r\n        if (window.HTMLSpanElement) {\r\n            interceptRemoveEventListener(HTMLSpanElement);\r\n        }\r\n    }\r\n    if (window.HTMLCanvasElement) {\r\n        interceptRemoveEventListener(HTMLCanvasElement);\r\n    }\r\n    if (!navigator.isCocoonJS && window.SVGElement) {\r\n        interceptRemoveEventListener(SVGElement);\r\n    }\r\n\r\n    // Prevent mouse event from being dispatched after Touch Events action\r\n    var touching = false;\r\n    var touchTimer = -1;\r\n\r\n    function setTouchTimer() {\r\n        touching = true;\r\n        clearTimeout(touchTimer);\r\n        touchTimer = setTimeout(function () {\r\n            touching = false;\r\n        }, 700);\r\n        // 1. Mobile browsers dispatch mouse events 300ms after touchend\r\n        // 2. Chrome for Android dispatch mousedown for long-touch about 650ms\r\n        // Result: Blocking Mouse Events for 700ms.\r\n    }\r\n\r\n    function getFirstCommonNode(x, y) {\r\n        while (x) {\r\n            if (x.contains(y))\r\n                return x;\r\n            x = x.parentNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //generateProxy receives a node to dispatch the event\r\n    function dispatchPointerEnter(currentTarget, relatedTarget, generateProxy) {\r\n        var commonParent = getFirstCommonNode(currentTarget, relatedTarget);\r\n        var node = currentTarget;\r\n        var nodelist = [];\r\n        while (node && node !== commonParent) {//target range: this to the direct child of parent relatedTarget\r\n            if (checkEventRegistration(node, \"pointerenter\")) //check if any parent node has pointerenter\r\n                nodelist.push(node);\r\n            node = node.parentNode;\r\n        }\r\n        while (nodelist.length > 0)\r\n            generateProxy(nodelist.pop());\r\n    }\r\n\r\n    //generateProxy receives a node to dispatch the event\r\n    function dispatchPointerLeave(currentTarget, relatedTarget, generateProxy) {\r\n        var commonParent = getFirstCommonNode(currentTarget, relatedTarget);\r\n        var node = currentTarget;\r\n        while (node && node !== commonParent) {//target range: this to the direct child of parent relatedTarget\r\n            if (checkEventRegistration(node, \"pointerleave\"))//check if any parent node has pointerleave\r\n                generateProxy(node);\r\n            node = node.parentNode;\r\n        }\r\n    }\r\n    \r\n    // Handling events on window to prevent unwanted super-bubbling\r\n    // All mouse events are affected by touch fallback\r\n    function applySimpleEventTunnels(nameGenerator, eventGenerator) {\r\n        [\"pointerdown\", \"pointermove\", \"pointerup\", \"pointerover\", \"pointerout\"].forEach(function (eventName) {\r\n            window.addEventListener(nameGenerator(eventName), function (evt) {\r\n                if (!touching && findEventRegisteredNode(evt.target, eventName))\r\n                    eventGenerator(evt, eventName, true);\r\n            });\r\n        });\r\n        if (window['on' + nameGenerator(\"pointerenter\").toLowerCase()] === undefined)\r\n            window.addEventListener(nameGenerator(\"pointerover\"), function (evt) {\r\n                if (touching)\r\n                    return;\r\n                var foundNode = findEventRegisteredNode(evt.target, \"pointerenter\");\r\n                if (!foundNode || foundNode === window)\r\n                    return;\r\n                else if (!foundNode.contains(evt.relatedTarget)) {\r\n                    dispatchPointerEnter(foundNode, evt.relatedTarget, function (targetNode) {\r\n                        eventGenerator(evt, \"pointerenter\", false, targetNode, evt.relatedTarget);\r\n                    });\r\n                }\r\n            });\r\n        if (window['on' + nameGenerator(\"pointerleave\").toLowerCase()] === undefined)\r\n            window.addEventListener(nameGenerator(\"pointerout\"), function (evt) {\r\n                if (touching)\r\n                    return;\r\n                var foundNode = findEventRegisteredNode(evt.target, \"pointerleave\");\r\n                if (!foundNode || foundNode === window)\r\n                    return;\r\n                else if (!foundNode.contains(evt.relatedTarget)) {\r\n                    dispatchPointerLeave(foundNode, evt.relatedTarget, function (targetNode) {\r\n                        eventGenerator(evt, \"pointerleave\", false, targetNode, evt.relatedTarget);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    (function () {\r\n        if (window.MSPointerEvent) {\r\n            //IE 10\r\n            applySimpleEventTunnels(\r\n                function (name) { return getPrefixEventName(\"MS\", name); },\r\n                generateTouchClonedEvent);\r\n        }\r\n        else {\r\n            applySimpleEventTunnels(getMouseEquivalentEventName, generateMouseProxy);\r\n\r\n            // Handling move on window to detect pointerleave/out/over\r\n            if (window.ontouchstart !== undefined) {\r\n                window.addEventListener('touchstart', function (eventObject) {\r\n                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n                        var touchPoint = eventObject.changedTouches[i];\r\n                        previousTargets[touchPoint.identifier] = touchPoint.target;\r\n\r\n                        generateTouchEventProxyIfRegistered(\"pointerover\", touchPoint, touchPoint.target, eventObject, true);\r\n\r\n                        //pointerenter should not be bubbled\r\n                        dispatchPointerEnter(touchPoint.target, null, function (targetNode) {\r\n                            generateTouchEventProxy(\"pointerenter\", touchPoint, targetNode, eventObject, false);\r\n                        });\r\n\r\n                        generateTouchEventProxyIfRegistered(\"pointerdown\", touchPoint, touchPoint.target, eventObject, true);\r\n                    }\r\n                    setTouchTimer();\r\n                });\r\n\r\n                window.addEventListener('touchend', function (eventObject) {\r\n                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n                        var touchPoint = eventObject.changedTouches[i];\r\n                        var currentTarget = previousTargets[touchPoint.identifier];\r\n\r\n                        generateTouchEventProxyIfRegistered(\"pointerup\", touchPoint, currentTarget, eventObject, true);\r\n                        generateTouchEventProxyIfRegistered(\"pointerout\", touchPoint, currentTarget, eventObject, true);\r\n\r\n                        //pointerleave should not be bubbled\r\n                        dispatchPointerLeave(currentTarget, null, function (targetNode) {\r\n                            generateTouchEventProxy(\"pointerleave\", touchPoint, targetNode, eventObject, false);\r\n                        });\r\n                    }\r\n                    setTouchTimer();\r\n                });\r\n\r\n                window.addEventListener('touchmove', function (eventObject) {\r\n                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n                        var touchPoint = eventObject.changedTouches[i];\r\n                        var newTarget = document.elementFromPoint(touchPoint.clientX, touchPoint.clientY);\r\n                        var currentTarget = previousTargets[touchPoint.identifier];\r\n\r\n                        // If force preventDefault\r\n                        if (currentTarget && checkPreventDefault(currentTarget) === true)\r\n                            eventObject.preventDefault();\r\n\r\n                        generateTouchEventProxyIfRegistered(\"pointermove\", touchPoint, currentTarget, eventObject, true);\r\n                        if (!navigator.isCocoonJS){\r\n                            var newTarget = document.elementFromPoint(touchPoint.clientX, touchPoint.clientY);\r\n                            if (currentTarget === newTarget) {\r\n                                continue; // We can skip this as the pointer is effectively over the current target\r\n                            }\r\n\r\n                            if (currentTarget) {\r\n                                // Raise out\r\n                                generateTouchEventProxyIfRegistered(\"pointerout\", touchPoint, currentTarget, eventObject, true, newTarget);\r\n\r\n                                // Raise leave\r\n                                if (!currentTarget.contains(newTarget)) { // Leave must be called if the new target is not a child of the current\r\n                                    dispatchPointerLeave(currentTarget, newTarget, function (targetNode) {\r\n                                        generateTouchEventProxy(\"pointerleave\", touchPoint, targetNode, eventObject, false, newTarget);\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            if (newTarget) {\r\n                                // Raise over\r\n                                generateTouchEventProxyIfRegistered(\"pointerover\", touchPoint, newTarget, eventObject, true, currentTarget);\r\n\r\n                                // Raise enter\r\n                                if (!newTarget.contains(currentTarget)) { // Leave must be called if the new target is not the parent of the current\r\n                                    dispatchPointerEnter(newTarget, currentTarget, function (targetNode) {\r\n                                        generateTouchEventProxy(\"pointerenter\", touchPoint, targetNode, eventObject, false, currentTarget);\r\n                                    })\r\n                                }\r\n                            }\r\n                            previousTargets[touchPoint.identifier] = newTarget;\r\n                        }\r\n                    }\r\n                    setTouchTimer();\r\n                });\r\n\r\n                window.addEventListener('touchcancel', function (eventObject) {\r\n                    for (var i = 0; i < eventObject.changedTouches.length; ++i) {\r\n                        var touchPoint = eventObject.changedTouches[i];\r\n\r\n                        generateTouchEventProxyIfRegistered(\"pointercancel\", touchPoint, previousTargets[touchPoint.identifier], eventObject, true);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    })();\r\n    \r\n\r\n    // Extension to navigator\r\n    if (navigator.pointerEnabled === undefined) {\r\n\r\n        // Indicates if the browser will fire pointer events for pointing input\r\n        navigator.pointerEnabled = true;\r\n\r\n        // IE\r\n        if (navigator.msPointerEnabled) {\r\n            navigator.maxTouchPoints = navigator.msMaxTouchPoints;\r\n        }\r\n    }\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/handjs/hand.base.js\n ** module id = 164\n ** module chunks = 1\n **/","(function () {\n\n/*** Variables ***/\n\n  var win = window,\n    doc = document,\n    attrProto = {\n      setAttribute: Element.prototype.setAttribute,\n      removeAttribute: Element.prototype.removeAttribute\n    },\n    hasShadow = Element.prototype.createShadowRoot,\n    container = doc.createElement('div'),\n    noop = function(){},\n    trueop = function(){ return true; },\n    regexReplaceCommas = /,/g,\n    regexCamelToDash = /([a-z])([A-Z])/g,\n    regexPseudoParens = /\\(|\\)/g,\n    regexPseudoCapture = /:(\\w+)\\u276A(.+?(?=\\u276B))|:(\\w+)/g,\n    regexDigits = /(\\d+)/g,\n    keypseudo = {\n      action: function (pseudo, event) {\n        return pseudo.value.match(regexDigits).indexOf(String(event.keyCode)) > -1 == (pseudo.name == 'keypass') || null;\n      }\n    },\n    /*\n      - The prefix object generated here is added to the xtag object as xtag.prefix later in the code\n      - Prefix provides a variety of prefix variations for the browser in which your code is running\n      - The 4 variations of prefix are as follows:\n        * prefix.dom: the correct prefix case and form when used on DOM elements/style properties\n        * prefix.lowercase: a lowercase version of the prefix for use in various user-code situations\n        * prefix.css: the lowercase, dashed version of the prefix\n        * prefix.js: addresses prefixed APIs present in global and non-Element contexts\n    */\n    prefix = (function () {\n      var styles = win.getComputedStyle(doc.documentElement, ''),\n          pre = (Array.prototype.slice\n            .call(styles)\n            .join('')\n            .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n          )[1];\n      return {\n        dom: pre == 'ms' ? 'MS' : pre,\n        lowercase: pre,\n        css: '-' + pre + '-',\n        js: pre == 'ms' ? pre : pre[0].toUpperCase() + pre.substr(1)\n      };\n    })(),\n    matchSelector = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype[prefix.lowercase + 'MatchesSelector'];\n\n  var issetCustomEvent = false;\n  var customEvent;\n  try {\n    customEvent = doc.createEvent('CustomEvent');\n    issetCustomEvent = true;\n  } catch(e) {\n    customEvent = doc.createEvent('Event');\n  }\n\n/*** Functions ***/\n\n// Utilities\n\n  /*\n    This is an enhanced typeof check for all types of objects. Where typeof would normaly return\n    'object' for many common DOM objects (like NodeLists and HTMLCollections).\n    - For example: typeOf(document.children) will correctly return 'htmlcollection'\n  */\n  var typeCache = {},\n      typeString = typeCache.toString,\n      typeRegexp = /\\s([a-zA-Z]+)/;\n  function typeOf(obj) {\n    var type = typeString.call(obj);\n    return typeCache[type] || (typeCache[type] = type.match(typeRegexp)[1].toLowerCase());\n  }\n\n  function clone(item, type){\n    var fn = clone[type || typeOf(item)];\n    return fn ? fn(item) : item;\n  }\n    clone.object = function(src){\n      var obj = {};\n      for (var key in src) obj[key] = clone(src[key]);\n      return obj;\n    };\n    clone.array = function(src){\n      var i = src.length, array = new Array(i);\n      while (i--) array[i] = clone(src[i]);\n      return array;\n    };\n\n  /*\n    The toArray() method allows for conversion of any object to a true array. For types that\n    cannot be converted to an array, the method returns a 1 item array containing the passed-in object.\n  */\n  var unsliceable = { 'undefined': 1, 'null': 1, 'number': 1, 'boolean': 1, 'string': 1, 'function': 1 };\n  function toArray(obj){\n    return unsliceable[typeOf(obj)] ? [obj] : Array.prototype.slice.call(obj, 0);\n  }\n\n// DOM\n\n  var str = '';\n  function query(element, selector){\n    return (selector || str).length ? toArray(element.querySelectorAll(selector)) : [];\n  }\n\n// Pseudos\n\n  function parsePseudo(fn){fn();}\n\n// Mixins\n\n  function mergeOne(source, key, current){\n    var type = typeOf(current);\n    if (type == 'object' && typeOf(source[key]) == 'object') xtag.merge(source[key], current);\n    else source[key] = clone(current, type);\n    return source;\n  }\n\n  function mergeMixin(tag, original, mixin, name) {\n    var key, keys = {};\n    for (var z in original) keys[z.split(':')[0]] = z;\n    for (z in mixin) {\n      key = keys[z.split(':')[0]];\n      if (typeof original[key] == 'function') {\n        if (!key.match(':mixins')) {\n          original[key + ':mixins'] = original[key];\n          delete original[key];\n          key = key + ':mixins';\n        }\n        original[key].__mixin__ = xtag.applyPseudos(z + (z.match(':mixins') ? '' : ':mixins'), mixin[z], tag.pseudos, original[key].__mixin__);\n      }\n      else {\n        original[z] = mixin[z];\n        delete original[key];\n      }\n    }\n  }\n\n  var uniqueMixinCount = 0;\n  function addMixin(tag, original, mixin){\n    for (var z in mixin){\n      original[z + ':__mixin__(' + (uniqueMixinCount++) + ')'] = xtag.applyPseudos(z, mixin[z], tag.pseudos);\n    }\n  }\n\n  function resolveMixins(mixins, output){\n    var index = mixins.length;\n    while (index--){\n      output.unshift(mixins[index]);\n      if (xtag.mixins[mixins[index]].mixins) resolveMixins(xtag.mixins[mixins[index]].mixins, output);\n    }\n    return output;\n  }\n\n  function applyMixins(tag) {\n    resolveMixins(tag.mixins, []).forEach(function(name){\n      var mixin = xtag.mixins[name];\n      for (var type in mixin) {\n        var item = mixin[type],\n            original = tag[type];\n        if (!original) tag[type] = item;\n        else {\n          switch (type){\n            case 'mixins': break;\n            case 'events': addMixin(tag, original, item); break;\n            case 'accessors':\n            case 'prototype':\n              for (var z in item) {\n                if (!original[z]) original[z] = item[z];\n                else mergeMixin(tag, original[z], item[z], name);\n              }\n              break;\n            default: mergeMixin(tag, original, item, name);\n          }\n        }\n      }\n    });\n    return tag;\n  }\n\n// Events\n\n  function delegateAction(pseudo, event) {\n    var match,\n        target = event.target,\n        root = event.currentTarget;\n    while (!match && target && target != root) {\n      if (target.tagName && matchSelector.call(target, pseudo.value)) match = target;\n      target = target.parentNode;\n    }\n    if (!match && root.tagName && matchSelector.call(root, pseudo.value)) match = root;\n    return match ? pseudo.listener = pseudo.listener.bind(match) : null;\n  }\n\n  function touchFilter(event){\n    return event.button === 0;\n  }\n\n  function writeProperty(key, event, base, desc){\n    if (desc) event[key] = base[key];\n    else Object.defineProperty(event, key, {\n      writable: true,\n      enumerable: true,\n      value: base[key]\n    });\n  }\n\n  var skipProps = {};\n  for (var z in customEvent) skipProps[z] = 1;\n  function inheritEvent(event, base){\n    var desc = Object.getOwnPropertyDescriptor(event, 'target');\n    for (var z in base) {\n      if (!skipProps[z]) writeProperty(z, event, base, desc);\n    }\n    event.baseEvent = base;\n  }\n\n// Accessors\n\n  function modAttr(element, attr, name, value, method){\n    attrProto[method].call(element, name, attr && attr.boolean ? '' : value);\n  }\n\n  function syncAttr(element, attr, name, value, method){\n    if (attr && (attr.property || attr.selector)) {\n      var nodes = attr.property ? [element.xtag[attr.property]] : attr.selector ? xtag.query(element, attr.selector) : [],\n          index = nodes.length;\n      while (index--) nodes[index][method](name, value);\n    }\n  }\n\n  function attachProperties(tag, prop, z, accessor, attr, name){\n    var key = z.split(':'), type = key[0];\n    if (type == 'get') {\n      key[0] = prop;\n      tag.prototype[prop].get = xtag.applyPseudos(key.join(':'), accessor[z], tag.pseudos, accessor[z]);\n    }\n    else if (type == 'set') {\n      key[0] = prop;\n      var setter = tag.prototype[prop].set = xtag.applyPseudos(key.join(':'), attr ? function(value){\n        var old, method = 'setAttribute';\n        if (attr.boolean){\n          value = !!value;\n          old = this.hasAttribute(name);\n          if (!value) method = 'removeAttribute';\n        }\n        else {\n          value = attr.validate ? attr.validate.call(this, value) : value;\n          old = this.getAttribute(name);\n        }\n        modAttr(this, attr, name, value, method);\n        accessor[z].call(this, value, old);\n        syncAttr(this, attr, name, value, method);\n      } : accessor[z] ? function(value){\n        accessor[z].call(this, value);\n      } : null, tag.pseudos, accessor[z]);\n\n      if (attr) attr.setter = accessor[z];\n    }\n    else tag.prototype[prop][z] = accessor[z];\n  }\n\n  function parseAccessor(tag, prop){\n    tag.prototype[prop] = {};\n    var accessor = tag.accessors[prop],\n        attr = accessor.attribute,\n        name;\n\n    if (attr) {\n      name = attr.name = (attr ? (attr.name || prop.replace(regexCamelToDash, '$1-$2')) : prop).toLowerCase();\n      attr.key = prop;\n      tag.attributes[name] = attr;\n    }\n\n    for (var z in accessor) attachProperties(tag, prop, z, accessor, attr, name);\n\n    if (attr) {\n      if (!tag.prototype[prop].get) {\n        var method = (attr.boolean ? 'has' : 'get') + 'Attribute';\n        tag.prototype[prop].get = function(){\n          return this[method](name);\n        };\n      }\n      if (!tag.prototype[prop].set) tag.prototype[prop].set = function(value){\n        value = attr.boolean ? !!value : attr.validate ? attr.validate.call(this, value) : value;\n        var method = attr.boolean ? (value ? 'setAttribute' : 'removeAttribute') : 'setAttribute';\n        modAttr(this, attr, name, value, method);\n        syncAttr(this, attr, name, value, method);\n      };\n    }\n  }\n\n  var unwrapComment = /\\/\\*!?(?:\\@preserve)?[ \\t]*(?:\\r\\n|\\n)([\\s\\S]*?)(?:\\r\\n|\\n)\\s*\\*\\//;\n  function parseMultiline(fn){\n    return typeof fn == 'function' ? unwrapComment.exec(fn.toString())[1] : fn;\n  }\n\n/*** X-Tag Object Definition ***/\n\n  var xtag = {\n    tags: {},\n    defaultOptions: {\n      pseudos: [],\n      mixins: [],\n      events: {},\n      methods: {},\n      accessors: {},\n      lifecycle: {},\n      attributes: {},\n      'prototype': {\n        xtag: {\n          get: function(){\n            return this.__xtag__ ? this.__xtag__ : (this.__xtag__ = { data: {} });\n          }\n        }\n      }\n    },\n    register: function (name, options) {\n      var _name;\n      if (typeof name == 'string') _name = name.toLowerCase();\n      else throw 'First argument must be a Custom Element string name';\n      xtag.tags[_name] = options || {};\n\n      var basePrototype = options.prototype;\n      delete options.prototype;\n      var tag = xtag.tags[_name].compiled = applyMixins(xtag.merge({}, xtag.defaultOptions, options));\n\n      for (var z in tag.events) tag.events[z] = xtag.parseEvent(z, tag.events[z]);\n      for (z in tag.lifecycle) tag.lifecycle[z.split(':')[0]] = xtag.applyPseudos(z, tag.lifecycle[z], tag.pseudos, tag.lifecycle[z]);\n      for (z in tag.methods) tag.prototype[z.split(':')[0]] = { value: xtag.applyPseudos(z, tag.methods[z], tag.pseudos, tag.methods[z]), enumerable: true };\n      for (z in tag.accessors) parseAccessor(tag, z);\n\n      if (tag.shadow) tag.shadow = tag.shadow.nodeName ? tag.shadow : xtag.createFragment(tag.shadow);\n      if (tag.content) tag.content = tag.content.nodeName ? tag.content.innerHTML : parseMultiline(tag.content);\n      var created = tag.lifecycle.created;\n      var finalized = tag.lifecycle.finalized;\n      tag.prototype.createdCallback = {\n        enumerable: true,\n        value: function(){\n          var element = this;\n          if (tag.shadow && hasShadow) this.createShadowRoot().appendChild(tag.shadow.cloneNode(true));\n          if (tag.content) this.appendChild(document.createElement('div')).outerHTML = tag.content;\n          var output = created ? created.apply(this, arguments) : null;\n          xtag.addEvents(this, tag.events);\n          for (var name in tag.attributes) {\n            var attr = tag.attributes[name],\n                hasAttr = this.hasAttribute(name),\n                hasDefault = attr.def !== undefined;\n            if (hasAttr || attr.boolean || hasDefault) {\n              this[attr.key] = attr.boolean ? hasAttr : !hasAttr && hasDefault ? attr.def : this.getAttribute(name);\n            }\n          }\n          tag.pseudos.forEach(function(obj){\n            obj.onAdd.call(element, obj);\n          });\n          this.xtagComponentReady = true;\n          if (finalized) finalized.apply(this, arguments);\n          return output;\n        }\n      };\n\n      var inserted = tag.lifecycle.inserted,\n          removed = tag.lifecycle.removed;\n      if (inserted || removed) {\n        tag.prototype.attachedCallback = { value: function(){\n          if (removed) this.xtag.__parentNode__ = this.parentNode;\n          if (inserted) return inserted.apply(this, arguments);\n        }, enumerable: true };\n      }\n      if (removed) {\n        tag.prototype.detachedCallback = { value: function(){\n          var args = toArray(arguments);\n          args.unshift(this.xtag.__parentNode__);\n          var output = removed.apply(this, args);\n          delete this.xtag.__parentNode__;\n          return output;\n        }, enumerable: true };\n      }\n      if (tag.lifecycle.attributeChanged) tag.prototype.attributeChangedCallback = { value: tag.lifecycle.attributeChanged, enumerable: true };\n\n      tag.prototype.setAttribute = {\n        writable: true,\n        enumerable: true,\n        value: function (name, value){\n          var old;\n          var _name = name.toLowerCase();\n          var attr = tag.attributes[_name];\n          if (attr) {\n            old = this.getAttribute(_name);\n            value = attr.boolean ? '' : attr.validate ? attr.validate.call(this, value) : value;\n          }\n          modAttr(this, attr, _name, value, 'setAttribute');\n          if (attr) {\n            if (attr.setter) attr.setter.call(this, attr.boolean ? true : value, old);\n            syncAttr(this, attr, _name, value, 'setAttribute');\n          }\n        }\n      };\n\n      tag.prototype.removeAttribute = {\n        writable: true,\n        enumerable: true,\n        value: function (name){\n          var _name = name.toLowerCase();\n          var attr = tag.attributes[_name];\n          var old = this.hasAttribute(_name);\n          modAttr(this, attr, _name, '', 'removeAttribute');\n          if (attr) {\n            if (attr.setter) attr.setter.call(this, attr.boolean ? false : undefined, old);\n            syncAttr(this, attr, _name, '', 'removeAttribute');\n          }\n        }\n      };\n\n      var elementProto = basePrototype ?\n            basePrototype :\n            tag['extends'] ?\n            Object.create(doc.createElement(tag['extends']).constructor).prototype :\n            win.HTMLElement.prototype;\n\n      var definition = {\n        'prototype': Object.create(elementProto, tag.prototype)\n      };\n      if (tag['extends']) {\n        definition['extends'] = tag['extends'];\n      }\n      var reg = doc.registerElement(_name, definition);\n      return reg;\n    },\n\n    /* Exposed Variables */\n\n    mixins: {},\n    prefix: prefix,\n    captureEvents: { focus: 1, blur: 1, scroll: 1, DOMMouseScroll: 1 },\n    customEvents: {\n      animationstart: {\n        attach: [prefix.dom + 'AnimationStart']\n      },\n      animationend: {\n        attach: [prefix.dom + 'AnimationEnd']\n      },\n      transitionend: {\n        attach: [prefix.dom + 'TransitionEnd']\n      },\n      move: {\n        attach: ['pointermove']\n      },\n      enter: {\n        attach: ['pointerenter']\n      },\n      leave: {\n        attach: ['pointerleave']\n      },\n      scrollwheel: {\n        attach: ['DOMMouseScroll', 'mousewheel'],\n        condition: function(event){\n          event.delta = event.wheelDelta ? event.wheelDelta / 40 : Math.round(event.detail / 3.5 * -1);\n          return true;\n        }\n      },\n      tap: {\n        attach: ['pointerdown', 'pointerup'],\n        condition: function(event, custom){\n          if (event.type == 'pointerdown') {\n            custom.startX = event.clientX;\n            custom.startY = event.clientY;\n          }\n          else if (event.button === 0 &&\n                   Math.abs(custom.startX - event.clientX) < 10 &&\n                   Math.abs(custom.startY - event.clientY) < 10) return true;\n        }\n      },\n      tapstart: {\n        attach: ['pointerdown'],\n        condition: touchFilter\n      },\n      tapend: {\n        attach: ['pointerup'],\n        condition: touchFilter\n      },\n      tapmove: {\n        attach: ['pointerdown', 'pointerup'],\n        condition: function(event, custom){\n          if (event.type == 'pointerdown') {\n            if (!custom.moveListener) custom.moveListener = xtag.addEvent(this, 'pointermove', custom.listener);\n          }\n          else if (event.type == 'pointerup') {\n            xtag.removeEvent(this, custom.moveListener);\n            custom.moveListener = null;\n          }\n          else return true;\n        }\n      },\n      taphold: {\n        attach: ['pointerdown', 'pointerup'],\n        condition: function(event, custom){\n          if (event.type == 'pointerdown') {\n            (custom.pointers = custom.pointers || {})[event.pointerId] = setTimeout(\n              xtag.fireEvent.bind(null, this, 'taphold'),\n              custom.duration || 1000\n            );\n          }\n          else if (event.type == 'pointerup') {\n            if (custom.pointers) {\n              clearTimeout(custom.pointers[event.pointerId]);\n              delete custom.pointers[event.pointerId];\n            }\n          }\n          else return true;\n        }\n      }\n    },\n    pseudos: {\n      __mixin__: {},\n      mixins: {\n        onCompiled: function(fn, pseudo){\n          var mixin = pseudo.source && pseudo.source.__mixin__ || pseudo.source;\n          if (mixin) switch (pseudo.value) {\n            case null: case '': case 'before': return function(){\n              mixin.apply(this, arguments);\n              return fn.apply(this, arguments);\n            };\n            case 'after': return function(){\n              var returns = fn.apply(this, arguments);\n              mixin.apply(this, arguments);\n              return returns;\n            };\n            case 'none': return fn;\n          }\n          else return fn;\n        }\n      },\n      keypass: keypseudo,\n      keyfail: keypseudo,\n      delegate: {\n        action: delegateAction\n      },\n      preventable: {\n        action: function (pseudo, event) {\n          return !event.defaultPrevented;\n        }\n      },\n      duration: {\n        onAdd: function(pseudo){\n          pseudo.source.duration = Number(pseudo.value);\n        }\n      },\n      capture: {\n        onCompiled: function(fn, pseudo){\n          if (pseudo.source) pseudo.source.capture = true;\n        }\n      }\n    },\n\n    /* UTILITIES */\n\n    clone: clone,\n    typeOf: typeOf,\n    toArray: toArray,\n\n    wrap: function (original, fn) {\n      return function(){\n        var output = original.apply(this, arguments);\n        fn.apply(this, arguments);\n        return output;\n      };\n    },\n    /*\n      Recursively merges one object with another. The first argument is the destination object,\n      all other objects passed in as arguments are merged from right to left, conflicts are overwritten\n    */\n    merge: function(source, k, v){\n      if (typeOf(k) == 'string') return mergeOne(source, k, v);\n      for (var i = 1, l = arguments.length; i < l; i++){\n        var object = arguments[i];\n        for (var key in object) mergeOne(source, key, object[key]);\n      }\n      return source;\n    },\n\n    /*\n      ----- This should be simplified! -----\n      Generates a random ID string\n    */\n    uid: function(){\n      return Math.random().toString(36).substr(2,10);\n    },\n\n    /* DOM */\n\n    query: query,\n\n    skipTransition: function(element, fn, bind){\n      var prop = prefix.js + 'TransitionProperty';\n      element.style[prop] = element.style.transitionProperty = 'none';\n      var callback = fn ? fn.call(bind || element) : null;\n      return xtag.skipFrame(function(){\n        element.style[prop] = element.style.transitionProperty = '';\n        if (callback) callback.call(bind || element);\n      });\n    },\n\n    requestFrame: (function(){\n      var raf = win.requestAnimationFrame ||\n                win[prefix.lowercase + 'RequestAnimationFrame'] ||\n                function(fn){ return win.setTimeout(fn, 20); };\n      return function(fn){ return raf(fn); };\n    })(),\n\n    cancelFrame: (function(){\n      var cancel = win.cancelAnimationFrame ||\n                   win[prefix.lowercase + 'CancelAnimationFrame'] ||\n                   win.clearTimeout;\n      return function(id){ return cancel(id); };\n    })(),\n\n    skipFrame: function(fn){\n      var id = xtag.requestFrame(function(){ id = xtag.requestFrame(fn); });\n      return id;\n    },\n\n    matchSelector: function (element, selector) {\n      return matchSelector.call(element, selector);\n    },\n\n    set: function (element, method, value) {\n      element[method] = value;\n      if (window.CustomElements) CustomElements.upgradeAll(element);\n    },\n\n    innerHTML: function(el, html){\n      xtag.set(el, 'innerHTML', html);\n    },\n\n    hasClass: function (element, klass) {\n      return element.className.split(' ').indexOf(klass.trim())>-1;\n    },\n\n    addClass: function (element, klass) {\n      var list = element.className.trim().split(' ');\n      klass.trim().split(' ').forEach(function (name) {\n        if (!~list.indexOf(name)) list.push(name);\n      });\n      element.className = list.join(' ').trim();\n      return element;\n    },\n\n    removeClass: function (element, klass) {\n      var classes = klass.trim().split(' ');\n      element.className = element.className.trim().split(' ').filter(function (name) {\n        return name && !~classes.indexOf(name);\n      }).join(' ');\n      return element;\n    },\n\n    toggleClass: function (element, klass) {\n      return xtag[xtag.hasClass(element, klass) ? 'removeClass' : 'addClass'].call(null, element, klass);\n    },\n\n    /*\n      Runs a query on only the children of an element\n    */\n    queryChildren: function (element, selector) {\n      var id = element.id,\n          attr = '#' + (element.id = id || 'x_' + xtag.uid()) + ' > ',\n          parent = element.parentNode || !container.appendChild(element);\n      selector = attr + (selector + '').replace(regexReplaceCommas, ',' + attr);\n      var result = element.parentNode.querySelectorAll(selector);\n      if (!id) element.removeAttribute('id');\n      if (!parent) container.removeChild(element);\n      return toArray(result);\n    },\n\n    /*\n      Creates a document fragment with the content passed in - content can be\n      a string of HTML, an element, or an array/collection of elements\n    */\n    createFragment: function(content) {\n      var template = document.createElement('template');\n      if (content) {\n        if (content.nodeName) toArray(arguments).forEach(function(e){\n          template.content.appendChild(e);\n        });\n        else template.innerHTML = parseMultiline(content);\n      }\n      return document.importNode(template.content, true);\n    },\n\n    /*\n      Removes an element from the DOM for more performant node manipulation. The element\n      is placed back into the DOM at the place it was taken from.\n    */\n    manipulate: function(element, fn){\n      var next = element.nextSibling,\n          parent = element.parentNode,\n          returned = fn.call(element) || element;\n      if (next) parent.insertBefore(returned, next);\n      else parent.appendChild(returned);\n    },\n\n    /* PSEUDOS */\n\n    applyPseudos: function(key, fn, target, source) {\n      var listener = fn,\n          pseudos = {};\n      if (key.match(':')) {\n        var matches = [],\n            valueFlag = 0;\n        key.replace(regexPseudoParens, function(match){\n          if (match == '(') return ++valueFlag == 1 ? '\\u276A' : '(';\n          return !--valueFlag ? '\\u276B' : ')';\n        }).replace(regexPseudoCapture, function(z, name, value, solo){\n          matches.push([name || solo, value]);\n        });\n        var i = matches.length;\n        while (i--) parsePseudo(function(){\n          var name = matches[i][0],\n              value = matches[i][1];\n          if (!xtag.pseudos[name]) throw \"pseudo not found: \" + name + \" \" + value;\n          value = (value === '' || typeof value == 'undefined') ? null : value;\n          var pseudo = pseudos[i] = Object.create(xtag.pseudos[name]);\n          pseudo.key = key;\n          pseudo.name = name;\n          pseudo.value = value;\n          pseudo['arguments'] = (value || '').split(',');\n          pseudo.action = pseudo.action || trueop;\n          pseudo.source = source;\n          pseudo.onAdd = pseudo.onAdd || noop;\n          pseudo.onRemove = pseudo.onRemove || noop;\n          var original = pseudo.listener = listener;\n          listener = function(){\n            var output = pseudo.action.apply(this, [pseudo].concat(toArray(arguments)));\n            if (output === null || output === false) return output;\n            output = pseudo.listener.apply(this, arguments);\n            pseudo.listener = original;\n            return output;\n          };\n          if (!target) pseudo.onAdd.call(fn, pseudo);\n          else target.push(pseudo);\n        });\n      }\n      for (var z in pseudos) {\n        if (pseudos[z].onCompiled) listener = pseudos[z].onCompiled(listener, pseudos[z]) || listener;\n      }\n      return listener;\n    },\n\n    removePseudos: function(target, pseudos){\n      pseudos.forEach(function(obj){\n        obj.onRemove.call(target, obj);\n      });\n    },\n\n  /*** Events ***/\n\n    parseEvent: function(type, fn) {\n      var pseudos = type.split(':'),\n          key = pseudos.shift(),\n          custom = xtag.customEvents[key],\n          event = xtag.merge({\n            type: key,\n            stack: noop,\n            condition: trueop,\n            capture: xtag.captureEvents[key],\n            attach: [],\n            _attach: [],\n            pseudos: '',\n            _pseudos: [],\n            onAdd: noop,\n            onRemove: noop\n          }, custom || {});\n      event.attach = toArray(event.base || event.attach);\n      event.chain = key + (event.pseudos.length ? ':' + event.pseudos : '') + (pseudos.length ? ':' + pseudos.join(':') : '');\n      var stack = xtag.applyPseudos(event.chain, fn, event._pseudos, event);\n      event.stack = function(e){\n        e.currentTarget = e.currentTarget || this;\n        var detail = e.detail || {};\n        if (!detail.__stack__) return stack.apply(this, arguments);\n        else if (detail.__stack__ == stack) {\n          e.stopPropagation();\n          e.cancelBubble = true;\n          return stack.apply(this, arguments);\n        }\n      };\n      event.listener = function(e){\n        var args = toArray(arguments),\n            output = event.condition.apply(this, args.concat([event]));\n        if (!output) return output;\n        // The second condition in this IF is to address the following Blink regression: https://code.google.com/p/chromium/issues/detail?id=367537\n        // Remove this when affected browser builds with this regression fall below 5% marketshare\n        if (e.type != key && (e.baseEvent && e.type != e.baseEvent.type)) {\n          xtag.fireEvent(e.target, key, {\n            baseEvent: e,\n            detail: output !== true && (output.__stack__ = stack) ? output : { __stack__: stack }\n          });\n        }\n        else return event.stack.apply(this, args);\n      };\n      event.attach.forEach(function(name) {\n        event._attach.push(xtag.parseEvent(name, event.listener));\n      });\n      return event;\n    },\n\n    addEvent: function (element, type, fn, capture) {\n      var event = typeof fn == 'function' ? xtag.parseEvent(type, fn) : fn;\n      event._pseudos.forEach(function(obj){\n        obj.onAdd.call(element, obj);\n      });\n      event._attach.forEach(function(obj) {\n        xtag.addEvent(element, obj.type, obj);\n      });\n      event.onAdd.call(element, event, event.listener);\n      element.addEventListener(event.type, event.stack, capture || event.capture);\n      return event;\n    },\n\n    addEvents: function (element, obj) {\n      var events = {};\n      for (var z in obj) {\n        events[z] = xtag.addEvent(element, z, obj[z]);\n      }\n      return events;\n    },\n\n    removeEvent: function (element, type, event) {\n      event = event || type;\n      event.onRemove.call(element, event, event.listener);\n      xtag.removePseudos(element, event._pseudos);\n      event._attach.forEach(function(obj) {\n        xtag.removeEvent(element, obj);\n      });\n      element.removeEventListener(event.type, event.stack, false);\n    },\n\n    removeEvents: function(element, obj){\n      for (var z in obj) xtag.removeEvent(element, obj[z]);\n    },\n\n    fireEvent: function(element, type, options){\n      options = options || {};\n\n      var event;\n      var bubbles = options.bubbles !== false;\n      var cancelable = options.cancelable !== false;\n\n      if (issetCustomEvent) {\n        event = doc.createEvent('CustomEvent');\n        event.initCustomEvent(type, bubbles, cancelable, options.detail);\n\n      } else {\n        event = doc.createEvent('Event');\n        event.initEvent(type, bubbles, cancelable);\n        event.detail = options.detail;\n      }\n\n      if (options.baseEvent) inheritEvent(event, options.baseEvent);\n\n      element.dispatchEvent(event);\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) define(xtag);\n  else if (typeof module !== 'undefined' && module.exports) module.exports = xtag;\n  else win.xtag = xtag;\n\n  doc.addEventListener('WebComponentsReady', function(){\n    xtag.fireEvent(doc.body, 'DOMComponentsLoaded');\n  }, false);\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/x-tag/src/core.js\n ** module id = 165\n ** module chunks = 1\n **/"],"sourceRoot":""}